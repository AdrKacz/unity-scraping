[
  {
    "snippet": "VisionUtility.GetColorBlindSafePalette(${1:palette}, ${2:minimumLuminance}, ${3:maximumLuminance});",
    "description": "Gets a palette of colors that should be distinguishable for normal vision, deuteranopia, protanopia, and tritanopia.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Accessibility.VisionUtility.GetColorBlindSafePalette.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.GetPlacementState();",
    "description": "Returns the placement state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.GetPlacementState.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.GetPlacementState(${1:placementId});",
    "description": "Returns the placement state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.GetPlacementState.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Initialize(${1:gameId});",
    "description": "Manually initializes the advertisement system. Normally this is done from editor, and you should only call this method if you are using UnityAds with automatic initialization disabled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Initialize.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Initialize(${1:gameId}, ${2:testMode});",
    "description": "Manually initializes the advertisement system. Normally this is done from editor, and you should only call this method if you are using UnityAds with automatic initialization disabled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Initialize.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.IsReady();",
    "description": "Returns whether an advertisement is ready to be shown. Placements are configured per game in the UnityAds admin site, where you can also set your default placement.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.IsReady.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.IsReady(${1:placementId});",
    "description": "Returns whether an advertisement is ready to be shown. Placements are configured per game in the UnityAds admin site, where you can also set your default placement.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.IsReady.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.SetMetaData(${1:metaData});",
    "description": "Sets various metadata for Unity Ads.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.SetMetaData.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Show();",
    "description": "Show an advertisement in your project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Show.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Show(${1:showOptions});",
    "description": "Show an advertisement in your project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Show.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Show(${1:placementId});",
    "description": "Show an advertisement in your project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Show.html",
    "type": "method"
  },
  {
    "snippet": "Advertisement.Show(${1:placementId}, ${2:showOptions});",
    "description": "Show an advertisement in your project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.Advertisement.Show.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.AddLink(${1:link});",
    "description": "Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.AddLink.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.AddLink(${1:link}, ${2:position}, ${3:rotation});",
    "description": "Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.AddLink.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.AddNavMeshData(${1:navMeshData});",
    "description": "Adds the specified NavMeshData to the game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.AddNavMeshData.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.AddNavMeshData(${1:navMeshData}, ${2:position}, ${3:rotation});",
    "description": "Adds the specified NavMeshData to the game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.AddNavMeshData.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.CalculatePath(${1:sourcePosition}, ${2:targetPosition}, ${3:areaMask}, ${4:path});",
    "description": "Calculate a path between two points and store the resulting path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.CalculatePath.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.CalculatePath(${1:sourcePosition}, ${2:targetPosition}, ${3:filter}, ${4:path});",
    "description": "Calculate a path between two points and store the resulting path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.CalculatePath.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.CalculateTriangulation();",
    "description": "Calculates triangulation of the current navmesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.CalculateTriangulation.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.CreateSettings();",
    "description": "Creates and returns a new entry of NavMesh build settings available for runtime NavMesh building.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.CreateSettings.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.FindClosestEdge(${1:sourcePosition}, ${2:hit}, ${3:areaMask});",
    "description": "Locate the closest NavMesh edge from a point on the NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.FindClosestEdge.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.FindClosestEdge(${1:sourcePosition}, ${2:hit}, ${3:filter});",
    "description": "Locate the closest NavMesh edge from a point on the NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.FindClosestEdge.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetAreaCost(${1:areaIndex});",
    "description": "Gets the cost for path finding over geometry of the area type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetAreaCost.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetAreaFromName(${1:areaName});",
    "description": "Returns the area index for a named NavMesh area type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetAreaFromName.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetSettingsByID(${1:agentTypeID});",
    "description": "Returns an existing entry of NavMesh build settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetSettingsByID.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetSettingsByIndex(${1:index});",
    "description": "Returns an existing entry of NavMesh build settings by its ordered index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetSettingsByIndex.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetSettingsCount();",
    "description": "Returns the number of registered NavMesh build settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetSettingsCount.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.GetSettingsNameFromID(${1:agentTypeID});",
    "description": "Returns the name associated with the NavMesh build settings matching the provided agent type ID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.GetSettingsNameFromID.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.Raycast(${1:sourcePosition}, ${2:targetPosition}, ${3:hit}, ${4:areaMask});",
    "description": "Trace a line between two points on the NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.Raycast(${1:sourcePosition}, ${2:targetPosition}, ${3:hit}, ${4:filter});",
    "description": "Trace a line between two points on the NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.RemoveAllNavMeshData();",
    "description": "Removes all NavMesh surfaces and links from the game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.RemoveAllNavMeshData.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.RemoveLink(${1:handle});",
    "description": "Removes a link from the NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.RemoveLink.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.RemoveNavMeshData(${1:handle});",
    "description": "Removes the specified NavMeshDataInstance from the game, making it unavailable for agents and queries.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.RemoveNavMeshData.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.RemoveSettings(${1:agentTypeID});",
    "description": "Removes the build settings matching the agent type ID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.RemoveSettings.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.SamplePosition(${1:sourcePosition}, ${2:hit}, ${3:maxDistance}, ${4:areaMask});",
    "description": "Finds the closest point on NavMesh within specified range.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.SamplePosition.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.SamplePosition(${1:sourcePosition}, ${2:hit}, ${3:maxDistance}, ${4:filter});",
    "description": "Finds the closest point on NavMesh within specified range.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.SamplePosition.html",
    "type": "method"
  },
  {
    "snippet": "NavMesh.SetAreaCost(${1:areaIndex}, ${2:cost});",
    "description": "Sets the cost for finding path over geometry of the area type on all agents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMesh.SetAreaCost.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshAgent.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.BuildNavMesh();",
    "description": "Build the Navmesh. (UnityEditor)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.BuildNavMesh.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.BuildNavMeshAsync();",
    "description": "Build the Navmesh Asyncronously. (UnityEditor)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.BuildNavMeshAsync.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.BuildNavMeshForMultipleScenes(${1:paths});",
    "description": "Builds the combined navmesh for the contents of multiple Scenes. (UnityEditor)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.BuildNavMeshForMultipleScenes.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.Cancel();",
    "description": "Cancel Navmesh construction. (UnityEditor) See Also: NavMeshBuilder.BuildNavMeshAsync",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.Cancel.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.Cancel(${1:data});",
    "description": "Cancel Navmesh construction. (UnityEditor) See Also: NavMeshBuilder.BuildNavMeshAsync",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.Cancel.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshBuilder.ClearAllNavMeshes();",
    "description": "Clear all Navmeshes. (UnityEditor)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshBuilder.ClearAllNavMeshes.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshData.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshObstacle.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OffMeshLink.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.CustomEvent(${1:customEventName});",
    "description": "Custom Events (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.CustomEvent.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.CustomEvent(${1:customEventName}, ${2:position});",
    "description": "Custom Events (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.CustomEvent.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.FlushEvents();",
    "description": "Attempts to flush immediately all queued analytics events to the network and filesystem cache if possible (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.FlushEvents.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.RegisterEvent(${1:eventName}, ${2:maxEventPerHour}, ${3:maxItems}, ${4:vendorKey}, ${5:prefix});",
    "description": "This API is used for registering a Runtime Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.RegisterEvent.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.RegisterEvent(${1:eventName}, ${2:maxEventPerHour}, ${3:maxItems}, ${4:vendorKey}, ${5:ver}, ${6:prefix});",
    "description": "This API is used for registering a Runtime Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.RegisterEvent.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.ResumeInitialization();",
    "description": "Resume Analytics initialization.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.ResumeInitialization.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.SendEvent(${1:eventName}, ${2:parameters}, ${3:ver}, ${4:prefix});",
    "description": "This API is used to send a Runtime Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.SendEvent.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.SetUserBirthYear(${1:birthYear});",
    "description": "User Demographics (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.SetUserBirthYear.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.SetUserGender(${1:gender});",
    "description": "User Demographics (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.SetUserGender.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.SetUserId(${1:userId});",
    "description": "User Demographics (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.SetUserId.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.Transaction(${1:productId}, ${2:amount}, ${3:currency});",
    "description": "Tracking Monetization (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.Transaction.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.Transaction(${1:productId}, ${2:amount}, ${3:currency}, ${4:receiptPurchaseData}, ${5:signature});",
    "description": "Tracking Monetization (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.Transaction.html",
    "type": "method"
  },
  {
    "snippet": "Analytics.Transaction(${1:productId}, ${2:amount}, ${3:currency}, ${4:receiptPurchaseData}, ${5:signature}, ${6:usingIAPService});",
    "description": "Tracking Monetization (optional).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Analytics.Analytics.Transaction.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnalyticsTracker.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Permission.HasUserAuthorizedPermission(${1:permission});",
    "description": "Check if the user has granted access to a device resource or information that requires authorization.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Android.Permission.HasUserAuthorizedPermission.html",
    "type": "method"
  },
  {
    "snippet": "Permission.RequestUserPermission(${1:permission});",
    "description": "Request that the user grant access to a device resource or information that requires authorization.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Android.Permission.RequestUserPermission.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AimConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClipPlayable.Create(${1:graph}, ${2:clip});",
    "description": "Creates an AnimationClipPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimationClipPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimationLayerMixerPlayable.Create(${1:graph}, ${2:inputCount});",
    "description": "Creates an AnimationLayerMixerPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimationLayerMixerPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMixerPlayable.Create(${1:graph}, ${2:inputCount}, ${3:normalizeWeights});",
    "description": "Creates an AnimationMixerPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimationMixerPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableBinding.Create(${1:name}, ${2:key});",
    "description": "Creates a PlayableBinding that contains information representing an AnimationPlayableOutput.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimationPlayableBinding.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableOutput.Create(${1:graph}, ${2:name}, ${3:target});",
    "description": "Creates an AnimationPlayableOutput in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimationPlayableOutput.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorControllerPlayable.Create(${1:graph}, ${2:controller});",
    "description": "Creates an AnimatorControllerPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimatorControllerPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LookAtConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParentConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RotationConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScaleConstraint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.Discard();",
    "description": "Discard the current recording.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.Discard.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.HideCameraPreview();",
    "description": "Hide the camera preview view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.HideCameraPreview.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.Preview();",
    "description": "Preview the current recording",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.Preview.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.ShowCameraPreviewAt(${1:posX}, ${2:posY});",
    "description": "Shows camera preview at coordinates posX and posY.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.ShowCameraPreviewAt.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.StartBroadcasting();",
    "description": "Initiates and starts a new broadcast\nWhen StartBroadcast is called, user is presented with a broadcast provider selection screen, and then a broadcast setup screen. Once it is finished, a broadcast will be started, and the callback will be invoked.\nIt will also be invoked in case of any error.\n        ",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.StartBroadcasting.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.StopBroadcasting();",
    "description": "Stops current broadcast.\nWill terminate currently on-going broadcast. If no broadcast is in progress, does nothing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.StopBroadcasting.html",
    "type": "method"
  },
  {
    "snippet": "ReplayKit.StopRecording();",
    "description": "Stop the current recording.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Apple.ReplayKit.ReplayKit.StopRecording.html",
    "type": "method"
  },
  {
    "snippet": "FloatComparer.AreEqual(${1:expected}, ${2:actual}, ${3:error});",
    "description": "Performs equality check with absolute error check.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Comparers.FloatComparer.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "FloatComparer.AreEqualRelative(${1:expected}, ${2:actual}, ${3:error});",
    "description": "Performs equality check with relative error check.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Comparers.FloatComparer.AreEqualRelative.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreApproximatelyEqual(${1:expected}, ${2:actual});",
    "description": "Assert the values are approximately equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreApproximatelyEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert the values are approximately equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreApproximatelyEqual(${1:expected}, ${2:actual}, ${3:tolerance});",
    "description": "Assert the values are approximately equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreApproximatelyEqual(${1:expected}, ${2:actual}, ${3:tolerance}, ${4:message});",
    "description": "Assert the values are approximately equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotApproximatelyEqual(${1:expected}, ${2:actual});",
    "description": "Asserts that the values are approximately not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotApproximatelyEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Asserts that the values are approximately not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotApproximatelyEqual(${1:expected}, ${2:actual}, ${3:tolerance});",
    "description": "Asserts that the values are approximately not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotApproximatelyEqual(${1:expected}, ${2:actual}, ${3:tolerance}, ${4:message});",
    "description": "Asserts that the values are approximately not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotApproximatelyEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.AreNotEqual(${1:expected}, ${2:actual}, ${3:message});",
    "description": "Assert that the values are not equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.AreNotEqual.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsFalse(${1:condition});",
    "description": "Return true when the condition is false.  Otherwise return false.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsFalse.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsFalse(${1:condition}, ${2:message});",
    "description": "Return true when the condition is false.  Otherwise return false.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsFalse.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNotNull(${1:value}, ${2:message});",
    "description": "Assert that the value is not null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNotNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNotNull(${1:value});",
    "description": "Assert that the value is not null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNotNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNotNull(${1:value}, ${2:message});",
    "description": "Assert that the value is not null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNotNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNull(${1:value}, ${2:message});",
    "description": "Assert the value is null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNull(${1:value});",
    "description": "Assert the value is null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsNull(${1:value}, ${2:message});",
    "description": "Assert the value is null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsNull.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsTrue(${1:condition});",
    "description": "Asserts that the condition is true.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsTrue.html",
    "type": "method"
  },
  {
    "snippet": "Assert.IsTrue(${1:condition}, ${2:message});",
    "description": "Asserts that the condition is true.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Assertions.Assert.IsTrue.html",
    "type": "method"
  },
  {
    "snippet": "AudioClipPlayable.Create(${1:graph}, ${2:clip}, ${3:looping});",
    "description": "Creates an AudioClipPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Audio.AudioClipPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioMixerSnapshot.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableBinding.Create(${1:name}, ${2:key});",
    "description": "Creates a PlayableBinding that contains information representing an AudioPlayableOutput.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Audio.AudioPlayableBinding.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableOutput.Create(${1:graph}, ${2:name}, ${3:target});",
    "description": "Creates an AudioPlayableOutput in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Audio.AudioPlayableOutput.Create.html",
    "type": "method"
  },
  {
    "snippet": "CrashReportHandler.GetUserMetadata(${1:key});",
    "description": "Get a custom crash report metadata field that has been set.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CrashReportHandler.CrashReportHandler.GetUserMetadata.html",
    "type": "method"
  },
  {
    "snippet": "CrashReportHandler.SetUserMetadata(${1:key}, ${2:value});",
    "description": "Set a custom metadata key-value pair to be included with crash reports.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CrashReportHandler.CrashReportHandler.SetUserMetadata.html",
    "type": "method"
  },
  {
    "snippet": "Utils.ForceCrash(${1:crashCategory});",
    "description": "Manually causes an application crash in the specified category.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Diagnostics.Utils.ForceCrash.html",
    "type": "method"
  },
  {
    "snippet": "Utils.NativeAssert(${1:message});",
    "description": "Manually causes an assert that outputs the specified message to the log and registers an error.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Diagnostics.Utils.NativeAssert.html",
    "type": "method"
  },
  {
    "snippet": "Utils.NativeError(${1:message});",
    "description": "Manually causes a native error that outputs the specified message to the log and registers an error.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Diagnostics.Utils.NativeError.html",
    "type": "method"
  },
  {
    "snippet": "Utils.NativeWarning(${1:message});",
    "description": "Manually causes a warning that outputs the specified message to the log and registers an error.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Diagnostics.Utils.NativeWarning.html",
    "type": "method"
  },
  {
    "snippet": "UnityEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventBase.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInput.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseInputModule.DetermineMoveDirection(${1:x}, ${2:y});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "BaseInputModule.DetermineMoveDirection(${1:x}, ${2:y}, ${3:deadZone});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "BaseInputModule.FindCommonRoot(${1:g1}, ${2:g2});",
    "description": "Given 2 GameObjects, return a common root GameObject (or null).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.FindCommonRoot.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystem.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTrigger.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TriggerEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2DRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.DetermineMoveDirection(${1:x}, ${2:y});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.DetermineMoveDirection(${1:x}, ${2:y}, ${3:deadZone});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.FindCommonRoot(${1:g1}, ${2:g2});",
    "description": "Given 2 GameObjects, return a common root GameObject (or null).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.FindCommonRoot.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointerInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.DetermineMoveDirection(${1:x}, ${2:y});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.DetermineMoveDirection(${1:x}, ${2:y}, ${3:deadZone});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.FindCommonRoot(${1:g1}, ${2:g2});",
    "description": "Given 2 GameObjects, return a common root GameObject (or null).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.FindCommonRoot.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StandaloneInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.DetermineMoveDirection(${1:x}, ${2:y});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.DetermineMoveDirection(${1:x}, ${2:y}, ${3:deadZone});",
    "description": "Given an input movement, determine the best MoveDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.DetermineMoveDirection.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.FindCommonRoot(${1:g1}, ${2:g2});",
    "description": "Given 2 GameObjects, return a common root GameObject (or null).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EventSystems.BaseInputModule.FindCommonRoot.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TouchInputModule.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshWorld.GetDefaultWorld();",
    "description": "Returns a reference to the single NavMeshWorld that can currently exist and be used in Unity.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.AI.NavMeshWorld.GetDefaultWorld.html",
    "type": "method"
  },
  {
    "snippet": "AnimationScriptPlayable.Create(${1:graph}, ${2:jobData}, ${3:inputCount});",
    "description": "Creates an AnimationScriptPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimationScriptPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindSceneProperty(${1:animator}, ${2:transform}, ${3:type}, ${4:property});",
    "description": "Create a PropertySceneHandle representing the new binding on the Component property of a Transform in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindSceneProperty.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindSceneProperty(${1:animator}, ${2:transform}, ${3:type}, ${4:property}, ${5:isObjectReference});",
    "description": "Create a PropertySceneHandle representing the new binding on the Component property of a Transform in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindSceneProperty.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindSceneTransform(${1:animator}, ${2:transform});",
    "description": "Create a TransformSceneHandle representing the new binding between the Animator and a Transform in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindSceneTransform.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindStreamProperty(${1:animator}, ${2:transform}, ${3:type}, ${4:property});",
    "description": "Create a PropertyStreamHandle representing the new binding on the Component property of a Transform already bound to the Animator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindStreamProperty.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindStreamProperty(${1:animator}, ${2:transform}, ${3:type}, ${4:property}, ${5:isObjectReference});",
    "description": "Create a PropertyStreamHandle representing the new binding on the Component property of a Transform already bound to the Animator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindStreamProperty.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.BindStreamTransform(${1:animator}, ${2:transform});",
    "description": "Create a TransformStreamHandle representing the new binding between the Animator and a Transform already bound to the Animator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.BindStreamTransform.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.CloseAnimationStream(${1:animator}, ${2:stream});",
    "description": "Close a stream that has been opened using OpenAnimationStream.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.CloseAnimationStream.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.OpenAnimationStream(${1:animator}, ${2:stream});",
    "description": "Open a new stream on the Animator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.OpenAnimationStream.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.ResolveAllSceneHandles(${1:animator});",
    "description": "Newly created handles are always resolved lazily on the next access when the jobs are run. To avoid a cpu spike while evaluating the jobs you can manually resolve all handles from the main thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.ResolveAllSceneHandles.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorJobExtensions.ResolveAllStreamHandles(${1:animator});",
    "description": "Newly created handles are always resolved lazily on the next access when the jobs are run. To avoid a cpu spike while evaluating the jobs you can manually resolve all handles from the main thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.AnimatorJobExtensions.ResolveAllStreamHandles.html",
    "type": "method"
  },
  {
    "snippet": "MuscleHandle.GetMuscleHandles(${1:muscleHandles});",
    "description": "Fills the array with all the possible muscle handles on a humanoid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Animations.MuscleHandle.GetMuscleHandles.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.Extract(${1:baketype});",
    "description": "Extracts informations from Lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.Extract.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.Extract(${1:l}, ${2:dir});",
    "description": "Extracts informations from Lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.Extract.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.Extract(${1:l}, ${2:point});",
    "description": "Extracts informations from Lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.Extract.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.Extract(${1:l}, ${2:spot});",
    "description": "Extracts informations from Lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.Extract.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.Extract(${1:l}, ${2:rect});",
    "description": "Extracts informations from Lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.Extract.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.ExtractIndirect(${1:l});",
    "description": "Extracts the indirect color from a light.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.ExtractIndirect.html",
    "type": "method"
  },
  {
    "snippet": "LightmapperUtils.ExtractInnerCone(${1:l});",
    "description": "Extracts the inner cone angle of spot lights.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LightmapperUtils.ExtractInnerCone.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.GetDelegate();",
    "description": "Get the currently set conversion delegate.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.Lightmapping.GetDelegate.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.ResetDelegate();",
    "description": "Resets the light conversion delegate to Unity's default conversion function.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.Lightmapping.ResetDelegate.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.SetDelegate(${1:del});",
    "description": "Set a delegate that converts a list of lights to a list of LightDataGI structures that are passed to the baking backends. Must be reset by calling ResetDelegate again.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.Lightmapping.SetDelegate.html",
    "type": "method"
  },
  {
    "snippet": "LinearColor.Black();",
    "description": "Returns a black color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LinearColor.Black.html",
    "type": "method"
  },
  {
    "snippet": "LinearColor.Convert(${1:color}, ${2:intensity});",
    "description": "Converts a Light's color value to a normalized linear color value, automatically handling gamma conversion if necessary.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.GlobalIllumination.LinearColor.Convert.html",
    "type": "method"
  },
  {
    "snippet": "PlayerLoop.SetPlayerLoop();",
    "description": "Set a new custom update order of all engine systems in Unity.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.LowLevel.PlayerLoop.SetPlayerLoop.html",
    "type": "method"
  },
  {
    "snippet": "CameraPlayable.Create(${1:graph}, ${2:camera});",
    "description": "Creates a CameraPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Playables.CameraPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "TextureMixerPlayable.Create(${1:graph});",
    "description": "Creates a TextureMixerPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Playables.TextureMixerPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "TexturePlayableBinding.Create(${1:name}, ${2:key});",
    "description": "Creates a PlayableBinding that contains information representing a TexturePlayableOutput.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Playables.TexturePlayableBinding.Create.html",
    "type": "method"
  },
  {
    "snippet": "CullResults.Cull();",
    "description": "Perform culling for a Camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.CullResults.Cull.html",
    "type": "method"
  },
  {
    "snippet": "CullResults.Cull();",
    "description": "Perform culling for a Camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.CullResults.Cull.html",
    "type": "method"
  },
  {
    "snippet": "CullResults.GetCullingParameters(${1:camera}, ${2:cullingParameters});",
    "description": "Get culling parameters for a camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.CullResults.GetCullingParameters.html",
    "type": "method"
  },
  {
    "snippet": "CullResults.GetCullingParameters(${1:camera}, ${2:stereoAware}, ${3:cullingParameters});",
    "description": "Get culling parameters for a camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.CullResults.GetCullingParameters.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPassAttachment.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipeline.BeginCameraRendering(${1:camera});",
    "description": "Call the delegate used during SRP rendering before a single camera starts rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.RenderPipeline.BeginCameraRendering.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipeline.BeginFrameRendering(${1:cameras});",
    "description": "Call the delegate used during SRP rendering before a render begins.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.RenderPipeline.BeginFrameRendering.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RenderPipelineAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableRenderContext.EmitWorldGeometryForSceneView(${1:cullingCamera});",
    "description": "Emit UI geometry into the Scene view for rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Rendering.ScriptableRenderContext.EmitWorldGeometryForSceneView.html",
    "type": "method"
  },
  {
    "snippet": "BrushTransform.FromRect(${1:brushRect});",
    "description": "Creates an axis-aligned BrushTransform from a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.BrushTransform.FromRect.html",
    "type": "method"
  },
  {
    "snippet": "PaintContext.ApplyDelayedActions();",
    "description": "Flushes the delayed actions created by PaintContext heightmap and alphamap modifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.PaintContext.ApplyDelayedActions.html",
    "type": "method"
  },
  {
    "snippet": "PaintContext.CreateFromBounds(${1:terrain}, ${2:boundsInTerrainSpace}, ${3:inputTextureWidth}, ${4:inputTextureHeight}, ${5:extraBorderPixels});",
    "description": "Constructs a PaintContext that you can use to edit a texture on a Terrain, in the region defined by boundsInTerrainSpace and extraBorderPixels.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.PaintContext.CreateFromBounds.html",
    "type": "method"
  },
  {
    "snippet": "TerrainUtility.AutoConnect();",
    "description": "Automatically connects neighboring terrains.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainUtility.AutoConnect.html",
    "type": "method"
  },
  {
    "snippet": "TerrainMap.CreateFromPlacement(${1:originTerrain}, ${2:filter}, ${3:fullValidation});",
    "description": "Creates a TerrainMap.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainUtility.TerrainMap.CreateFromPlacement.html",
    "type": "method"
  },
  {
    "snippet": "TerrainMap.CreateFromPlacement(${1:gridOrigin}, ${2:gridSize}, ${3:filter}, ${4:fullValidation});",
    "description": "Creates a TerrainMap.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainUtility.TerrainMap.CreateFromPlacement.html",
    "type": "method"
  },
  {
    "snippet": "SpriteDataAccessExtensions.GetBones(${1:sprite});",
    "description": "Returns a list of SpriteBone in this Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteDataAccessExtensions.GetBones.html",
    "type": "method"
  },
  {
    "snippet": "SpriteDataAccessExtensions.GetVertexCount(${1:sprite});",
    "description": "Returns the number of vertices in this Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteDataAccessExtensions.GetVertexCount.html",
    "type": "method"
  },
  {
    "snippet": "SpriteDataAccessExtensions.HasVertexAttribute(${1:sprite}, ${2:channel});",
    "description": "Checks if a specific channel exists for this Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteDataAccessExtensions.HasVertexAttribute.html",
    "type": "method"
  },
  {
    "snippet": "SpriteDataAccessExtensions.SetBones(${1:sprite}, ${2:src});",
    "description": "Sets the SpriteBones for this Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteDataAccessExtensions.SetBones.html",
    "type": "method"
  },
  {
    "snippet": "SpriteDataAccessExtensions.SetVertexCount(${1:sprite}, ${2:count});",
    "description": "Sets the vertex count. This resizes the internal buffer. It also preserves any configurations of VertexAttributes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteDataAccessExtensions.SetVertexCount.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRendererDataAccessExtensions.DeactivateDeformableBuffer(${1:renderer});",
    "description": "Stop using the deformable buffer to render the Sprite and use the original mesh instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteRendererDataAccessExtensions.DeactivateDeformableBuffer.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRendererDataAccessExtensions.UpdateDeformableBuffer(${1:spriteRenderer}, ${2:fence});",
    "description": "Provides the JobHandle that updates the deform buffer to the SpriteRenderer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteRendererDataAccessExtensions.UpdateDeformableBuffer.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeUtility.Generate(${1:mesh}, ${2:shapeParams}, ${3:points}, ${4:metaData}, ${5:angleRange}, ${6:sprites}, ${7:corners});",
    "description": "Generate a mesh based on input parameters.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteShapeUtility.Generate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteShapeUtility.GenerateSpriteShape(${1:renderer}, ${2:shapeParams}, ${3:points}, ${4:metaData}, ${5:angleRange}, ${6:sprites}, ${7:corners});",
    "description": "Generate a mesh based on input parameters.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteShapeUtility.GenerateSpriteShape.html",
    "type": "method"
  },
  {
    "snippet": "AttachToPanelEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "AttachToPanelEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "AttachToPanelEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "AttachToPanelEvent.GetPooled(${1:originPanel}, ${2:destinationPanel});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.PanelChangedEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "BlurEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "BlurEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "BlurEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "BlurEvent.GetPooled();",
    "description": "Gets an event from the event pool and initializes the event with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.FocusEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ContextClickEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "ContextClickEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ContextClickEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "ContextClickEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ContextualMenuPopulateEvent.GetPooled();",
    "description": "Retrieves an event from the event pool. Use this method to retrieve a mouse event and initialize the event, instead of creating a new mouse event. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.ContextualMenuPopulateEvent.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DetachFromPanelEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DetachFromPanelEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DetachFromPanelEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DetachFromPanelEvent.GetPooled(${1:originPanel}, ${2:destinationPanel});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.PanelChangedEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragEnterEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DragEnterEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragEnterEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DragEnterEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragExitedEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DragExitedEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragExitedEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DragExitedEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragLeaveEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DragLeaveEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragLeaveEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DragLeaveEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragPerformEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DragPerformEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragPerformEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DragPerformEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragUpdatedEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "DragUpdatedEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "DragUpdatedEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "DragUpdatedEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MenuAction.AlwaysDisabled(${1:a});",
    "description": "Status callback that always returns StatusFlags.Disabled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.DropdownMenu.MenuAction.AlwaysDisabled.html",
    "type": "method"
  },
  {
    "snippet": "MenuAction.AlwaysEnabled(${1:a});",
    "description": "Status callback that always returns StatusFlags.Enabled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.DropdownMenu.MenuAction.AlwaysEnabled.html",
    "type": "method"
  },
  {
    "snippet": "EventBase.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "ExecuteCommandEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.CommandEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ExecuteCommandEvent.GetPooled(${1:commandName});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.CommandEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ExecuteCommandEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "ExecuteCommandEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ExecuteCommandEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "FocusEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "FocusEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "FocusEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "FocusEvent.GetPooled();",
    "description": "Gets an event from the event pool and initializes the event with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.FocusEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "FocusInEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "FocusInEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "FocusInEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "FocusInEvent.GetPooled();",
    "description": "Gets an event from the event pool and initializes the event with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.FocusEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "FocusOutEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "FocusOutEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "FocusOutEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "FocusOutEvent.GetPooled();",
    "description": "Gets an event from the event pool and initializes the event with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.FocusEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "GeometryChangedEvent.GetPooled(${1:oldRect}, ${2:newRect});",
    "description": "Gets an event from the event pool and initializes the event with the specified values. Use this method instead of instancing new events. Use Dispose() to release events back to the event pool.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GeometryChangedEvent.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "IBindingExtensions.IsBound(${1:control});",
    "description": "Checks if a IBindable is bound to a property.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.IBindingExtensions.IsBound.html",
    "type": "method"
  },
  {
    "snippet": "IMGUIEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.IMGUIEvent.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "InputEvent.GetPooled(${1:previousData}, ${2:newData});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.InputEvent.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyDownEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "KeyDownEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyDownEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "KeyDownEvent.GetPooled(${1:c}, ${2:keyCode}, ${3:modifiers});",
    "description": "Gets a keyboard event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.KeyboardEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyDownEvent.GetPooled(${1:systemEvent});",
    "description": "Gets a keyboard event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.KeyboardEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyUpEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "KeyUpEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyUpEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "KeyUpEvent.GetPooled(${1:c}, ${2:keyCode}, ${3:modifiers});",
    "description": "Gets a keyboard event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.KeyboardEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "KeyUpEvent.GetPooled(${1:systemEvent});",
    "description": "Gets a keyboard event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.KeyboardEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureController.CaptureMouse(${1:handler});",
    "description": "Assigns an event handler to capture mouse events.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureController.CaptureMouse.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureController.HasMouseCapture(${1:handler});",
    "description": "Checks if the event handler is capturing the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureController.HasMouseCapture.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureController.IsMouseCaptured();",
    "description": "Checks if there is a handler capturing the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureController.IsMouseCaptured.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureController.ReleaseMouse(${1:handler});",
    "description": "Stops an event handler from capturing the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureController.ReleaseMouse.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureController.ReleaseMouse();",
    "description": "Stops an event handler from capturing the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureController.ReleaseMouse.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureEvent.GetPooled(${1:target}, ${2:relatedTarget});",
    "description": "Retrieves an event from the event pool. Use this method to retrieve a mouse event and initialize the event, instead of creating a new mouse event. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureOutEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureOutEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureOutEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseCaptureOutEvent.GetPooled(${1:target}, ${2:relatedTarget});",
    "description": "Retrieves an event from the event pool. Use this method to retrieve a mouse event and initialize the event, instead of creating a new mouse event. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseCaptureEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseDownEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseDownEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseDownEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseDownEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterWindowEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterWindowEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterWindowEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseEnterWindowEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveWindowEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveWindowEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveWindowEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseLeaveWindowEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseMoveEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseMoveEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseMoveEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseMoveEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseOutEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseOutEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseOutEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseOutEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseOverEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseOverEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseOverEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseOverEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseUpEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "MouseUpEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "MouseUpEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "MouseUpEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.MouseEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "TooltipEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "TooltipEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "TooltipEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "ValidateCommandEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.CommandEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ValidateCommandEvent.GetPooled(${1:commandName});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.CommandEventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ValidateCommandEvent.RegisterEventType();",
    "description": "Registers an event class to the event type system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase.RegisterEventType.html",
    "type": "method"
  },
  {
    "snippet": "ValidateCommandEvent.GetPooled();",
    "description": "Gets an event from the event pool. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "ValidateCommandEvent.TypeId();",
    "description": "Gets the type id for the event class.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.EventBase_1.TypeId.html",
    "type": "method"
  },
  {
    "snippet": "VisualElementExtensions.AddManipulator(${1:ele}, ${2:manipulator});",
    "description": "Add a manipulator associated to a VisualElement.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.VisualElementExtensions.AddManipulator.html",
    "type": "method"
  },
  {
    "snippet": "VisualElementExtensions.RemoveManipulator(${1:ele}, ${2:manipulator});",
    "description": "Remove a manipulator associated to a VisualElement.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.VisualElementExtensions.RemoveManipulator.html",
    "type": "method"
  },
  {
    "snippet": "VisualElementExtensions.StretchToParentWidth(${1:elem});",
    "description": "The given VisualElement's left and right edges will be aligned with the corresponding edges of the parent element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.VisualElementExtensions.StretchToParentWidth.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "VisualTreeAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "WheelEvent.GetPooled(${1:systemEvent});",
    "description": "Gets an event from the event pool and initializes it with the given values. Use this function instead of creating new events. Events obtained from this method should be released back to the pool using Dispose().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.WheelEvent.GetPooled.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "VFXSpawnerCallbacks.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VisualEffectAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipPlayable.Create(${1:graph}, ${2:clip}, ${3:looping});",
    "description": "Creates a VideoClipPlayable in the PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Video.VideoClipPlayable.Create.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayerExtensions.GetAudioSampleProvider(${1:vp}, ${2:trackIndex});",
    "description": "Return the AudioSampleProvider for the specified track, used to receive audio samples during playback.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Video.VideoPlayerExtensions.GetAudioSampleProvider.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseArmModel.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BasePoseProvider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Device.RequestStoreReview();",
    "description": "Request App Store rating and review from the user.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Device.RequestStoreReview.html",
    "type": "method"
  },
  {
    "snippet": "Device.ResetNoBackupFlag(${1:path});",
    "description": "Reset \"no backup\" file flag: file will be synced with iCloud/iTunes backup and can be deleted by OS in low storage situations.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Device.ResetNoBackupFlag.html",
    "type": "method"
  },
  {
    "snippet": "Device.SetNoBackupFlag(${1:path});",
    "description": "Set file flag to be excluded from iCloud/iTunes backup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Device.SetNoBackupFlag.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.CancelAllLocalNotifications();",
    "description": "Cancels the delivery of all scheduled local notifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.CancelAllLocalNotifications.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.CancelLocalNotification(${1:notification});",
    "description": "Cancels the delivery of the specified scheduled local notification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.CancelLocalNotification.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.ClearLocalNotifications();",
    "description": "Discards of all received local notifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.ClearLocalNotifications.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.ClearRemoteNotifications();",
    "description": "Discards of all received remote notifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.ClearRemoteNotifications.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.GetLocalNotification(${1:index});",
    "description": "Returns an object representing a specific local notification. (Read Only)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.GetLocalNotification.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.GetRemoteNotification(${1:index});",
    "description": "Returns an object representing a specific remote notification. (Read Only)",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.GetRemoteNotification.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.PresentLocalNotificationNow(${1:notification});",
    "description": "Presents a local notification immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.PresentLocalNotificationNow.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.RegisterForNotifications(${1:notificationTypes});",
    "description": "Register to receive local and remote notifications of the specified types from a provider via Apple Push Service.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.RegisterForNotifications.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.RegisterForNotifications(${1:notificationTypes}, ${2:registerForRemote});",
    "description": "Register to receive local and remote notifications of the specified types from a provider via Apple Push Service.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.RegisterForNotifications.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.ScheduleLocalNotification(${1:notification});",
    "description": "Schedules a local notification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.ScheduleLocalNotification.html",
    "type": "method"
  },
  {
    "snippet": "NotificationServices.UnregisterForRemoteNotifications();",
    "description": "Unregister for remote notifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.NotificationServices.UnregisterForRemoteNotifications.html",
    "type": "method"
  },
  {
    "snippet": "OnDemandResources.PreloadAsync(${1:tags});",
    "description": "Creates an On Demand Resources (ODR) request.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.OnDemandResources.PreloadAsync.html",
    "type": "method"
  },
  {
    "snippet": "IJobParallelForTransformExtensions.Schedule(${1:jobData}, ${2:transforms}, ${3:dependsOn});",
    "description": "Schedule.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Jobs.IJobParallelForTransformExtensions.Schedule.html",
    "type": "method"
  },
  {
    "snippet": "TransformAccessArray.Allocate(${1:capacity}, ${2:desiredJobCount}, ${3:array});",
    "description": "Allocate.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Jobs.TransformAccessArray.Allocate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMatch.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayerConnection.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ClientScene.SetLocalObject();",
    "description": "NetId is a unique number assigned to all objects with NetworkIdentity components in a game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.ClientScene.SetLocalObject.html",
    "type": "method"
  },
  {
    "snippet": "DownloadHandlerAssetBundle.GetContent(${1:www});",
    "description": "Returns the downloaded AssetBundle, or null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.DownloadHandlerAssetBundle.GetContent.html",
    "type": "method"
  },
  {
    "snippet": "DownloadHandlerAudioClip.GetContent(${1:www});",
    "description": "Returns the downloaded AudioClip, or null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.DownloadHandlerAudioClip.GetContent.html",
    "type": "method"
  },
  {
    "snippet": "DownloadHandlerBuffer.GetContent(${1:www});",
    "description": "Returns a copy of the native-memory buffer interpreted as a UTF8 string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.DownloadHandlerBuffer.GetContent.html",
    "type": "method"
  },
  {
    "snippet": "DownloadHandlerTexture.GetContent(${1:www});",
    "description": "Returns the downloaded Texture, or null.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.DownloadHandlerTexture.GetContent.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkAnimator.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkCRC.ReinitializeScriptCRCs();",
    "description": "This can be used to reinitialize the set of script CRCs.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkCRC.ReinitializeScriptCRCs.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkDiscovery.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkIdentity.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkLobbyPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkManagerHUD.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkMigrationManager.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkProximityChecker.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.AddPlayerForConnection(${1:conn}, ${2:player}, ${3:playerControllerId});",
    "description": "When an AddPlayer message handler has received a request from a player, the server calls this to associate the player object with the connection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.AddPlayerForConnection.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.AddPlayerForConnection();",
    "description": "When an AddPlayer message handler has received a request from a player, the server calls this to associate the player object with the connection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.AddPlayerForConnection.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.BecomeHost();",
    "description": "This allows a client that has been disconnected from a server, to become the host of a new version of the game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.BecomeHost.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.ReplacePlayerForConnection(${1:conn}, ${2:player}, ${3:playerControllerId});",
    "description": "This replaces the player object for a connection with a different player object. The old player object is not destroyed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.ReplacePlayerForConnection.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.ReplacePlayerForConnection();",
    "description": "This replaces the player object for a connection with a different player object. The old player object is not destroyed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.ReplacePlayerForConnection.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendBytesToReady();",
    "description": "This sends an array of bytes to all ready players.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendBytesToReady.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendToAll();",
    "description": "Send a message structure with the given type number to all connected clients.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendToAll.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendToClient(${1:connectionId}, ${2:msgType}, ${3:msg});",
    "description": "Send a message to the client which owns the given connection ID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendToClient.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendToClient();",
    "description": "Send a message to the client which owns the given connection ID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendToClient.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendToClientOfPlayer();",
    "description": "Send a message to the client which owns the given player object instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendToClientOfPlayer.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendToReady();",
    "description": "Send a message structure with the given type number to only clients which are ready.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendToReady.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendUnreliableToAll();",
    "description": "Send given message structure as an unreliable message to all connected clients.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendUnreliableToAll.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendUnreliableToReady();",
    "description": "Send given message structure as an unreliable message only to ready clients.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendUnreliableToReady.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.SendWriterToReady();",
    "description": "Sends the contents of a NetworkWriter object to the ready players.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.SendWriterToReady.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.Spawn(${1:obj});",
    "description": "Spawn the given game object on all clients which are ready.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.Spawn.html",
    "type": "method"
  },
  {
    "snippet": "NetworkServer.Spawn();",
    "description": "Spawn the given game object on all clients which are ready.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.NetworkServer.Spawn.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkStartPosition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformChild.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkTransformVisualizer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.ClearCookieCache();",
    "description": "Clears stored cookies from the cache.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.ClearCookieCache.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.ClearCookieCache();",
    "description": "Clears stored cookies from the cache.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.ClearCookieCache.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Delete(${1:uri});",
    "description": "Creates a UnityWebRequest configured for HTTP DELETE.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Delete.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.EscapeURL(${1:s});",
    "description": "Escapes characters in a string to ensure they are URL-friendly.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.EscapeURL.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.EscapeURL(${1:s}, ${2:e});",
    "description": "Escapes characters in a string to ensure they are URL-friendly.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.EscapeURL.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.GenerateBoundary();",
    "description": "Generate a random 40-byte array for use as a multipart form boundary.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.GenerateBoundary.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Get(${1:uri});",
    "description": "Create a UnityWebRequest for HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Get.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Get(${1:uri});",
    "description": "Create a UnityWebRequest for HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Get.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Head(${1:uri});",
    "description": "Creates a UnityWebRequest configured to send a HTTP HEAD request.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Head.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Post(${1:uri}, ${2:postData});",
    "description": "Creates a UnityWebRequest configured to send form data to a server via HTTP POST.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Post.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Post(${1:uri}, ${2:formData});",
    "description": "Creates a UnityWebRequest configured to send form data to a server via HTTP POST.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Post.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Put(${1:uri}, ${2:bodyData});",
    "description": "Creates a UnityWebRequest configured to upload raw data to a remote server via HTTP PUT.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Put.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.Put(${1:uri}, ${2:bodyData});",
    "description": "Creates a UnityWebRequest configured to upload raw data to a remote server via HTTP PUT.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.Put.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.UnEscapeURL(${1:s});",
    "description": "Converts URL-friendly escape sequences back to normal text.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.UnEscapeURL.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequest.UnEscapeURL(${1:s}, ${2:e});",
    "description": "Converts URL-friendly escape sequences back to normal text.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.UnEscapeURL.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:version}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:version}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:hash}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:hash}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:cachedAssetBundle}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestAssetBundle.GetAssetBundle(${1:uri}, ${2:cachedAssetBundle}, ${3:crc});",
    "description": "Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestAssetBundle.GetAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestMultimedia.GetAudioClip(${1:uri}, ${2:audioType});",
    "description": "Create a UnityWebRequest to download an audio clip via HTTP GET and create an AudioClip based on the retrieved data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestMultimedia.GetAudioClip.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestTexture.GetTexture(${1:uri});",
    "description": "Create a UnityWebRequest intended to download an image via HTTP GET and create a Texture based on the retrieved data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestTexture.GetTexture.html",
    "type": "method"
  },
  {
    "snippet": "UnityWebRequestTexture.GetTexture(${1:uri}, ${2:nonReadable});",
    "description": "Create a UnityWebRequest intended to download an image via HTTP GET and create a Texture based on the retrieved data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequestTexture.GetTexture.html",
    "type": "method"
  },
  {
    "snippet": "Utility.GetAccessTokenForNetwork(${1:netId});",
    "description": "Utility function to get this client's access token for a particular network, if it has been set.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.Utility.GetAccessTokenForNetwork.html",
    "type": "method"
  },
  {
    "snippet": "Utility.GetSourceID();",
    "description": "Utility function to get the client's SourceID for unique identification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.Utility.GetSourceID.html",
    "type": "method"
  },
  {
    "snippet": "Utility.SetAccessTokenForNetwork(${1:netId}, ${2:accessToken});",
    "description": "Utility function that accepts the access token for a network after it's received from the server.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Networking.Utility.SetAccessTokenForNetwork.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableUtilities.Play(${1:animator}, ${2:playable}, ${3:graph});",
    "description": "Plays the Playable on  the given Animator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.AnimationPlayableUtilities.Play.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableUtilities.PlayAnimatorController(${1:animator}, ${2:controller}, ${3:graph});",
    "description": "Creates a PlayableGraph to be played on the given Animator. An AnimatorControllerPlayable is also created for the given RuntimeAnimatorController.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.AnimationPlayableUtilities.PlayAnimatorController.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableUtilities.PlayClip(${1:animator}, ${2:clip}, ${3:graph});",
    "description": "Creates a PlayableGraph to be played on the given Animator. An AnimationClipPlayable is also created for the given AnimationClip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.AnimationPlayableUtilities.PlayClip.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableUtilities.PlayLayerMixer(${1:animator}, ${2:inputCount}, ${3:graph});",
    "description": "Creates a PlayableGraph to be played on the given Animator. An AnimationLayerMixerPlayable is also created.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.AnimationPlayableUtilities.PlayLayerMixer.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableUtilities.PlayMixer(${1:animator}, ${2:inputCount}, ${3:graph});",
    "description": "Creates a PlayableGraph to be played on the given Animator. An AnimationMixerPlayable is also created.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.AnimationPlayableUtilities.PlayMixer.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableDirector.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.AddInput(${1:playable}, ${2:sourcePlayable}, ${3:sourceOutputIndex}, ${4:weight});",
    "description": "Create a new input port and connect it to the output port of the given Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.AddInput.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.ConnectInput(${1:playable}, ${2:inputIndex}, ${3:sourcePlayable}, ${4:sourceOutputIndex}, ${5:weight});",
    "description": "Connect the output port of a Playable to one of the input ports.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.ConnectInput.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.Destroy(${1:playable});",
    "description": "Destroys the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetDelay(${1:playable});",
    "description": "Returns the delay of the playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetDelay.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetDuration(${1:playable});",
    "description": "Returns the duration of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetDuration.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetGraph(${1:playable});",
    "description": "Returns the PlayableGraph that owns this Playable.  A Playable can only be used in the graph that was used to create it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetGraph.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetInput(${1:playable}, ${2:inputPort});",
    "description": "Returns the Playable connected at the given input port index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetInput.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetInputCount(${1:playable});",
    "description": "Returns the number of inputs supported by the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetInputCount.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetInputWeight(${1:playable}, ${2:inputIndex});",
    "description": "Returns the weight of the Playable connected at the given input port index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetInputWeight.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetLeadTime(${1:playable});",
    "description": "Returns the Playable lead time in seconds.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetLeadTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetOutput(${1:playable}, ${2:outputPort});",
    "description": "Returns the Playable connected at the given output port index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetOutput.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetOutputCount(${1:playable});",
    "description": "Returns the number of outputs supported by the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetOutputCount.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetPlayState(${1:playable});",
    "description": "Returns the current PlayState of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetPlayState.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetPreviousTime(${1:playable});",
    "description": "Returns the previous local time of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetPreviousTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetPropagateSetTime(${1:playable});",
    "description": "Returns the time propagation behavior of this Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetPropagateSetTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetSpeed(${1:playable});",
    "description": "Returns the speed multiplier that is applied to the the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetSpeed.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetTime(${1:playable});",
    "description": "Returns the current local time of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.GetTraversalMode(${1:playable});",
    "description": "Returns the propagation mode for the multi-output playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.GetTraversalMode.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.IsDelayed(${1:playable});",
    "description": "Returns whether or not the Playable has a delay.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.IsDelayed.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.IsDone(${1:playable});",
    "description": "Returns a flag indicating that a playable has completed its operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.IsDone.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.IsNull(${1:playable});",
    "description": "Returns true if the Playable is null, false otherwise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.IsNull.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.IsValid(${1:playable});",
    "description": "Returns the vality of the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.IsValid.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.Pause(${1:playable});",
    "description": "Tells to pause the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.Pause.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.Play(${1:playable});",
    "description": "Starts to play the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.Play.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetDelay(${1:playable}, ${2:delay});",
    "description": "Set a delay until the playable starts.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetDelay.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetDone(${1:playable}, ${2:value});",
    "description": "Changes a flag indicating that a playable has completed its operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetDone.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetDuration(${1:playable}, ${2:value});",
    "description": "Changes the duration of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetDuration.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetInputCount(${1:playable}, ${2:value});",
    "description": "Changes the number of inputs supported by the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetInputCount.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetInputWeight(${1:playable}, ${2:inputIndex}, ${3:weight});",
    "description": "Changes the weight of the Playable connected to the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetInputWeight.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetInputWeight(${1:playable}, ${2:input}, ${3:weight});",
    "description": "Changes the weight of the Playable connected to the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetInputWeight.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetLeadTime(${1:playable}, ${2:value});",
    "description": "Sets the Playable lead time in seconds.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetLeadTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetOutputCount(${1:playable}, ${2:value});",
    "description": "Changes the number of outputs supported by the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetOutputCount.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetPropagateSetTime(${1:playable}, ${2:value});",
    "description": "Changes the time propagation behavior of this Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetPropagateSetTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetSpeed(${1:playable}, ${2:value});",
    "description": "Changes the speed multiplier that is applied to the the current Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetSpeed.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetTime(${1:playable}, ${2:value});",
    "description": "Changes the current local time of the Playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetTime.html",
    "type": "method"
  },
  {
    "snippet": "PlayableExtensions.SetTraversalMode(${1:playable}, ${2:mode});",
    "description": "Sets the propagation mode of PrepareFrame and ProcessFrame for the multi-output playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableExtensions.SetTraversalMode.html",
    "type": "method"
  },
  {
    "snippet": "PlayableGraph.Create();",
    "description": "Creates a PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableGraph.Create.html",
    "type": "method"
  },
  {
    "snippet": "PlayableGraph.Create(${1:name});",
    "description": "Creates a PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableGraph.Create.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.AddNotificationReceiver(${1:output}, ${2:receiver});",
    "description": "Registers a new receiver that listens for notifications.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.AddNotificationReceiver.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.GetNotificationReceivers(${1:output});",
    "description": "Retrieves the list of notification receivers currently registered on the output.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.GetNotificationReceivers.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.GetSourceOutputPort(${1:output});",
    "description": "Returns the source playable's output connection index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.GetSourceOutputPort.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.GetSourcePlayable(${1:output});",
    "description": "Returns the source playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.GetSourcePlayable.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.GetUserData(${1:output});",
    "description": "Returns the opaque user data. This is the same value as the last last argument of ProcessFrame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.GetUserData.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.GetWeight(${1:output});",
    "description": "Returns the weight of the connection from the PlayableOutput to the source playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.GetWeight.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.IsOutputNull(${1:output});",
    "description": "Returns true if the PlayableOutput is null, false otherwise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.IsOutputNull.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.IsOutputValid(${1:output});",
    "description": "",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.IsOutputValid.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.PushNotification(${1:output}, ${2:origin}, ${3:notification}, ${4:context});",
    "description": "Queues a notification to be sent through the Playable system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.PushNotification.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.RemoveNotificationReceiver(${1:output}, ${2:receiver});",
    "description": "Unregisters a receiver on the output.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.RemoveNotificationReceiver.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetReferenceObject(${1:output}, ${2:value});",
    "description": "Sets the bound object to a new value. Used to associate an output to an object (Track asset in case of Timeline).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetReferenceObject.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetSourceOutputPort(${1:output}, ${2:value});",
    "description": "Sets the source playable's output connection index. For playables with multiple outputs, this determines which sub-branch of the source playable generates this output.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetSourceOutputPort.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetSourcePlayable(${1:output}, ${2:value}, ${3:port});",
    "description": "Sets which playable that computes the output and which sub-tree index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetSourcePlayable.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetSourcePlayable(${1:output}, ${2:value});",
    "description": "Sets which playable that computes the output and which sub-tree index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetSourcePlayable.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetUserData(${1:output}, ${2:value});",
    "description": "Sets the opaque user data. This same data is passed as the last argument to ProcessFrame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetUserData.html",
    "type": "method"
  },
  {
    "snippet": "PlayableOutputExtensions.SetWeight(${1:output}, ${2:value});",
    "description": "Sets the weight of the connection from the PlayableOutput to the source playable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.PlayableOutputExtensions.SetWeight.html",
    "type": "method"
  },
  {
    "snippet": "ScriptPlayableBinding.Create(${1:name}, ${2:key}, ${3:type});",
    "description": "Creates a PlayableBinding that contains information representing a ScriptPlayableOutput.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.ScriptPlayableBinding.Create.html",
    "type": "method"
  },
  {
    "snippet": "ScriptPlayableOutput.Create(${1:graph}, ${2:name});",
    "description": "Creates a new ScriptPlayableOutput in the associated PlayableGraph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.ScriptPlayableOutput.Create.html",
    "type": "method"
  },
  {
    "snippet": "CustomSampler.Create(${1:name});",
    "description": "Creates a new CustomSampler for profiling parts of your code.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.CustomSampler.Create.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.AddFramesFromFile(${1:file});",
    "description": "Displays the recorded profile data in the profiler.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.AddFramesFromFile.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.BeginSample(${1:name});",
    "description": "Begin profiling a piece of code with a custom label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.BeginSample.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.BeginSample(${1:name}, ${2:targetObject});",
    "description": "Begin profiling a piece of code with a custom label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.BeginSample.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.BeginThreadProfiling(${1:threadGroupName}, ${2:threadName});",
    "description": "Enables profiling on the thread from which you call this method.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.BeginThreadProfiling.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.EndSample();",
    "description": "Ends the current profiling sample.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.EndSample.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.EndThreadProfiling();",
    "description": "Frees the internal resources used by the Profiler for the thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.EndThreadProfiling.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetAllocatedMemoryForGraphicsDriver();",
    "description": "Returns the amount of allocated memory for the graphics driver, in bytes.Only available in development players and editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetAllocatedMemoryForGraphicsDriver.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetAreaEnabled(${1:area});",
    "description": "Returns whether or not a given ProfilerArea is currently enabled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetAreaEnabled.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetMonoHeapSizeLong();",
    "description": "Returns the size of the reserved space for managed-memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetMonoHeapSizeLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetMonoUsedSizeLong();",
    "description": "The allocated managed-memory for live objects and non-collected objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetMonoUsedSizeLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetRuntimeMemorySizeLong(${1:o});",
    "description": "Gathers the native-memory used by a Unity object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetRuntimeMemorySizeLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetTempAllocatorSize();",
    "description": "Returns the size of the temp allocator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetTempAllocatorSize.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetTotalAllocatedMemoryLong();",
    "description": "The total memory allocated by the internal allocators in Unity. Unity reserves large pools of memory from the system. This function returns the amount of used memory in those pools.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetTotalAllocatedMemoryLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetTotalReservedMemoryLong();",
    "description": "The total memory Unity has reserved.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetTotalReservedMemoryLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.GetTotalUnusedReservedMemoryLong();",
    "description": "Unity allocates memory in pools for usage when unity needs to allocate memory. This function returns the amount of unused memory in these pools.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.GetTotalUnusedReservedMemoryLong.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.SetAreaEnabled(${1:area}, ${2:enabled});",
    "description": "Enable or disable a given ProfilerArea.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.SetAreaEnabled.html",
    "type": "method"
  },
  {
    "snippet": "Profiler.SetTempAllocatorRequestedSize(${1:size});",
    "description": "Sets the size of the temp allocator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Profiler.SetTempAllocatorRequestedSize.html",
    "type": "method"
  },
  {
    "snippet": "Recorder.Get(${1:samplerName});",
    "description": "Use this function to get a Recorder for the specific Profiler label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Recorder.Get.html",
    "type": "method"
  },
  {
    "snippet": "Sampler.Get(${1:name});",
    "description": "Returns Sampler object for the specific CPU Profiler label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Sampler.Get.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurationBuilder.Instance(${1:first}, ${2:rest});",
    "description": "Get an instance of ConfigurationBuilder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Purchasing.ConfigurationBuilder.Instance.html",
    "type": "method"
  },
  {
    "snippet": "UnityPurchasing.ClearTransactionLog();",
    "description": "Clears Unity IAP's internal transaction log.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Purchasing.UnityPurchasing.ClearTransactionLog.html",
    "type": "method"
  },
  {
    "snippet": "UnityPurchasing.Initialize(${1:listener}, ${2:builder});",
    "description": "Initialize Unity IAP with the specified listener and configuration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Purchasing.UnityPurchasing.Initialize.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.GetCustomShader(${1:type});",
    "description": "Get custom shader used instead of a built-in shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.GetCustomShader.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.GetShaderMode(${1:type});",
    "description": "Get built-in shader mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.GetShaderMode.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.HasShaderDefine(${1:tier}, ${2:defineHash});",
    "description": "Returns true if shader define was set when compiling shaders for current GraphicsTier.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.HasShaderDefine.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.HasShaderDefine(${1:defineHash});",
    "description": "Returns true if shader define was set when compiling shaders for current GraphicsTier.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.HasShaderDefine.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.SetCustomShader(${1:type}, ${2:shader});",
    "description": "Set custom shader to use instead of a built-in shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.SetCustomShader.html",
    "type": "method"
  },
  {
    "snippet": "GraphicsSettings.SetShaderMode(${1:type}, ${2:mode});",
    "description": "Set built-in shader mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.GraphicsSettings.SetShaderMode.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SortingGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SplashScreen.Begin();",
    "description": "Initializes the splash screen so it is ready to begin drawing. Call this before you start calling SplashScreen.Draw. Internally this function resets the timer and prepares the logos for drawing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.SplashScreen.Begin.html",
    "type": "method"
  },
  {
    "snippet": "SplashScreen.Draw();",
    "description": "Immediately draws the splash screen. Ensure you have called SplashScreen.Begin before you start calling this.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.SplashScreen.Draw.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.CreateScene(${1:sceneName});",
    "description": "Create an empty new Scene at runtime with the given name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.CreateScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.CreateScene(${1:sceneName}, ${2:parameters});",
    "description": "Create an empty new Scene at runtime with the given name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.CreateScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.GetActiveScene();",
    "description": "Gets the currently active Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.GetActiveScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.GetSceneAt(${1:index});",
    "description": "Get the Scene at index in the SceneManager's list of loaded Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.GetSceneAt.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.GetSceneByBuildIndex(${1:buildIndex});",
    "description": "Get a Scene struct from a build index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.GetSceneByBuildIndex.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.GetSceneByName(${1:name});",
    "description": "Searches through the Scenes loaded for a Scene with the given name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.GetSceneByName.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.GetSceneByPath(${1:scenePath});",
    "description": "Searches all Scenes loaded for a Scene that has the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.GetSceneByPath.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadScene(${1:sceneBuildIndex}, ${2:mode});",
    "description": "Loads the Scene by its name or index in Build Settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadScene(${1:sceneName}, ${2:mode});",
    "description": "Loads the Scene by its name or index in Build Settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadScene(${1:sceneBuildIndex}, ${2:parameters});",
    "description": "Loads the Scene by its name or index in Build Settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadScene(${1:sceneName}, ${2:parameters});",
    "description": "Loads the Scene by its name or index in Build Settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadSceneAsync(${1:sceneName}, ${2:mode});",
    "description": "Loads the Scene asynchronously in the background.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadSceneAsync(${1:sceneBuildIndex}, ${2:mode});",
    "description": "Loads the Scene asynchronously in the background.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadSceneAsync(${1:sceneName}, ${2:parameters});",
    "description": "Loads the Scene asynchronously in the background.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.LoadSceneAsync(${1:sceneBuildIndex}, ${2:parameters});",
    "description": "Loads the Scene asynchronously in the background.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.MergeScenes(${1:sourceScene}, ${2:destinationScene});",
    "description": "This will merge the source Scene into the destinationScene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.MergeScenes.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.MoveGameObjectToScene(${1:go}, ${2:scene});",
    "description": "Move a GameObject from its current Scene to a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.MoveGameObjectToScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.SetActiveScene(${1:scene});",
    "description": "Set the Scene to be active.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.SetActiveScene.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.UnloadSceneAsync(${1:sceneBuildIndex});",
    "description": "Destroys all GameObjects associated with the given Scene and removes the Scene from the SceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.UnloadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.UnloadSceneAsync(${1:sceneName});",
    "description": "Destroys all GameObjects associated with the given Scene and removes the Scene from the SceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.UnloadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneManager.UnloadSceneAsync(${1:scene});",
    "description": "Destroys all GameObjects associated with the given Scene and removes the Scene from the SceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.UnloadSceneAsync.html",
    "type": "method"
  },
  {
    "snippet": "SceneUtility.GetBuildIndexByScenePath(${1:scenePath});",
    "description": "Get the build index from a Scene path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneUtility.GetBuildIndexByScenePath.html",
    "type": "method"
  },
  {
    "snippet": "SceneUtility.GetScenePathByBuildIndex(${1:buildIndex});",
    "description": "Get the Scene path from a build index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.SceneUtility.GetScenePathByBuildIndex.html",
    "type": "method"
  },
  {
    "snippet": "GameCenterPlatform.ShowDefaultAchievementCompletionBanner(${1:value});",
    "description": "Show the default iOS banner when achievements are completed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SocialPlatforms.GameCenter.GameCenterPlatform.ShowDefaultAchievementCompletionBanner.html",
    "type": "method"
  },
  {
    "snippet": "PoseDataSource.TryGetDataFromSource(${1:poseSource}, ${2:resultPose});",
    "description": "The GetDatafromSource method is used to query data from the XRNode subsystem based on the provided pose source.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SpatialTracking.PoseDataSource.TryGetDataFromSource.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackedPoseDriver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DataUtility.GetInnerUV(${1:sprite});",
    "description": "Inner UV's of the Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.DataUtility.GetInnerUV.html",
    "type": "method"
  },
  {
    "snippet": "DataUtility.GetMinSize(${1:sprite});",
    "description": "Minimum width and height of the Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.DataUtility.GetMinSize.html",
    "type": "method"
  },
  {
    "snippet": "DataUtility.GetOuterUV(${1:sprite});",
    "description": "Outer UV's of the Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.DataUtility.GetOuterUV.html",
    "type": "method"
  },
  {
    "snippet": "DataUtility.GetPadding(${1:sprite});",
    "description": "Return the padding on the sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.DataUtility.GetPadding.html",
    "type": "method"
  },
  {
    "snippet": "Is.AllocatingGCMemory();",
    "description": "Declares a constraint that the provided delegate allocates GC memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.Constraints.Is.AllocatingGCMemory.html",
    "type": "method"
  },
  {
    "snippet": "Utils.AreFloatsEqual(${1:expected}, ${2:actual}, ${3:allowedRelativeError});",
    "description": "\n          Relative epsilon comparison of two float values for equality.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.Utils.Utils.AreFloatsEqual.html",
    "type": "method"
  },
  {
    "snippet": "Utils.AreFloatsEqualAbsoluteError(${1:expected}, ${2:actual}, ${3:allowedAbsoluteError});",
    "description": "Compares two float values for equality.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.Utils.Utils.AreFloatsEqualAbsoluteError.html",
    "type": "method"
  },
  {
    "snippet": "Utils.CreatePrimitive(${1:type});",
    "description": "Creates a GameObject with a primitive mesh renderer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.Utils.Utils.CreatePrimitive.html",
    "type": "method"
  },
  {
    "snippet": "LogAssert.Expect(${1:type}, ${2:message});",
    "description": "Expect a log message of a specfic type. If an error, assertion or exception log is expected, the test will not fail. The test will fail if a log message is expected but does not appear.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.LogAssert.Expect.html",
    "type": "method"
  },
  {
    "snippet": "LogAssert.Expect(${1:type}, ${2:message});",
    "description": "Expect a log message of a specfic type. If an error, assertion or exception log is expected, the test will not fail. The test will fail if a log message is expected but does not appear.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.LogAssert.Expect.html",
    "type": "method"
  },
  {
    "snippet": "LogAssert.NoUnexpectedReceived();",
    "description": "Triggers an assert if any logs have been received that were not expected. Returns without asserting if all logs received so far have been registered as expected.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TestTools.LogAssert.NoUnexpectedReceived.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.DestroyFontEngine();",
    "description": "Destroy and unload resources used by the Font Engine.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.DestroyFontEngine.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.GetFaceInfo();",
    "description": "Get the FaceInfo for the currently loaded and sized typeface.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.GetFaceInfo.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.InitializeFontEngine();",
    "description": "Initialize the Font Engine and required resources.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.InitializeFontEngine.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:font});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:font}, ${2:pointSize});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:filePath});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:filePath}, ${2:pointSize});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:sourceFontFile});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.LoadFontFace(${1:sourceFontFile}, ${2:pointSize});",
    "description": "Load a source font file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.LoadFontFace.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.SetFaceSize(${1:pointSize});",
    "description": "Set the size of the currently loaded font face.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.SetFaceSize.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.TryGetGlyphIndex(${1:unicode}, ${2:glyphIndex});",
    "description": "Try to get the glyph index for the character at the given Unicode value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.TryGetGlyphIndex.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.TryGetGlyphWithIndexValue(${1:glyphIndex}, ${2:flags}, ${3:glyph});",
    "description": "Try loading the glyph for the given index value and if available populate the glyph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue.html",
    "type": "method"
  },
  {
    "snippet": "FontEngine.TryGetGlyphWithUnicodeValue(${1:unicode}, ${2:flags}, ${3:glyph});",
    "description": "Try loading a glyph for the given unicode value. If available, populates the glyph and returns true. Otherwise returns false and populates the glyph with the .notdef / missing glyph data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Tile.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Tile.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tile.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TileBase.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tilemap.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TilemapRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ActivationTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationPlayableAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AnimationTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioPlayableAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AudioTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlPlayableAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ControlTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GroupTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PlayableTrack.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TimelineAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TrackAsset.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TrackAssetExtensions.GetGroup(${1:asset});",
    "description": "Gets the GroupTrack this track belongs to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Timeline.TrackAssetExtensions.GetGroup.html",
    "type": "method"
  },
  {
    "snippet": "TrackAssetExtensions.SetGroup(${1:asset}, ${2:group});",
    "description": "Assigns the track to the specified group track.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Timeline.TrackAssetExtensions.SetGroup.html",
    "type": "method"
  },
  {
    "snippet": "Device.ResetNoBackupFlag(${1:path});",
    "description": "Reset \"no backup\" file flag: file will be synced with iCloud/iTunes backup and can be deleted by OS in low storage situations.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/tvOS.Device.ResetNoBackupFlag.html",
    "type": "method"
  },
  {
    "snippet": "Device.SetNoBackupFlag(${1:path});",
    "description": "Set file flag to be excluded from iCloud/iTunes backup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/tvOS.Device.SetNoBackupFlag.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlas.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BaseMeshEffect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Button.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Button.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Button.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Button.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Button.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Button.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonClickedEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScaler.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.IsRebuildingGraphics();",
    "description": "Are graphics being rebuild.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.IsRebuildingGraphics.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.IsRebuildingLayout();",
    "description": "Is layout being rebuilt?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.IsRebuildingLayout.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild(${1:element});",
    "description": "Rebuild the graphics of the given element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild(${1:element});",
    "description": "Rebuild the layout of the given element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.TryRegisterCanvasElementForGraphicRebuild(${1:element});",
    "description": "Rebuild the layout of the given element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.TryRegisterCanvasElementForGraphicRebuild.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.TryRegisterCanvasElementForLayoutRebuild(${1:element});",
    "description": "Was the element scheduled.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.TryRegisterCanvasElementForLayoutRebuild.html",
    "type": "method"
  },
  {
    "snippet": "CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild(${1:element});",
    "description": "Remove the given element from rebuild.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild.html",
    "type": "method"
  },
  {
    "snippet": "ClipperRegistry.Register(${1:c});",
    "description": "Register an IClipper.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.ClipperRegistry.Register.html",
    "type": "method"
  },
  {
    "snippet": "ClipperRegistry.Unregister(${1:c});",
    "description": "Unregister an IClipper.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.ClipperRegistry.Unregister.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateButton(${1:resources});",
    "description": "Create a button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateButton.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateDropdown(${1:resources});",
    "description": "Create a dropdown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateDropdown.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateImage(${1:resources});",
    "description": "Create an image.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateImage.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateInputField(${1:resources});",
    "description": "Create an input field.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateInputField.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreatePanel(${1:resources});",
    "description": "Create a panel.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreatePanel.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateRawImage(${1:resources});",
    "description": "Create a raw image.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateRawImage.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateScrollbar(${1:resources});",
    "description": "Create a scrollbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateScrollView(${1:resources});",
    "description": "Create a scroll view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateScrollView.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateSlider(${1:resources});",
    "description": "Create a slider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateSlider.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateText(${1:resources});",
    "description": "Create a text object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateText.html",
    "type": "method"
  },
  {
    "snippet": "DefaultControls.CreateToggle(${1:resources});",
    "description": "Create a toggle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.DefaultControls.CreateToggle.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Dropdown.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "FontUpdateTracker.TrackText(${1:t});",
    "description": "Register a Text element for receiving texture atlas rebuild calls.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.FontUpdateTracker.TrackText.html",
    "type": "method"
  },
  {
    "snippet": "FontUpdateTracker.UntrackText(${1:t});",
    "description": "Deregister a Text element from receiving texture atlas rebuild calls.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.FontUpdateTracker.UntrackText.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Graphic.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRaycaster.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRebuildTracker.TrackGraphic(${1:g});",
    "description": "Track a Graphic.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.GraphicRebuildTracker.TrackGraphic.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRebuildTracker.UnTrackGraphic(${1:g});",
    "description": "Untrack a Graphic.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.GraphicRebuildTracker.UnTrackGraphic.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRegistry.RegisterGraphicForCanvas(${1:c}, ${2:graphic});",
    "description": "Store a link between the given canvas and graphic in the registry.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.GraphicRegistry.RegisterGraphicForCanvas.html",
    "type": "method"
  },
  {
    "snippet": "GraphicRegistry.UnregisterGraphicForCanvas(${1:c}, ${2:graphic});",
    "description": "Deregister the given Graphic from a Canvas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.GraphicRegistry.UnregisterGraphicForCanvas.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Image.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Image.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Image.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Image.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Image.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Image.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "InputField.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "InputField.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "InputField.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputField.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OnChangeEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "SubmitEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElement.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutRebuilder.ForceRebuildLayoutImmediate(${1:layoutRoot});",
    "description": "Forces an immediate rebuild of the layout element and child layout elements affected by the calculations.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutRebuilder.ForceRebuildLayoutImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutRebuilder.MarkLayoutForRebuild(${1:rect});",
    "description": "Mark the given RectTransform as needing it's layout to be recalculated during the next layout pass.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutRebuilder.MarkLayoutForRebuild.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetFlexibleHeight(${1:rect});",
    "description": "Returns the flexible height of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetFlexibleHeight.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetFlexibleSize(${1:rect}, ${2:axis});",
    "description": "Returns the flexible size of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetFlexibleSize.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetFlexibleWidth(${1:rect});",
    "description": "Returns the flexible width of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetFlexibleWidth.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetMinHeight(${1:rect});",
    "description": "Returns the minimum height of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetMinHeight.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetMinSize(${1:rect}, ${2:axis});",
    "description": "Returns the minimum size of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetMinSize.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetMinWidth(${1:rect});",
    "description": "Returns the minimum width of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetMinWidth.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetPreferredHeight(${1:rect});",
    "description": "Returns the preferred height of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetPreferredHeight.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetPreferredSize(${1:rect}, ${2:axis});",
    "description": "Returns the preferred size of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetPreferredSize.html",
    "type": "method"
  },
  {
    "snippet": "LayoutUtility.GetPreferredWidth(${1:rect});",
    "description": "Returns the preferred width of the layout element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.LayoutUtility.GetPreferredWidth.html",
    "type": "method"
  },
  {
    "snippet": "Mask.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Mask.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Mask.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Mask.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskableGraphic.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.FindRootSortOverrideCanvas(${1:start});",
    "description": "Find a root Canvas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.FindRootSortOverrideCanvas.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.GetRectMaskForClippable(${1:clippable});",
    "description": "Find the correct RectMask2D for a given IClippable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.GetRectMaskForClippable.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.GetStencilDepth(${1:transform}, ${2:stopAfter});",
    "description": "Find the stencil depth for a given element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.GetStencilDepth.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.IsDescendantOrSelf(${1:father}, ${2:child});",
    "description": "Helper function to determine if the child is a descendant of father or is father.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.IsDescendantOrSelf.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.Notify2DMaskStateChanged(${1:mask});",
    "description": "Notify all IClippables under the given component that they need to recalculate clipping.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.Notify2DMaskStateChanged.html",
    "type": "method"
  },
  {
    "snippet": "MaskUtilities.NotifyStencilStateChanged(${1:mask});",
    "description": "Notify all IMaskable under the given component that they need to recalculate masking.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.MaskUtilities.NotifyStencilStateChanged.html",
    "type": "method"
  },
  {
    "snippet": "Outline.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Outline.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Outline.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Outline.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Outline.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PositionAsUV1.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImage.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Scrollbar.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRect.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Selectable.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Shadow.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Slider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Slider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Slider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Slider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "Text.GetTextAnchorPivot(${1:anchor});",
    "description": "Convenience function to determine the vector offset of the anchor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UI.Text.GetTextAnchorPivot.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Toggle.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEvent.GetValidMethodInfo(${1:obj}, ${2:functionName}, ${3:argumentTypes});",
    "description": "Given an object, function name, and a list of argument types; find the method that matches.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventBase.GetValidMethodInfo.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VerticalLayoutGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClip.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoPlayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhraseRecognitionSystem.Restart();",
    "description": "Attempts to restart the phrase recognition system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Speech.PhraseRecognitionSystem.Restart.html",
    "type": "method"
  },
  {
    "snippet": "PhraseRecognitionSystem.Shutdown();",
    "description": "Shuts phrase recognition system down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Speech.PhraseRecognitionSystem.Shutdown.html",
    "type": "method"
  },
  {
    "snippet": "Crypto.ComputeMD5Hash(${1:buffer});",
    "description": "Computes MD5 hash value for the specified byte array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Crypto.ComputeMD5Hash.html",
    "type": "method"
  },
  {
    "snippet": "Crypto.ComputeSHA1Hash(${1:buffer});",
    "description": "Computes SHA1 hash value for the specified byte array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Crypto.ComputeSHA1Hash.html",
    "type": "method"
  },
  {
    "snippet": "Directory.CreateDirectory(${1:path});",
    "description": "Creates directory in the specified path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Directory.CreateDirectory.html",
    "type": "method"
  },
  {
    "snippet": "Directory.Delete(${1:path});",
    "description": "Deletes a directory from a specified path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Directory.Delete.html",
    "type": "method"
  },
  {
    "snippet": "Directory.Exists(${1:path});",
    "description": "Determines whether the given path refers to an existing directory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.Directory.Exists.html",
    "type": "method"
  },
  {
    "snippet": "File.Delete(${1:path});",
    "description": "Deletes the specified file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.File.Delete.html",
    "type": "method"
  },
  {
    "snippet": "File.Exists(${1:path});",
    "description": "Determines whether the specified file exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.File.Exists.html",
    "type": "method"
  },
  {
    "snippet": "File.ReadAllBytes(${1:path});",
    "description": "Opens a binary file, reads the contents of the file into a byte array, and then closes the file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.File.ReadAllBytes.html",
    "type": "method"
  },
  {
    "snippet": "File.WriteAllBytes(${1:path}, ${2:bytes});",
    "description": "Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.File.WriteAllBytes.html",
    "type": "method"
  },
  {
    "snippet": "LicenseInformation.PurchaseApp();",
    "description": "Attempts to purchase the app if it is in installed in trial mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Windows.LicenseInformation.PurchaseApp.html",
    "type": "method"
  },
  {
    "snippet": "Application.InvokeOnAppThread(${1:item}, ${2:waitUntilDone});",
    "description": "Executes callback item on application thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Application.InvokeOnAppThread.html",
    "type": "method"
  },
  {
    "snippet": "Application.InvokeOnUIThread(${1:item}, ${2:waitUntilDone});",
    "description": "Executes callback item on UI thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Application.InvokeOnUIThread.html",
    "type": "method"
  },
  {
    "snippet": "Application.RunningOnAppThread();",
    "description": "Returns true if you're running on application thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Application.RunningOnAppThread.html",
    "type": "method"
  },
  {
    "snippet": "Application.RunningOnUIThread();",
    "description": "Returns true if you're running on UI thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Application.RunningOnUIThread.html",
    "type": "method"
  },
  {
    "snippet": "Cursor.SetCustomCursor(${1:id});",
    "description": "Set a custom cursor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Cursor.SetCustomCursor.html",
    "type": "method"
  },
  {
    "snippet": "Launcher.LaunchFile(${1:folder}, ${2:relativeFilePath}, ${3:showWarning});",
    "description": "Launches the default app associated with specified file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Launcher.LaunchFile.html",
    "type": "method"
  },
  {
    "snippet": "Launcher.LaunchFileWithPicker(${1:fileExtension});",
    "description": "Opens a dialog for picking the file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Launcher.LaunchFileWithPicker.html",
    "type": "method"
  },
  {
    "snippet": "Launcher.LaunchUri(${1:uri}, ${2:showWarning});",
    "description": "Starts the default app associated with the URI scheme name for the specified URI, using the specified options.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Launcher.LaunchUri.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateOrUpdateSecondary(${1:data});",
    "description": "Creates new or updates existing secondary tile.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.CreateOrUpdateSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateOrUpdateSecondary(${1:data}, ${2:pos});",
    "description": "Creates new or updates existing secondary tile.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.CreateOrUpdateSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.CreateOrUpdateSecondary(${1:data}, ${2:area});",
    "description": "Creates new or updates existing secondary tile.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.CreateOrUpdateSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.DeleteSecondary(${1:tileId});",
    "description": "Show a request to unpin secondary tile from start screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.DeleteSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.DeleteSecondary(${1:tileId}, ${2:pos});",
    "description": "Show a request to unpin secondary tile from start screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.DeleteSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.DeleteSecondary(${1:tileId}, ${2:area});",
    "description": "Show a request to unpin secondary tile from start screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.DeleteSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.Exists(${1:tileId});",
    "description": "Whether secondary tile is pinned to start screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.Exists.html",
    "type": "method"
  },
  {
    "snippet": "Tile.GetSecondaries();",
    "description": "Gets all secondary tiles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.GetSecondaries.html",
    "type": "method"
  },
  {
    "snippet": "Tile.GetSecondary(${1:tileId});",
    "description": "Returns the secondary tile, identified by tile id.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.GetSecondary.html",
    "type": "method"
  },
  {
    "snippet": "Tile.GetTemplate(${1:templ});",
    "description": "Get template XML for tile notification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Tile.GetTemplate.html",
    "type": "method"
  },
  {
    "snippet": "Toast.Create(${1:xml});",
    "description": "Create toast notification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Toast.Create.html",
    "type": "method"
  },
  {
    "snippet": "Toast.Create(${1:image}, ${2:text});",
    "description": "Create toast notification.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Toast.Create.html",
    "type": "method"
  },
  {
    "snippet": "Toast.GetTemplate(${1:templ});",
    "description": "Get template XML for toast notification.\n",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/WSA.Toast.GetTemplate.html",
    "type": "method"
  },
  {
    "snippet": "InteractionManager.GetCurrentReading();",
    "description": "Get the current SourceState.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Input.InteractionManager.GetCurrentReading.html",
    "type": "method"
  },
  {
    "snippet": "InteractionManager.GetCurrentReading(${1:sourceStates});",
    "description": "Get the current SourceState.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Input.InteractionManager.GetCurrentReading.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchorStore.GetAsync(${1:onCompleted});",
    "description": "Gets the WorldAnchorStore instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Persistence.WorldAnchorStore.GetAsync.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchorTransferBatch.ExportAsync(${1:transferBatch}, ${2:onDataAvailable}, ${3:onCompleted});",
    "description": "Exports the input WorldAnchorTransferBatch into a byte array which can be passed to WorldAnchorTransferBatch.ImportAsync to restore the original WorldAnchorTransferBatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Sharing.WorldAnchorTransferBatch.ExportAsync.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchorTransferBatch.ImportAsync(${1:serializedData}, ${2:onComplete});",
    "description": "Imports the provided bytes into a WorldAnchorTransferBatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Sharing.WorldAnchorTransferBatch.ImportAsync.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchorTransferBatch.ImportAsync(${1:serializedData}, ${2:offset}, ${3:length}, ${4:onComplete});",
    "description": "Imports the provided bytes into a WorldAnchorTransferBatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.Sharing.WorldAnchorTransferBatch.ImportAsync.html",
    "type": "method"
  },
  {
    "snippet": "PhotoCapture.CreateAsync(${1:showHolograms}, ${2:onCreatedCallback});",
    "description": "Asynchronously creates an instance of a PhotoCapture object that can be used to capture photos.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.WebCam.PhotoCapture.CreateAsync.html",
    "type": "method"
  },
  {
    "snippet": "VideoCapture.CreateAsync(${1:showHolograms}, ${2:onCreatedCallback});",
    "description": "Asynchronously creates an instance of a VideoCapture object that can be used to record videos from the web camera to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.WebCam.VideoCapture.CreateAsync.html",
    "type": "method"
  },
  {
    "snippet": "HolographicSettings.SetFocusPointForFrame(${1:position});",
    "description": "Sets a point in 3d space that is the focal point of the Scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.HolographicSettings.SetFocusPointForFrame.html",
    "type": "method"
  },
  {
    "snippet": "HolographicSettings.SetFocusPointForFrame(${1:position}, ${2:normal});",
    "description": "Sets a point in 3d space that is the focal point of the Scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.HolographicSettings.SetFocusPointForFrame.html",
    "type": "method"
  },
  {
    "snippet": "HolographicSettings.SetFocusPointForFrame(${1:position}, ${2:normal}, ${3:velocity});",
    "description": "Sets a point in 3d space that is the focal point of the Scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.HolographicSettings.SetFocusPointForFrame.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldAnchor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WorldManager.GetNativeISpatialCoordinateSystemPtr();",
    "description": "Return the native pointer to Windows::Perception::Spatial::ISpatialCoordinateSystem which was retrieved from an Windows::Perception::Spatial::ISpatialStationaryFrameOfReference object underlying the Unity World Origin.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.WSA.WorldManager.GetNativeISpatialCoordinateSystemPtr.html",
    "type": "method"
  },
  {
    "snippet": "InputDevices.GetDeviceAtXRNode(${1:node});",
    "description": "Gets the input device at a given XRNode endpoint.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.InputDevices.GetDeviceAtXRNode.html",
    "type": "method"
  },
  {
    "snippet": "InputTracking.GetLocalPosition(${1:node});",
    "description": "Gets the position of a specific node.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.InputTracking.GetLocalPosition.html",
    "type": "method"
  },
  {
    "snippet": "InputTracking.GetLocalRotation(${1:node});",
    "description": "Gets the rotation of a specific node.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.InputTracking.GetLocalRotation.html",
    "type": "method"
  },
  {
    "snippet": "InputTracking.GetNodeStates();",
    "description": "Describes all currently connected XRNodes and provides available tracking states for each.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.InputTracking.GetNodeStates.html",
    "type": "method"
  },
  {
    "snippet": "InputTracking.Recenter();",
    "description": "Center tracking to the current position and orientation of the HMD.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.InputTracking.Recenter.html",
    "type": "method"
  },
  {
    "snippet": "XRDevice.DisableAutoXRCameraTracking();",
    "description": "Sets whether the camera passed in the first parameter is controlled implicitly by the XR Device",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRDevice.DisableAutoXRCameraTracking.html",
    "type": "method"
  },
  {
    "snippet": "XRDevice.GetNativePtr();",
    "description": "This method returns an IntPtr representing the native pointer to the XR device if one is available, otherwise the value will be IntPtr.Zero.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRDevice.GetNativePtr.html",
    "type": "method"
  },
  {
    "snippet": "XRDevice.GetTrackingSpaceType();",
    "description": "Returns the device's current TrackingSpaceType. This value determines how the camera is positioned relative to its starting position. For more, see the section \"Understanding the camera\" in VROverview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRDevice.GetTrackingSpaceType.html",
    "type": "method"
  },
  {
    "snippet": "XRDevice.SetTrackingSpaceType(${1:trackingSpaceType});",
    "description": "Sets the device's current TrackingSpaceType. Returns true on success. Returns false if the given TrackingSpaceType is not supported or the device fails to switch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRDevice.SetTrackingSpaceType.html",
    "type": "method"
  },
  {
    "snippet": "XRSettings.LoadDeviceByName(${1:deviceName});",
    "description": "Loads the requested device at the beginning of the next frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRSettings.LoadDeviceByName.html",
    "type": "method"
  },
  {
    "snippet": "XRSettings.LoadDeviceByName(${1:prioritizedDeviceNameList});",
    "description": "Loads the requested device at the beginning of the next frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRSettings.LoadDeviceByName.html",
    "type": "method"
  },
  {
    "snippet": "XRStats.TryGetDroppedFrameCount(${1:droppedFrameCount});",
    "description": "Retrieves the number of dropped frames reported by the XR SDK.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRStats.TryGetDroppedFrameCount.html",
    "type": "method"
  },
  {
    "snippet": "XRStats.TryGetFramePresentCount(${1:framePresentCount});",
    "description": "Retrieves the number of times the current frame has been drawn to the device as reported by the XR SDK.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRStats.TryGetFramePresentCount.html",
    "type": "method"
  },
  {
    "snippet": "XRStats.TryGetGPUTimeLastFrame(${1:gpuTimeLastFrame});",
    "description": "Retrieves the time spent by the GPU last frame, in seconds, as reported by the XR SDK.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/XR.XRStats.TryGetGPUTimeLastFrame.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnchoredJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AndroidInput.GetSecondaryTouch(${1:index});",
    "description": "Returns object representing status of a specific touch on a secondary touchpad (Does not allocate temporary variables).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidInput.GetSecondaryTouch.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.ConvertFromJNIArray(${1:array});",
    "description": "Creates a managed array from a Java array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.ConvertFromJNIArray.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.ConvertToJNIArray(${1:array});",
    "description": "Creates a Java array from a managed array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.ConvertToJNIArray.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.CreateJavaProxy(${1:proxy});",
    "description": "Creates a java proxy object which connects to the supplied proxy implementation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.CreateJavaProxy.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.CreateJavaRunnable(${1:jrunnable});",
    "description": "Creates a UnityJavaRunnable object (implements java.lang.Runnable).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.CreateJavaRunnable.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.CreateJNIArgArray(${1:args});",
    "description": "Creates the parameter array to be used as argument list when invoking Java code through CallMethod() in AndroidJNI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.CreateJNIArgArray.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.DeleteJNIArgArray(${1:args}, ${2:jniArgs});",
    "description": "Deletes any local jni references previously allocated by CreateJNIArgArray().",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.DeleteJNIArgArray.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetConstructorID(${1:javaClass});",
    "description": "Scans a particular Java class for a constructor method matching a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetConstructorID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetConstructorID(${1:javaClass}, ${2:signature});",
    "description": "Scans a particular Java class for a constructor method matching a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetConstructorID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetConstructorID(${1:jclass}, ${2:args});",
    "description": "Scans a particular Java class for a constructor method matching a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetConstructorID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetFieldID(${1:javaClass}, ${2:fieldName});",
    "description": "Scans a particular Java class for a field matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetFieldID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetFieldID(${1:javaClass}, ${2:fieldName}, ${3:signature});",
    "description": "Scans a particular Java class for a field matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetFieldID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetFieldID(${1:javaClass}, ${2:fieldName}, ${3:signature}, ${4:isStatic});",
    "description": "Scans a particular Java class for a field matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetFieldID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetFieldID(${1:jclass}, ${2:fieldName}, ${3:isStatic});",
    "description": "Scans a particular Java class for a field matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetFieldID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetMethodID(${1:javaClass}, ${2:methodName});",
    "description": "Scans a particular Java class for a method matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetMethodID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetMethodID(${1:javaClass}, ${2:methodName}, ${3:signature});",
    "description": "Scans a particular Java class for a method matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetMethodID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetMethodID(${1:javaClass}, ${2:methodName}, ${3:signature}, ${4:isStatic});",
    "description": "Scans a particular Java class for a method matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetMethodID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetMethodID(${1:jclass}, ${2:methodName}, ${3:args}, ${4:isStatic});",
    "description": "Scans a particular Java class for a method matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetMethodID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetMethodID(${1:jclass}, ${2:methodName}, ${3:args}, ${4:isStatic});",
    "description": "Scans a particular Java class for a method matching a name and a signature.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetMethodID.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetSignature(${1:obj});",
    "description": "Creates the JNI signature string for particular object type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetSignature.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetSignature(${1:args});",
    "description": "Creates the JNI signature string for particular object type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetSignature.html",
    "type": "method"
  },
  {
    "snippet": "AndroidJNIHelper.GetSignature(${1:args});",
    "description": "Creates the JNI signature string for particular object type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AndroidJNIHelper.GetSignature.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Animation.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Animation.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Animation.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Animation.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationClip.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimationCurve.Constant(${1:timeStart}, ${2:timeEnd}, ${3:value});",
    "description": "Creates a constant \"curve\" starting at timeStart, ending at timeEnd and with the value value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationCurve.Constant.html",
    "type": "method"
  },
  {
    "snippet": "AnimationCurve.EaseInOut(${1:timeStart}, ${2:valueStart}, ${3:timeEnd}, ${4:valueEnd});",
    "description": "Creates an ease-in and out curve starting at timeStart, valueStart and ending at timeEnd, valueEnd.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationCurve.EaseInOut.html",
    "type": "method"
  },
  {
    "snippet": "AnimationCurve.Linear(${1:timeStart}, ${2:valueStart}, ${3:timeEnd}, ${4:valueEnd});",
    "description": "A straight Line starting at timeStart, valueStart and ending at timeEnd, valueEnd.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationCurve.Linear.html",
    "type": "method"
  },
  {
    "snippet": "Animator.StringToHash(${1:name});",
    "description": "Generates an parameter id from a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animator.StringToHash.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorOverrideController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorUtility.DeoptimizeTransformHierarchy(${1:go});",
    "description": "This function will recreate all transform hierarchy under GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimatorUtility.DeoptimizeTransformHierarchy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorUtility.OptimizeTransformHierarchy(${1:go}, ${2:exposedTransforms});",
    "description": "This function will remove all transform hierarchy under GameObject, the animator will write directly transform matrices into the skin mesh matrices saving alot of CPU cycles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimatorUtility.OptimizeTransformHierarchy.html",
    "type": "method"
  },
  {
    "snippet": "Application.CanStreamedLevelBeLoaded(${1:levelIndex});",
    "description": "Can the streamed level be loaded?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.CanStreamedLevelBeLoaded.html",
    "type": "method"
  },
  {
    "snippet": "Application.CanStreamedLevelBeLoaded(${1:levelName});",
    "description": "Can the streamed level be loaded?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.CanStreamedLevelBeLoaded.html",
    "type": "method"
  },
  {
    "snippet": "Application.GetBuildTags();",
    "description": "Returns an array of feature tags in use for this build.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.GetBuildTags.html",
    "type": "method"
  },
  {
    "snippet": "Application.GetStackTraceLogType(${1:logType});",
    "description": "Get stack trace logging options. The default value is StackTraceLogType.ScriptOnly.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.GetStackTraceLogType.html",
    "type": "method"
  },
  {
    "snippet": "Application.HasProLicense();",
    "description": "Is Unity activated with the Pro license?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.HasProLicense.html",
    "type": "method"
  },
  {
    "snippet": "Application.HasUserAuthorization(${1:mode});",
    "description": "Check if the user has authorized use of the webcam or microphone in the Web Player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.HasUserAuthorization.html",
    "type": "method"
  },
  {
    "snippet": "Application.IsPlaying(${1:obj});",
    "description": "Returns true if the given object is part of the playing world either in any kind of built Player or in Play Mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.IsPlaying.html",
    "type": "method"
  },
  {
    "snippet": "Application.OpenURL(${1:url});",
    "description": "Opens the url in a browser.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.OpenURL.html",
    "type": "method"
  },
  {
    "snippet": "Application.Quit();",
    "description": "Quits the player application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.Quit.html",
    "type": "method"
  },
  {
    "snippet": "Application.RequestAdvertisingIdentifierAsync(${1:delegateMethod});",
    "description": "Request advertising ID for iOS, Android and Windows Store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.RequestAdvertisingIdentifierAsync.html",
    "type": "method"
  },
  {
    "snippet": "Application.RequestUserAuthorization(${1:mode});",
    "description": "Request authorization to use the webcam or microphone on iOS.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.RequestUserAuthorization.html",
    "type": "method"
  },
  {
    "snippet": "Application.SetBuildTags(${1:buildTags});",
    "description": "Set an array of feature tags for this build.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.SetBuildTags.html",
    "type": "method"
  },
  {
    "snippet": "Application.SetStackTraceLogType(${1:logType}, ${2:stackTraceType});",
    "description": "Set stack trace logging options. The default value is StackTraceLogType.ScriptOnly.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.SetStackTraceLogType.html",
    "type": "method"
  },
  {
    "snippet": "Application.Unload();",
    "description": "Unloads the Unity runtime.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Application.Unload.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AreaEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromFile(${1:path}, ${2:crc}, ${3:offset});",
    "description": "Synchronously loads an AssetBundle from a file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromFile.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromFile();",
    "description": "Synchronously loads an AssetBundle from a file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromFile.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromFileAsync(${1:path}, ${2:crc}, ${3:offset});",
    "description": "Asynchronously loads an AssetBundle from a file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromFileAsync.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromMemory(${1:binary}, ${2:crc});",
    "description": "Synchronously create an AssetBundle from a memory region.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromMemory.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromMemoryAsync(${1:binary}, ${2:crc});",
    "description": "Asynchronously create an AssetBundle from a memory region.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromMemoryAsync.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromStream(${1:stream}, ${2:crc}, ${3:managedReadBufferSize});",
    "description": "Synchronously loads an AssetBundle from a managed Stream.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromStream.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.LoadFromStreamAsync(${1:stream}, ${2:crc}, ${3:managedReadBufferSize});",
    "description": "Asynchronously loads an AssetBundle from a managed Stream.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.LoadFromStreamAsync.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.RecompressAssetBundleAsync(${1:inputPath}, ${2:outputPath}, ${3:method}, ${4:expectedCRC}, ${5:priority});",
    "description": "Asynchronously recompress a downloaded/stored AssetBundle from one BuildCompression to another.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.RecompressAssetBundleAsync.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundle.UnloadAllAssetBundles(${1:unloadAllObjects});",
    "description": "Unloads all currently loaded Asset Bundles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetBundle.UnloadAllAssetBundles.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetBundleManifest.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioChorusFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:stream});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:stream}, ${6:pcmreadercallback});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:stream}, ${6:pcmreadercallback}, ${7:pcmsetpositioncallback});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:_3D}, ${6:stream});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:_3D}, ${6:stream}, ${7:pcmreadercallback});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioClip.Create(${1:name}, ${2:lengthSamples}, ${3:channels}, ${4:frequency}, ${5:_3D}, ${6:stream}, ${7:pcmreadercallback}, ${8:pcmsetpositioncallback});",
    "description": "Creates a user AudioClip with a name and with the given length in samples, channels and frequency.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioClip.Create.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioDistortionFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioEchoFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioHighPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioListener.GetOutputData(${1:samples}, ${2:channel});",
    "description": "Provides a block of the listener (master)'s output data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioListener.GetOutputData.html",
    "type": "method"
  },
  {
    "snippet": "AudioListener.GetOutputData(${1:numSamples}, ${2:channel});",
    "description": "Provides a block of the listener (master)'s output data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioListener.GetOutputData.html",
    "type": "method"
  },
  {
    "snippet": "AudioListener.GetSpectrumData(${1:samples}, ${2:channel}, ${3:window});",
    "description": "Provides a block of the listener (master)'s spectrum data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioListener.GetSpectrumData.html",
    "type": "method"
  },
  {
    "snippet": "AudioListener.GetSpectrumData(${1:numSamples}, ${2:channel}, ${3:window});",
    "description": "Provides a block of the listener (master)'s spectrum data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioListener.GetSpectrumData.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioLowPassFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioRenderer.GetSampleCountForCaptureFrame();",
    "description": "Returns the number of samples available since the last time AudioRenderer.Render was called. This is dependent on the frame capture rate.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioRenderer.GetSampleCountForCaptureFrame.html",
    "type": "method"
  },
  {
    "snippet": "AudioRenderer.Start();",
    "description": "Enters audio recording mode. After this Unity will output silence until AudioRenderer.Stop is called.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioRenderer.Start.html",
    "type": "method"
  },
  {
    "snippet": "AudioRenderer.Stop();",
    "description": "Exits audio recording mode. After this audio output will be audible again.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioRenderer.Stop.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioReverbZone.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.GetConfiguration();",
    "description": "Returns the current configuration of the audio device and system. The values in the struct may then be modified and reapplied via AudioSettings.Reset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.GetConfiguration.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.GetDSPBufferSize(${1:bufferLength}, ${2:numBuffers});",
    "description": "Get the mixer's buffer size in samples.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.GetDSPBufferSize.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.GetSpatializerPluginName();",
    "description": "Returns the name of the spatializer selected on the currently-running platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.GetSpatializerPluginName.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.GetSpatializerPluginNames();",
    "description": "Returns an array with the names of all the available spatializer plugins.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.GetSpatializerPluginNames.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.Reset(${1:config});",
    "description": "Performs a change of the device configuration. In response to this the AudioSettings.OnAudioConfigurationChanged delegate is invoked with the argument deviceWasChanged=false. It cannot be guaranteed that the exact settings specified can be used, but the an attempt is made to use the closest match supported by the system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.Reset.html",
    "type": "method"
  },
  {
    "snippet": "AudioSettings.SetSpatializerPluginName(${1:pluginName});",
    "description": "Sets the spatializer plugin for all platform groups. If a null or empty string is passed in, the existing spatializer plugin will be cleared.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSettings.SetSpatializerPluginName.html",
    "type": "method"
  },
  {
    "snippet": "AudioSource.PlayClipAtPoint(${1:clip}, ${2:position}, ${3:volume});",
    "description": "Plays an AudioClip at a given position in world space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioSource.PlayClipAtPoint.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Avatar.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarBuilder.BuildGenericAvatar(${1:go}, ${2:rootMotionTransformName});",
    "description": "Create a new generic avatar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AvatarBuilder.BuildGenericAvatar.html",
    "type": "method"
  },
  {
    "snippet": "AvatarBuilder.BuildHumanAvatar(${1:go}, ${2:humanDescription});",
    "description": "Create a humanoid avatar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AvatarBuilder.BuildHumanAvatar.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AvatarMask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Behaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BillboardRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BoxCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuoyancyEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Caching.AddCache(${1:cachePath});",
    "description": "Add a cache with the given path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.AddCache.html",
    "type": "method"
  },
  {
    "snippet": "Caching.ClearAllCachedVersions(${1:assetBundleName});",
    "description": "Removes all the cached versions of the given AssetBundle from the cache.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.ClearAllCachedVersions.html",
    "type": "method"
  },
  {
    "snippet": "Caching.ClearCache();",
    "description": "Removes all AssetBundle content that has been cached by the current application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.ClearCache.html",
    "type": "method"
  },
  {
    "snippet": "Caching.ClearCache(${1:expiration});",
    "description": "Removes all AssetBundle content that has been cached by the current application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.ClearCache.html",
    "type": "method"
  },
  {
    "snippet": "Caching.ClearCachedVersion(${1:assetBundleName}, ${2:hash});",
    "description": "Removes the given version of the AssetBundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.ClearCachedVersion.html",
    "type": "method"
  },
  {
    "snippet": "Caching.ClearOtherCachedVersions(${1:assetBundleName}, ${2:hash});",
    "description": "Removes all the cached versions of the AssetBundle from the cache, except for the specified version.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.ClearOtherCachedVersions.html",
    "type": "method"
  },
  {
    "snippet": "Caching.GetCacheAt(${1:cacheIndex});",
    "description": "Returns the Cache at the given position in the cache list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.GetCacheAt.html",
    "type": "method"
  },
  {
    "snippet": "Caching.GetCacheByPath(${1:cachePath});",
    "description": "Returns the Cache that has the given cache path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.GetCacheByPath.html",
    "type": "method"
  },
  {
    "snippet": "Caching.IsVersionCached(${1:url}, ${2:version});",
    "description": "Checks if an AssetBundle is cached.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.IsVersionCached.html",
    "type": "method"
  },
  {
    "snippet": "Caching.MarkAsUsed(${1:url}, ${2:version});",
    "description": "Bumps the timestamp of a cached file to be the current time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.MarkAsUsed.html",
    "type": "method"
  },
  {
    "snippet": "Caching.MoveCacheAfter(${1:src}, ${2:dst});",
    "description": "Moves the source Cache after the destination Cache in the cache list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.MoveCacheAfter.html",
    "type": "method"
  },
  {
    "snippet": "Caching.MoveCacheBefore(${1:src}, ${2:dst});",
    "description": "Moves the source Cache before the destination Cache in the cache list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.MoveCacheBefore.html",
    "type": "method"
  },
  {
    "snippet": "Caching.RemoveCache(${1:cache});",
    "description": "Removes the Cache from cache list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Caching.RemoveCache.html",
    "type": "method"
  },
  {
    "snippet": "Camera.CalculateProjectionMatrixFromPhysicalProperties();",
    "description": "\n                    Calculates the projection matrix from focal length, sensor size, lens shift, near plane distance, far plane distance, and Gate fit parameters.\n                    To calculate the projection matrix without taking Gate fit into account, use  Camera.GateFitMode.None . See Also: GateFitParameters\n                ",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Camera.CalculateProjectionMatrixFromPhysicalProperties.html",
    "type": "method"
  },
  {
    "snippet": "Camera.FocalLengthToFOV(${1:focalLength}, ${2:sensorSize});",
    "description": "Converts focal length to field of view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Camera.FocalLengthToFOV.html",
    "type": "method"
  },
  {
    "snippet": "Camera.FOVToFocalLength(${1:fov}, ${2:sensorSize});",
    "description": "Converts field of view to focal length. Use either sensor height and vertical field of view or sensor width and horizontal field of view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Camera.FOVToFocalLength.html",
    "type": "method"
  },
  {
    "snippet": "Camera.GetAllCameras(${1:cameras});",
    "description": "Fills an array of Camera with the current cameras in the Scene, without allocating a new array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Camera.GetAllCameras.html",
    "type": "method"
  },
  {
    "snippet": "Canvas.ForceUpdateCanvases();",
    "description": "Force all canvases to update their content.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Canvas.ForceUpdateCanvases.html",
    "type": "method"
  },
  {
    "snippet": "Canvas.GetDefaultCanvasMaterial();",
    "description": "Returns the default material that can be used for rendering normal elements on the Canvas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Canvas.GetDefaultCanvasMaterial.html",
    "type": "method"
  },
  {
    "snippet": "Canvas.GetETC1SupportedCanvasMaterial();",
    "description": "Gets or generates the ETC1 Material.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Canvas.GetETC1SupportedCanvasMaterial.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CharacterJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CircleCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Cloth.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.AddInput(${1:name}, ${2:deviceName}, ${3:serverUrl}, ${4:index}, ${5:type});",
    "description": "Add a new VRPN input entry.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.AddInput.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.CheckConnectionToServer(${1:name});",
    "description": "Check the connection status of the device to the VRPN server it connected to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.CheckConnectionToServer.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.EditInput(${1:name}, ${2:deviceName}, ${3:serverUrl}, ${4:index}, ${5:type});",
    "description": "Edit an input entry which added via ClusterInput.AddInput.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.EditInput.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.GetAxis(${1:name});",
    "description": "Returns the axis value as a continous float.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.GetAxis.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.GetButton(${1:name});",
    "description": "Returns the binary value of a button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.GetButton.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.GetTrackerPosition(${1:name});",
    "description": "Return the position of a tracker as a Vector3.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.GetTrackerPosition.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.GetTrackerRotation(${1:name});",
    "description": "Returns the rotation of a tracker as a Quaternion.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.GetTrackerRotation.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.SetAxis(${1:name}, ${2:value});",
    "description": "Sets the axis value for this input. Only works for input typed Custom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.SetAxis.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.SetButton(${1:name}, ${2:value});",
    "description": "Sets the button value for this input. Only works for input typed Custom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.SetButton.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.SetTrackerPosition(${1:name}, ${2:value});",
    "description": "Sets the tracker position for this input. Only works for input typed Custom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.SetTrackerPosition.html",
    "type": "method"
  },
  {
    "snippet": "ClusterInput.SetTrackerRotation(${1:name}, ${2:value});",
    "description": "Sets the tracker rotation for this input. Only works for input typed Custom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ClusterInput.SetTrackerRotation.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Collider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Collider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Collider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Collider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Color.HSVToRGB(${1:H}, ${2:S}, ${3:V});",
    "description": "Creates an RGB colour from HSV input.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color.HSVToRGB.html",
    "type": "method"
  },
  {
    "snippet": "Color.HSVToRGB(${1:H}, ${2:S}, ${3:V}, ${4:hdr});",
    "description": "Creates an RGB colour from HSV input.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color.HSVToRGB.html",
    "type": "method"
  },
  {
    "snippet": "Color.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between colors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Color.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between colors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Color.RGBToHSV(${1:rgbColor}, ${2:H}, ${3:S}, ${4:V});",
    "description": "Calculates the hue, saturation and value of an RGB input color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color.RGBToHSV.html",
    "type": "method"
  },
  {
    "snippet": "Color32.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between colors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color32.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Color32.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between colors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Color32.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "ColorUtility.ToHtmlStringRGB(${1:color});",
    "description": "Returns the color as a hexadecimal string in the format \"RRGGBB\".",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ColorUtility.ToHtmlStringRGB.html",
    "type": "method"
  },
  {
    "snippet": "ColorUtility.ToHtmlStringRGBA(${1:color});",
    "description": "Returns the color as a hexadecimal string in the format \"RRGGBBAA\".",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ColorUtility.ToHtmlStringRGBA.html",
    "type": "method"
  },
  {
    "snippet": "ColorUtility.TryParseHtmlString(${1:htmlString}, ${2:color});",
    "description": "Attempts to convert a html color string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ColorUtility.TryParseHtmlString.html",
    "type": "method"
  },
  {
    "snippet": "Component.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Component.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Component.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Component.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Component.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Component.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CompositeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeBuffer.CopyCount(${1:src}, ${2:dst}, ${3:dstOffsetBytes});",
    "description": "Copy counter value of append/consume buffer into another buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ComputeBuffer.CopyCount.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ComputeShader.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConfigurableJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ConstantForce2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CrashReport.RemoveAll();",
    "description": "Remove all reports from available reports list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CrashReport.RemoveAll.html",
    "type": "method"
  },
  {
    "snippet": "Cubemap.CreateExternalTexture(${1:width}, ${2:format}, ${3:mipmap}, ${4:nativeTex});",
    "description": "Creates a Unity cubemap out of externally created native cubemap object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Cubemap.CreateExternalTexture.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "CubemapArray.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "Cursor.SetCursor();",
    "description": "Sets the mouse cursor to the given texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Cursor.SetCursor.html",
    "type": "method"
  },
  {
    "snippet": "Cursor.SetCursor(${1:texture}, ${2:hotspot}, ${3:cursorMode});",
    "description": "Sets the mouse cursor to the given texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Cursor.SetCursor.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.GetTemporary(${1:desc});",
    "description": "Allocate a temporary render texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.GetTemporary.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.GetTemporary(${1:width}, ${2:height}, ${3:depthBuffer}, ${4:format}, ${5:readWrite}, ${6:antiAliasing}, ${7:memorylessMode}, ${8:vrUsage}, ${9:useDynamicScale});",
    "description": "Allocate a temporary render texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.GetTemporary.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.ReleaseTemporary(${1:temp});",
    "description": "Release a temporary texture allocated with GetTemporary.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.ReleaseTemporary.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.SupportsStencil(${1:rt});",
    "description": "Does a RenderTexture have stencil buffer?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.SupportsStencil.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "CustomRenderTexture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "Display.RelativeMouseAt(${1:inputMouseCoordinates});",
    "description": "Query relative mouse coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Display.RelativeMouseAt.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DistanceJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DrivenRectTransformTracker.StartRecordingUndo();",
    "description": "Resume recording undo of driven RectTransforms.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DrivenRectTransformTracker.StartRecordingUndo.html",
    "type": "method"
  },
  {
    "snippet": "DrivenRectTransformTracker.StopRecordingUndo();",
    "description": "Stop recording undo actions from driven RectTransforms.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DrivenRectTransformTracker.StopRecordingUndo.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.SetEmissive(${1:renderer}, ${2:color});",
    "description": "Allows to set an emissive color for a given renderer quickly, without the need to render the emissive input for the entire system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.SetEmissive.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.SetEnvironmentData(${1:input});",
    "description": "Allows overriding the distant environment lighting for Realtime GI, without changing the Skybox Material.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.SetEnvironmentData.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.UpdateEnvironment();",
    "description": "Schedules an update of the environment texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.UpdateEnvironment.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.UpdateMaterials(${1:renderer});",
    "description": "Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.UpdateMaterials.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.UpdateMaterials();",
    "description": "Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.UpdateMaterials.html",
    "type": "method"
  },
  {
    "snippet": "DynamicGI.UpdateMaterials();",
    "description": "Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/DynamicGI.UpdateMaterials.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EdgeCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Effector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Event.GetEventCount();",
    "description": "Returns the current number of events that are stored in the event queue.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Event.GetEventCount.html",
    "type": "method"
  },
  {
    "snippet": "Event.KeyboardEvent(${1:key});",
    "description": "Create a keyboard event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Event.KeyboardEvent.html",
    "type": "method"
  },
  {
    "snippet": "Event.PopEvent(${1:outEvent});",
    "description": "Get the next queued [Event] from the event system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Event.PopEvent.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FixedJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Flare.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Flare.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Flare.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Flare.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FlareLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Font.CreateDynamicFontFromOSFont(${1:fontname}, ${2:size});",
    "description": "Creates a Font object which lets you render a font installed on the user machine.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Font.CreateDynamicFontFromOSFont.html",
    "type": "method"
  },
  {
    "snippet": "Font.CreateDynamicFontFromOSFont(${1:fontnames}, ${2:size});",
    "description": "Creates a Font object which lets you render a font installed on the user machine.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Font.CreateDynamicFontFromOSFont.html",
    "type": "method"
  },
  {
    "snippet": "Font.GetMaxVertsForString(${1:str});",
    "description": "Returns the maximum number of verts that the text generator may return for a given string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Font.GetMaxVertsForString.html",
    "type": "method"
  },
  {
    "snippet": "Font.GetOSInstalledFontNames();",
    "description": "Get names of fonts installed on the machine.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Font.GetOSInstalledFontNames.html",
    "type": "method"
  },
  {
    "snippet": "FrameTimingManager.CaptureFrameTimings();",
    "description": "This function triggers the FrameTimingManager to capture a snapshot of FrameTiming's data, that can then be accessed by the user.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FrameTimingManager.CaptureFrameTimings.html",
    "type": "method"
  },
  {
    "snippet": "FrameTimingManager.GetCpuTimerFrequency();",
    "description": "This returns the frequency of CPU timer on the current platform, used to interpret timing results. If the platform does not support returning this value it will return 0.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FrameTimingManager.GetCpuTimerFrequency.html",
    "type": "method"
  },
  {
    "snippet": "FrameTimingManager.GetGpuTimerFrequency();",
    "description": "This returns the frequency of GPU timer on the current platform, used to interpret timing results. If the platform does not support returning this value it will return 0.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FrameTimingManager.GetGpuTimerFrequency.html",
    "type": "method"
  },
  {
    "snippet": "FrameTimingManager.GetLatestTimings(${1:numFrames}, ${2:timings});",
    "description": "Allows the user to access the currently captured FrameTimings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FrameTimingManager.GetLatestTimings.html",
    "type": "method"
  },
  {
    "snippet": "FrameTimingManager.GetVSyncsPerSecond();",
    "description": "This returns the number of vsyncs per second on the current platform, used to interpret timing results. If the platform does not support returning this value it will return 0.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FrameTimingManager.GetVSyncsPerSecond.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "FrictionJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObject.CreatePrimitive(${1:type});",
    "description": "Creates a game object with a primitive mesh renderer and appropriate collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObject.CreatePrimitive.html",
    "type": "method"
  },
  {
    "snippet": "GameObject.Find(${1:name});",
    "description": "Finds a GameObject by name and returns it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObject.Find.html",
    "type": "method"
  },
  {
    "snippet": "GameObject.FindGameObjectsWithTag(${1:tag});",
    "description": "Returns a list of active GameObjects tagged tag. Returns empty array if no GameObject was found.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObject.FindGameObjectsWithTag.html",
    "type": "method"
  },
  {
    "snippet": "GameObject.FindWithTag(${1:tag});",
    "description": "Returns one active GameObject tagged tag. Returns null if no GameObject was found.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObject.FindWithTag.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.CalculateBounds(${1:positions}, ${2:transform});",
    "description": "Calculates a bounding box given an array of positions and a transformation matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.CalculateBounds.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.CalculateFrustumPlanes(${1:camera});",
    "description": "Calculates frustum planes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.CalculateFrustumPlanes.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.CalculateFrustumPlanes(${1:camera}, ${2:planes});",
    "description": "Calculates frustum planes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.CalculateFrustumPlanes.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.CalculateFrustumPlanes(${1:worldToProjectionMatrix});",
    "description": "Calculates frustum planes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.CalculateFrustumPlanes.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.CalculateFrustumPlanes(${1:worldToProjectionMatrix}, ${2:planes});",
    "description": "Calculates frustum planes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.CalculateFrustumPlanes.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.TestPlanesAABB(${1:planes}, ${2:bounds});",
    "description": "Returns true if bounds are inside the plane array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.TestPlanesAABB.html",
    "type": "method"
  },
  {
    "snippet": "GeometryUtility.TryCreatePlaneFromPolygon(${1:vertices}, ${2:plane});",
    "description": "Creates a plane from a given list of vertices. Works for concave polygons and polygons that have multiple aligned vertices.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GeometryUtility.TryCreatePlaneFromPolygon.html",
    "type": "method"
  },
  {
    "snippet": "GL.Begin(${1:mode});",
    "description": "Begin drawing 3D primitives.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Begin.html",
    "type": "method"
  },
  {
    "snippet": "GL.Clear(${1:clearDepth}, ${2:clearColor}, ${3:backgroundColor}, ${4:depth});",
    "description": "Clear the current render buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Clear.html",
    "type": "method"
  },
  {
    "snippet": "GL.ClearWithSkybox(${1:clearDepth}, ${2:camera});",
    "description": "Clear the current render buffer with camera's skybox.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.ClearWithSkybox.html",
    "type": "method"
  },
  {
    "snippet": "GL.Color(${1:c});",
    "description": "Sets current vertex color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Color.html",
    "type": "method"
  },
  {
    "snippet": "GL.End();",
    "description": "End drawing 3D primitives.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.End.html",
    "type": "method"
  },
  {
    "snippet": "GL.Flush();",
    "description": "Sends queued-up commands in the driver's command buffer to the GPU.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Flush.html",
    "type": "method"
  },
  {
    "snippet": "GL.GetGPUProjectionMatrix(${1:proj}, ${2:renderIntoTexture});",
    "description": "Compute GPU projection matrix from camera's projection matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.GetGPUProjectionMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.InvalidateState();",
    "description": "Invalidate the internally cached render state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.InvalidateState.html",
    "type": "method"
  },
  {
    "snippet": "GL.IssuePluginEvent(${1:eventID});",
    "description": "Send a user-defined event to a native code plugin.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.IssuePluginEvent.html",
    "type": "method"
  },
  {
    "snippet": "GL.IssuePluginEvent(${1:callback}, ${2:eventID});",
    "description": "Send a user-defined event to a native code plugin.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.IssuePluginEvent.html",
    "type": "method"
  },
  {
    "snippet": "GL.LoadIdentity();",
    "description": "Load the identity matrix to the current modelview matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.LoadIdentity.html",
    "type": "method"
  },
  {
    "snippet": "GL.LoadOrtho();",
    "description": "Helper function to set up an ortho perspective transform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.LoadOrtho.html",
    "type": "method"
  },
  {
    "snippet": "GL.LoadPixelMatrix();",
    "description": "Setup a matrix for pixel-correct rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.LoadPixelMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.LoadPixelMatrix(${1:left}, ${2:right}, ${3:bottom}, ${4:top});",
    "description": "Setup a matrix for pixel-correct rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.LoadPixelMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.LoadProjectionMatrix(${1:mat});",
    "description": "Load an arbitrary matrix to the current projection matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.LoadProjectionMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.MultiTexCoord(${1:unit}, ${2:v});",
    "description": "Sets current texture coordinate (v.x,v.y,v.z) to the actual texture unit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.MultiTexCoord.html",
    "type": "method"
  },
  {
    "snippet": "GL.MultiTexCoord2(${1:unit}, ${2:x}, ${3:y});",
    "description": "Sets current texture coordinate (x,y) for the actual texture unit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.MultiTexCoord2.html",
    "type": "method"
  },
  {
    "snippet": "GL.MultiTexCoord3(${1:unit}, ${2:x}, ${3:y}, ${4:z});",
    "description": "Sets current texture coordinate (x,y,z) to the actual texture unit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.MultiTexCoord3.html",
    "type": "method"
  },
  {
    "snippet": "GL.MultMatrix(${1:m});",
    "description": "Sets the current modelview matrix to the one specified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.MultMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.PopMatrix();",
    "description": "Restores both projection and modelview matrices off the top of the matrix stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.PopMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.PushMatrix();",
    "description": "Saves both projection and modelview matrices to the matrix stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.PushMatrix.html",
    "type": "method"
  },
  {
    "snippet": "GL.RenderTargetBarrier();",
    "description": "Resolves the render target for subsequent operations sampling from it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.RenderTargetBarrier.html",
    "type": "method"
  },
  {
    "snippet": "GL.TexCoord(${1:v});",
    "description": "Sets current texture coordinate (v.x,v.y,v.z) for all texture units.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.TexCoord.html",
    "type": "method"
  },
  {
    "snippet": "GL.TexCoord2(${1:x}, ${2:y});",
    "description": "Sets current texture coordinate (x,y) for all texture units.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.TexCoord2.html",
    "type": "method"
  },
  {
    "snippet": "GL.TexCoord3(${1:x}, ${2:y}, ${3:z});",
    "description": "Sets current texture coordinate (x,y,z) for all texture units.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.TexCoord3.html",
    "type": "method"
  },
  {
    "snippet": "GL.Vertex(${1:v});",
    "description": "Submit a vertex.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Vertex.html",
    "type": "method"
  },
  {
    "snippet": "GL.Vertex3(${1:x}, ${2:y}, ${3:z});",
    "description": "Submit a vertex.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Vertex3.html",
    "type": "method"
  },
  {
    "snippet": "GL.Viewport(${1:pixelRect});",
    "description": "Set the rendering viewport.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GL.Viewport.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.Blit(${1:source}, ${2:dest});",
    "description": "Copies source texture into destination render texture with a shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.Blit.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.Blit(${1:source}, ${2:dest}, ${3:mat}, ${4:pass});",
    "description": "Copies source texture into destination render texture with a shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.Blit.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.Blit(${1:source}, ${2:mat}, ${3:pass});",
    "description": "Copies source texture into destination render texture with a shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.Blit.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.Blit(${1:source}, ${2:dest}, ${3:scale}, ${4:offset});",
    "description": "Copies source texture into destination render texture with a shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.Blit.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.BlitMultiTap(${1:source}, ${2:dest}, ${3:mat}, ${4:offsets});",
    "description": "Copies source texture into destination, for multi-tap shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.BlitMultiTap.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.ClearRandomWriteTargets();",
    "description": "Clear random write targets for Shader Model 4.5 level pixel shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.ClearRandomWriteTargets.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.ConvertTexture(${1:src}, ${2:dst});",
    "description": "This function provides an efficient way to convert between textures of different formats and dimensions.\nThe destination texture format should be uncompressed and correspond to a supported RenderTextureFormat.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.ConvertTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.ConvertTexture(${1:src}, ${2:srcElement}, ${3:dst}, ${4:dstElement});",
    "description": "This function provides an efficient way to convert between textures of different formats and dimensions.\nThe destination texture format should be uncompressed and correspond to a supported RenderTextureFormat.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.ConvertTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.CopyTexture(${1:src}, ${2:dst});",
    "description": "Copy texture contents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.CopyTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.CopyTexture(${1:src}, ${2:srcElement}, ${3:srcMip}, ${4:dst}, ${5:dstElement}, ${6:dstMip});",
    "description": "Copy texture contents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.CopyTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.CopyTexture(${1:src}, ${2:srcElement}, ${3:srcMip}, ${4:srcX}, ${5:srcY}, ${6:srcWidth}, ${7:srcHeight}, ${8:dst}, ${9:dstElement}, ${10:dstMip}, ${11:dstX}, ${12:dstY});",
    "description": "Copy texture contents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.CopyTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.CreateGPUFence(${1:stage});",
    "description": "Creates a GPUFence which will be passed after the last Blit, Clear, Draw, Dispatch or Texture Copy command prior to this call has been completed on the GPU.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.CreateGPUFence.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMesh(${1:mesh}, ${2:position}, ${3:rotation}, ${4:material}, ${5:layer}, ${6:camera}, ${7:submeshIndex}, ${8:properties}, ${9:castShadows}, ${10:receiveShadows}, ${11:useLightProbes});",
    "description": "Draw a mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMesh.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMesh(${1:mesh}, ${2:position}, ${3:rotation}, ${4:material}, ${5:layer}, ${6:camera}, ${7:submeshIndex}, ${8:properties}, ${9:castShadows}, ${10:receiveShadows}, ${11:probeAnchor}, ${12:useLightProbes});",
    "description": "Draw a mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMesh.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMesh(${1:mesh}, ${2:matrix}, ${3:material}, ${4:layer}, ${5:camera}, ${6:submeshIndex}, ${7:properties}, ${8:castShadows}, ${9:receiveShadows}, ${10:useLightProbes});",
    "description": "Draw a mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMesh.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMesh(${1:mesh}, ${2:matrix}, ${3:material}, ${4:layer}, ${5:camera}, ${6:submeshIndex}, ${7:properties}, ${8:castShadows}, ${9:receiveShadows}, ${10:probeAnchor}, ${11:useLightProbes});",
    "description": "Draw a mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMesh.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshInstanced(${1:mesh}, ${2:submeshIndex}, ${3:material}, ${4:matrices}, ${5:count}, ${6:properties}, ${7:castShadows}, ${8:receiveShadows}, ${9:layer}, ${10:camera}, ${11:lightProbeUsage}, ${12:lightProbeProxyVolume});",
    "description": "Draw the same mesh multiple times using GPU instancing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshInstanced.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshInstancedIndirect(${1:mesh}, ${2:submeshIndex}, ${3:material}, ${4:bounds}, ${5:bufferWithArgs}, ${6:argsOffset}, ${7:properties}, ${8:castShadows}, ${9:receiveShadows}, ${10:layer}, ${11:camera}, ${12:lightProbeUsage}, ${13:lightProbeProxyVolume});",
    "description": "Draw the same mesh multiple times using GPU instancing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshInstancedIndirect.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshNow(${1:mesh}, ${2:position}, ${3:rotation});",
    "description": "Draw a mesh immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshNow.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshNow(${1:mesh}, ${2:position}, ${3:rotation}, ${4:materialIndex});",
    "description": "Draw a mesh immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshNow.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshNow(${1:mesh}, ${2:matrix});",
    "description": "Draw a mesh immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshNow.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawMeshNow(${1:mesh}, ${2:matrix}, ${3:materialIndex});",
    "description": "Draw a mesh immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshNow.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawProcedural(${1:topology}, ${2:vertexCount}, ${3:instanceCount});",
    "description": "Draws a fully procedural geometry on the GPU.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawProcedural.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawProceduralIndirect(${1:topology}, ${2:bufferWithArgs}, ${3:argsOffset});",
    "description": "Draws a fully procedural geometry on the GPU.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawProceduralIndirect.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawTexture(${1:screenRect}, ${2:texture}, ${3:mat}, ${4:pass});",
    "description": "Draw a texture in screen coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawTexture(${1:screenRect}, ${2:texture}, ${3:leftBorder}, ${4:rightBorder}, ${5:topBorder}, ${6:bottomBorder}, ${7:mat}, ${8:pass});",
    "description": "Draw a texture in screen coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawTexture(${1:screenRect}, ${2:texture}, ${3:sourceRect}, ${4:leftBorder}, ${5:rightBorder}, ${6:topBorder}, ${7:bottomBorder}, ${8:mat}, ${9:pass});",
    "description": "Draw a texture in screen coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.DrawTexture(${1:screenRect}, ${2:texture}, ${3:sourceRect}, ${4:leftBorder}, ${5:rightBorder}, ${6:topBorder}, ${7:bottomBorder}, ${8:color}, ${9:mat}, ${10:pass});",
    "description": "Draw a texture in screen coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.ExecuteCommandBuffer(${1:buffer});",
    "description": "Execute a command buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.ExecuteCommandBuffer.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.ExecuteCommandBufferAsync(${1:buffer}, ${2:queueType});",
    "description": "Executes a command buffer on an async compute queue with the queue selected based on the ComputeQueueType parameter passed.It is required that all of the commands within the command buffer be of a type suitable for execution on the async compute queues. If the buffer contains any commands that are not appropriate then an error will be logged and displayed in the editor window.  Specifically the following commands are permitted in a CommandBuffer intended for async execution:CommandBuffer.BeginSampleCommandBuffer.CopyCounterValueCommandBuffer.CopyTextureCommandBuffer.CreateGPUFenceCommandBuffer.DispatchComputeCommandBuffer.EndSampleCommandBuffer.IssuePluginEventCommandBuffer.SetComputeBufferParamCommandBuffer.SetComputeFloatParamCommandBuffer.SetComputeFloatParamsCommandBuffer.SetComputeTextureParamCommandBuffer.SetComputeVectorParamCommandBuffer.WaitOnGPUFenceAll of the commands within the buffer are guaranteed to be executed on the same queue. If the target platform does not support async compute queues then the work is dispatched on the graphics queue.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.ExecuteCommandBufferAsync.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRandomWriteTarget(${1:index}, ${2:uav}, ${3:preserveCounterValue});",
    "description": "Set random write target for Shader Model 4.5 level pixel shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRandomWriteTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRandomWriteTarget(${1:index}, ${2:uav});",
    "description": "Set random write target for Shader Model 4.5 level pixel shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRandomWriteTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRenderTarget(${1:rt}, ${2:mipLevel}, ${3:face}, ${4:depthSlice});",
    "description": "Sets current render target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRenderTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRenderTarget(${1:colorBuffers}, ${2:depthBuffer});",
    "description": "Sets current render target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRenderTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRenderTarget(${1:colorBuffer}, ${2:depthBuffer}, ${3:mipLevel}, ${4:face}, ${5:depthSlice});",
    "description": "Sets current render target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRenderTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.SetRenderTarget(${1:setup});",
    "description": "Sets current render target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.SetRenderTarget.html",
    "type": "method"
  },
  {
    "snippet": "Graphics.WaitOnGPUFence(${1:fence}, ${2:stage});",
    "description": "Instructs the GPU's processing of the graphics queue to wait until the given GPUFence is passed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Graphics.WaitOnGPUFence.html",
    "type": "method"
  },
  {
    "snippet": "Grid.InverseSwizzle(${1:swizzle}, ${2:position});",
    "description": "Does the inverse swizzle of the given position for given swizzle order.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Grid.InverseSwizzle.html",
    "type": "method"
  },
  {
    "snippet": "Grid.Swizzle(${1:swizzle}, ${2:position});",
    "description": "Swizzles the given position with the given swizzle order.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Grid.Swizzle.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushBase.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayout.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:text});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:image});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:content});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:style});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:text}, ${3:style});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:image}, ${3:style});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginGroup(${1:position}, ${2:content}, ${3:style});",
    "description": "Begin a group. Must be matched with a call to EndGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginScrollView(${1:position}, ${2:scrollPosition}, ${3:viewRect});",
    "description": "Begin a scrolling view inside your GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginScrollView(${1:position}, ${2:scrollPosition}, ${3:viewRect}, ${4:alwaysShowHorizontal}, ${5:alwaysShowVertical});",
    "description": "Begin a scrolling view inside your GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginScrollView(${1:position}, ${2:scrollPosition}, ${3:viewRect}, ${4:horizontalScrollbar}, ${5:verticalScrollbar});",
    "description": "Begin a scrolling view inside your GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BeginScrollView(${1:position}, ${2:scrollPosition}, ${3:viewRect}, ${4:alwaysShowHorizontal}, ${5:alwaysShowVertical}, ${6:horizontalScrollbar}, ${7:verticalScrollbar});",
    "description": "Begin a scrolling view inside your GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:text});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:image});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:content});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:text}, ${3:style});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:image}, ${3:style});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Box(${1:position}, ${2:content}, ${3:style});",
    "description": "Create a Box on the GUI Layer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BringWindowToBack(${1:windowID});",
    "description": "Bring a specific window to back of the floating windows.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BringWindowToBack.html",
    "type": "method"
  },
  {
    "snippet": "GUI.BringWindowToFront(${1:windowID});",
    "description": "Bring a specific window to front of the floating windows.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.BringWindowToFront.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:text});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:image});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:content});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:image}, ${3:style});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Button(${1:position}, ${2:content}, ${3:style});",
    "description": "Make a single press button. The user clicks them and something happens immediately.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DragWindow(${1:position});",
    "description": "Make a window draggable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DragWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DragWindow();",
    "description": "Make a window draggable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DragWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image}, ${3:scaleMode});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image}, ${3:scaleMode}, ${4:alphaBlend});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image}, ${3:scaleMode}, ${4:alphaBlend}, ${5:imageAspect});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image}, ${3:scaleMode}, ${4:alphaBlend}, ${5:imageAspect}, ${6:color}, ${7:borderWidth}, ${8:borderRadius});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTexture(${1:position}, ${2:image}, ${3:scaleMode}, ${4:alphaBlend}, ${5:imageAspect}, ${6:color}, ${7:borderWidths}, ${8:borderRadius});",
    "description": "Draw a texture within a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTexture.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTextureWithTexCoords(${1:position}, ${2:image}, ${3:texCoords});",
    "description": "Draw a texture within a rectangle with the given texture coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTextureWithTexCoords.html",
    "type": "method"
  },
  {
    "snippet": "GUI.DrawTextureWithTexCoords(${1:position}, ${2:image}, ${3:texCoords}, ${4:alphaBlend});",
    "description": "Draw a texture within a rectangle with the given texture coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.DrawTextureWithTexCoords.html",
    "type": "method"
  },
  {
    "snippet": "GUI.EndGroup();",
    "description": "End a group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.EndGroup.html",
    "type": "method"
  },
  {
    "snippet": "GUI.EndScrollView();",
    "description": "Ends a scrollview started with a call to BeginScrollView.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.EndScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.EndScrollView(${1:handleScrollWheel});",
    "description": "Ends a scrollview started with a call to BeginScrollView.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.EndScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUI.FocusControl(${1:name});",
    "description": "Move keyboard focus to a named control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.FocusControl.html",
    "type": "method"
  },
  {
    "snippet": "GUI.FocusWindow(${1:windowID});",
    "description": "Make a window become the active window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.FocusWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.GetNameOfFocusedControl();",
    "description": "Get the name of named control that has focus.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.GetNameOfFocusedControl.html",
    "type": "method"
  },
  {
    "snippet": "GUI.HorizontalScrollbar(${1:position}, ${2:value}, ${3:size}, ${4:leftValue}, ${5:rightValue});",
    "description": "Make a horizontal scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.HorizontalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.HorizontalScrollbar(${1:position}, ${2:value}, ${3:size}, ${4:leftValue}, ${5:rightValue}, ${6:style});",
    "description": "Make a horizontal scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.HorizontalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.HorizontalSlider(${1:position}, ${2:value}, ${3:leftValue}, ${4:rightValue});",
    "description": "A horizontal slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.HorizontalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUI.HorizontalSlider(${1:position}, ${2:value}, ${3:leftValue}, ${4:rightValue}, ${5:slider}, ${6:thumb});",
    "description": "A horizontal slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.HorizontalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:text});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:image});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:content});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:image}, ${3:style});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Label(${1:position}, ${2:content}, ${3:style});",
    "description": "Make a text or texture label on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:text});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:image});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:content});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:text}, ${5:style});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:image}, ${5:style});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow(${1:id}, ${2:clientRect}, ${3:func}, ${4:content}, ${5:style});",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow();",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ModalWindow();",
    "description": "Show a Modal Window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ModalWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.PasswordField(${1:position}, ${2:password}, ${3:maskChar});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.PasswordField(${1:position}, ${2:password}, ${3:maskChar}, ${4:maxLength});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.PasswordField(${1:position}, ${2:password}, ${3:maskChar}, ${4:style});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.PasswordField(${1:position}, ${2:password}, ${3:maskChar}, ${4:maxLength}, ${5:style});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:text});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:image});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:content});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:image}, ${3:style});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.RepeatButton(${1:position}, ${2:content}, ${3:style});",
    "description": "Make a button that is active as long as the user holds it down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUI.ScrollTo(${1:position});",
    "description": "Scrolls all enclosing scrollviews so they try to make position visible.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.ScrollTo.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:texts}, ${4:xCount});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:images}, ${4:xCount});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:content}, ${4:xCount});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:texts}, ${4:xCount}, ${5:style});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:images}, ${4:xCount}, ${5:style});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SelectionGrid(${1:position}, ${2:selected}, ${3:contents}, ${4:xCount}, ${5:style});",
    "description": "Make a grid of buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUI.SetNextControlName(${1:name});",
    "description": "Set the name of the next control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.SetNextControlName.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextArea(${1:position}, ${2:text});",
    "description": "Make a Multi-line text area where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextArea(${1:position}, ${2:text}, ${3:maxLength});",
    "description": "Make a Multi-line text area where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextArea(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a Multi-line text area where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextArea(${1:position}, ${2:text}, ${3:maxLength}, ${4:style});",
    "description": "Make a Multi-line text area where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextField(${1:position}, ${2:text});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextField(${1:position}, ${2:text}, ${3:maxLength});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextField(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.TextField(${1:position}, ${2:text}, ${3:maxLength}, ${4:style});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:text});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:image});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:content});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:text}, ${4:style});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:image}, ${4:style});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toggle(${1:position}, ${2:value}, ${3:content}, ${4:style});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:texts});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:images});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:contents});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:texts}, ${4:style});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:images}, ${4:style});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:contents}, ${4:style});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Toolbar(${1:position}, ${2:selected}, ${3:contents}, ${4:style}, ${5:buttonSize});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.UnfocusWindow();",
    "description": "Remove focus from all windows.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.UnfocusWindow.html",
    "type": "method"
  },
  {
    "snippet": "GUI.VerticalScrollbar(${1:position}, ${2:value}, ${3:size}, ${4:topValue}, ${5:bottomValue});",
    "description": "Make a vertical scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.VerticalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.VerticalScrollbar(${1:position}, ${2:value}, ${3:size}, ${4:topValue}, ${5:bottomValue}, ${6:style});",
    "description": "Make a vertical scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.VerticalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUI.VerticalSlider(${1:position}, ${2:value}, ${3:topValue}, ${4:bottomValue});",
    "description": "A vertical slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.VerticalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUI.VerticalSlider(${1:position}, ${2:value}, ${3:topValue}, ${4:bottomValue}, ${5:slider}, ${6:thumb});",
    "description": "A vertical slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.VerticalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:text});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:image});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:content});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:text}, ${5:style});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:image}, ${5:style});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUI.Window(${1:id}, ${2:clientRect}, ${3:func}, ${4:title}, ${5:style});",
    "description": "Make a popup window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUI.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIElement.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:text});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:image});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:content});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:style});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:text}, ${3:style});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:image}, ${3:style});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginArea(${1:screenRect}, ${2:content}, ${3:style});",
    "description": "Begin a GUILayout block of GUI controls in a fixed screen area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginHorizontal(${1:options});",
    "description": "Begin a Horizontal control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginHorizontal(${1:style}, ${2:options});",
    "description": "Begin a Horizontal control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginHorizontal(${1:text}, ${2:style}, ${3:options});",
    "description": "Begin a Horizontal control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginHorizontal(${1:image}, ${2:style}, ${3:options});",
    "description": "Begin a Horizontal control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginHorizontal(${1:content}, ${2:style}, ${3:options});",
    "description": "Begin a Horizontal control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:alwaysShowHorizontal}, ${3:alwaysShowVertical}, ${4:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:horizontalScrollbar}, ${3:verticalScrollbar}, ${4:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:style});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:style}, ${3:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:alwaysShowHorizontal}, ${3:alwaysShowVertical}, ${4:horizontalScrollbar}, ${5:verticalScrollbar}, ${6:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginScrollView(${1:scrollPosition}, ${2:alwaysShowHorizontal}, ${3:alwaysShowVertical}, ${4:horizontalScrollbar}, ${5:verticalScrollbar}, ${6:background}, ${7:options});",
    "description": "Begin an automatically laid out scrollview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginVertical(${1:options});",
    "description": "Begin a vertical control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginVertical(${1:style}, ${2:options});",
    "description": "Begin a vertical control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginVertical(${1:text}, ${2:style}, ${3:options});",
    "description": "Begin a vertical control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginVertical(${1:image}, ${2:style}, ${3:options});",
    "description": "Begin a vertical control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.BeginVertical(${1:content}, ${2:style}, ${3:options});",
    "description": "Begin a vertical control group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.BeginVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:image}, ${2:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:text}, ${2:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:content}, ${2:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:image}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:text}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Box(${1:content}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Box.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:image}, ${2:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:text}, ${2:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:content}, ${2:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:image}, ${2:style}, ${3:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:text}, ${2:style}, ${3:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Button(${1:content}, ${2:style}, ${3:options});",
    "description": "Make a single press button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Button.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.EndArea();",
    "description": "Close a GUILayout block started with BeginArea.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.EndArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.EndHorizontal();",
    "description": "Close a group started with BeginHorizontal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.EndHorizontal.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.EndScrollView();",
    "description": "End a scroll view begun with a call to BeginScrollView.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.EndScrollView.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.EndVertical();",
    "description": "Close a group started with BeginVertical.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.EndVertical.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.ExpandHeight(${1:expand});",
    "description": "Option passed to a control to allow or disallow vertical expansion.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.ExpandHeight.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.ExpandWidth(${1:expand});",
    "description": "Option passed to a control to allow or disallow horizontal expansion.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.ExpandWidth.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.FlexibleSpace();",
    "description": "Insert a flexible space element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.FlexibleSpace.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Height(${1:height});",
    "description": "Option passed to a control to give it an absolute height.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Height.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.HorizontalScrollbar(${1:value}, ${2:size}, ${3:leftValue}, ${4:rightValue}, ${5:options});",
    "description": "Make a horizontal scrollbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.HorizontalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.HorizontalScrollbar(${1:value}, ${2:size}, ${3:leftValue}, ${4:rightValue}, ${5:style}, ${6:options});",
    "description": "Make a horizontal scrollbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.HorizontalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.HorizontalSlider(${1:value}, ${2:leftValue}, ${3:rightValue}, ${4:options});",
    "description": "A horizontal slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.HorizontalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.HorizontalSlider(${1:value}, ${2:leftValue}, ${3:rightValue}, ${4:slider}, ${5:thumb}, ${6:options});",
    "description": "A horizontal slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.HorizontalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:image}, ${2:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:text}, ${2:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:content}, ${2:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:image}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:text}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Label(${1:content}, ${2:style}, ${3:options});",
    "description": "Make an auto-layout label.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Label.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.MaxHeight(${1:maxHeight});",
    "description": "Option passed to a control to specify a maximum height.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.MaxHeight.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.MaxWidth(${1:maxWidth});",
    "description": "Option passed to a control to specify a maximum width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.MaxWidth.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.MinHeight(${1:minHeight});",
    "description": "Option passed to a control to specify a minimum height.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.MinHeight.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.MinWidth(${1:minWidth});",
    "description": "Option passed to a control to specify a minimum width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.MinWidth.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.PasswordField(${1:password}, ${2:maskChar}, ${3:options});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.PasswordField(${1:password}, ${2:maskChar}, ${3:maxLength}, ${4:options});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.PasswordField(${1:password}, ${2:maskChar}, ${3:style}, ${4:options});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.PasswordField(${1:password}, ${2:maskChar}, ${3:maxLength}, ${4:style}, ${5:options});",
    "description": "Make a text field where the user can enter a password.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.PasswordField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:image}, ${2:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:text}, ${2:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:content}, ${2:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:image}, ${2:style}, ${3:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:text}, ${2:style}, ${3:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.RepeatButton(${1:content}, ${2:style}, ${3:options});",
    "description": "Make a repeating button. The button returns true as long as the user holds down the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.RepeatButton.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:texts}, ${3:xCount}, ${4:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:images}, ${3:xCount}, ${4:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:content}, ${3:xCount}, ${4:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:texts}, ${3:xCount}, ${4:style}, ${5:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:images}, ${3:xCount}, ${4:style}, ${5:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.SelectionGrid(${1:selected}, ${2:contents}, ${3:xCount}, ${4:style}, ${5:options});",
    "description": "Make a Selection Grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.SelectionGrid.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Space(${1:pixels});",
    "description": "Insert a space in the current layout group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Space.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextArea(${1:text}, ${2:options});",
    "description": "Make a multi-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextArea(${1:text}, ${2:maxLength}, ${3:options});",
    "description": "Make a multi-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextArea(${1:text}, ${2:style}, ${3:options});",
    "description": "Make a multi-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextArea(${1:text}, ${2:maxLength}, ${3:style}, ${4:options});",
    "description": "Make a multi-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextArea.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextField(${1:text}, ${2:options});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextField(${1:text}, ${2:maxLength}, ${3:options});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextField(${1:text}, ${2:style}, ${3:options});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.TextField(${1:text}, ${2:maxLength}, ${3:style}, ${4:options});",
    "description": "Make a single-line text field where the user can edit a string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.TextField.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:image}, ${3:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:text}, ${3:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:content}, ${3:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:image}, ${3:style}, ${4:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:text}, ${3:style}, ${4:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toggle(${1:value}, ${2:content}, ${3:style}, ${4:options});",
    "description": "Make an on/off toggle button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toggle.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:texts}, ${3:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:images}, ${3:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:contents}, ${3:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:texts}, ${3:style}, ${4:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:images}, ${3:style}, ${4:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:contents}, ${3:style}, ${4:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:texts}, ${3:style}, ${4:buttonSize}, ${5:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:images}, ${3:style}, ${4:buttonSize}, ${5:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Toolbar(${1:selected}, ${2:contents}, ${3:style}, ${4:buttonSize}, ${5:options});",
    "description": "Make a toolbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Toolbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.VerticalScrollbar(${1:value}, ${2:size}, ${3:topValue}, ${4:bottomValue}, ${5:options});",
    "description": "Make a vertical scrollbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.VerticalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.VerticalScrollbar(${1:value}, ${2:size}, ${3:topValue}, ${4:bottomValue}, ${5:style}, ${6:options});",
    "description": "Make a vertical scrollbar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.VerticalScrollbar.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.VerticalSlider(${1:value}, ${2:leftValue}, ${3:rightValue}, ${4:options});",
    "description": "A vertical slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.VerticalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.VerticalSlider(${1:value}, ${2:leftValue}, ${3:rightValue}, ${4:slider}, ${5:thumb}, ${6:options});",
    "description": "A vertical slider the user can drag to change a value between a min and a max.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.VerticalSlider.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Width(${1:width});",
    "description": "Option passed to a control to give it an absolute width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Width.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:text}, ${5:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:image}, ${5:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:content}, ${5:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:text}, ${5:style}, ${6:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:image}, ${5:style}, ${6:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayout.Window(${1:id}, ${2:screenRect}, ${3:func}, ${4:content}, ${5:style}, ${6:options});",
    "description": "Make a popup window that layouts its contents automatically.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayout.Window.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetAspectRect(${1:aspect});",
    "description": "Reserve layout space for a rectangle with a specific aspect ratio.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetAspectRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetAspectRect(${1:aspect}, ${2:style});",
    "description": "Reserve layout space for a rectangle with a specific aspect ratio.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetAspectRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetAspectRect(${1:aspect}, ${2:options});",
    "description": "Reserve layout space for a rectangle with a specific aspect ratio.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetAspectRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetAspectRect(${1:aspect}, ${2:style}, ${3:options});",
    "description": "Reserve layout space for a rectangle with a specific aspect ratio.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetAspectRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetLastRect();",
    "description": "Get the rectangle last used by GUILayout for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetLastRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:content}, ${2:style});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:content}, ${2:style}, ${3:options});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:width}, ${2:height});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:width}, ${2:height}, ${3:style});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:width}, ${2:height}, ${3:options});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:width}, ${2:height}, ${3:style}, ${4:options});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:minWidth}, ${2:maxWidth}, ${3:minHeight}, ${4:maxHeight});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:minWidth}, ${2:maxWidth}, ${3:minHeight}, ${4:maxHeight}, ${5:style});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:minWidth}, ${2:maxWidth}, ${3:minHeight}, ${4:maxHeight}, ${5:options});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUILayoutUtility.GetRect(${1:minWidth}, ${2:maxWidth}, ${3:minHeight}, ${4:maxHeight}, ${5:style}, ${6:options});",
    "description": "Reserve layout space for a rectangle for displaying some contents with a specific style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUILayoutUtility.GetRect.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GUISkin.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIText.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUITexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.AlignRectToDevice(${1:rect});",
    "description": "Align a local space rectangle to the pixel grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.AlignRectToDevice.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.AlignRectToDevice(${1:rect}, ${2:widthInPixels}, ${3:heightInPixels});",
    "description": "Align a local space rectangle to the pixel grid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.AlignRectToDevice.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.ExitGUI();",
    "description": "Puts the GUI in a state that will prevent all subsequent immediate mode GUI functions from evaluating for the remainder of the GUI loop by throwing an ExitGUIException.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.ExitGUI.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:focus});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:focus}, ${2:position});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:hint}, ${2:focus});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:hint}, ${2:focusType}, ${3:rect});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:contents}, ${2:focus});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetControlID(${1:contents}, ${2:focus}, ${3:position});",
    "description": "Get a unique ID for a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetControlID.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GetStateObject(${1:t}, ${2:controlID});",
    "description": "Get a state object from a controlID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GetStateObject.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.GUIToScreenPoint(${1:guiPoint});",
    "description": "Convert a point from GUI position to screen space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.GUIToScreenPoint.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.QueryStateObject(${1:t}, ${2:controlID});",
    "description": "Get an existing state object from a controlID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.QueryStateObject.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.RotateAroundPivot(${1:angle}, ${2:pivotPoint});",
    "description": "Helper function to rotate the GUI around a point.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.RotateAroundPivot.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.ScaleAroundPivot(${1:scale}, ${2:pivotPoint});",
    "description": "Helper function to scale the GUI around a point.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.ScaleAroundPivot.html",
    "type": "method"
  },
  {
    "snippet": "GUIUtility.ScreenToGUIPoint(${1:screenPoint});",
    "description": "Convert a point from screen space to GUI position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GUIUtility.ScreenToGUIPoint.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.GetActivityIndicatorStyle();",
    "description": "Gets the current activity indicator style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.GetActivityIndicatorStyle.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.PlayFullScreenMovie(${1:path}, ${2:bgColor}, ${3:controlMode}, ${4:scalingMode});",
    "description": "Plays a full-screen movie.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.PlayFullScreenMovie.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.SetActivityIndicatorStyle(${1:style});",
    "description": "Sets the desired activity indicator style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.SetActivityIndicatorStyle.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.SetActivityIndicatorStyle();",
    "description": "Sets the desired activity indicator style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.SetActivityIndicatorStyle.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.StartActivityIndicator();",
    "description": "Starts os activity indicator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.StartActivityIndicator.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.StopActivityIndicator();",
    "description": "Stops os activity indicator.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.StopActivityIndicator.html",
    "type": "method"
  },
  {
    "snippet": "Handheld.Vibrate();",
    "description": "Triggers device vibration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handheld.Vibrate.html",
    "type": "method"
  },
  {
    "snippet": "Hash128.Compute(${1:hashString});",
    "description": "Compute a hash of the input string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Hash128.Compute.html",
    "type": "method"
  },
  {
    "snippet": "Hash128.Parse(${1:hashString});",
    "description": "Convert the input string to Hash128.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Hash128.Parse.html",
    "type": "method"
  },
  {
    "snippet": "HashUtilities.AppendHash(${1:inHash}, ${2:outHash});",
    "description": "Append inHash in outHash.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HashUtilities.AppendHash.html",
    "type": "method"
  },
  {
    "snippet": "HashUtilities.ComputeHash128(${1:value}, ${2:hash});",
    "description": "Compute a 128 bit hash based on a value. the type of the value must be a value type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HashUtilities.ComputeHash128.html",
    "type": "method"
  },
  {
    "snippet": "HashUtilities.QuantisedMatrixHash(${1:value}, ${2:hash});",
    "description": "Compute a Hash128 of a Matrix4x4.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HashUtilities.QuantisedMatrixHash.html",
    "type": "method"
  },
  {
    "snippet": "HashUtilities.QuantisedVectorHash(${1:value}, ${2:hash});",
    "description": "Compute a Hash128 of a Vector3.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HashUtilities.QuantisedVectorHash.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HingeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.BoneFromMuscle(${1:i});",
    "description": "Return the bone to which a particular muscle is connected.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.BoneFromMuscle.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.GetBoneDefaultHierarchyMass(${1:i});",
    "description": "Gets the bone hierarchy mass.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.GetBoneDefaultHierarchyMass.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.GetMuscleDefaultMax(${1:i});",
    "description": "Get the default maximum value of rotation for a muscle in degrees.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.GetMuscleDefaultMax.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.GetMuscleDefaultMin(${1:i});",
    "description": "Get the default minimum value of rotation for a muscle in degrees.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.GetMuscleDefaultMin.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.GetParentBone(${1:i});",
    "description": "Returns parent humanoid bone index of a bone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.GetParentBone.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.MuscleFromBone(${1:i}, ${2:dofIndex});",
    "description": "Obtain the muscle index for a particular bone index and \"degree of freedom\".",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.MuscleFromBone.html",
    "type": "method"
  },
  {
    "snippet": "HumanTrait.RequiredBone(${1:i});",
    "description": "Is the bone a member of the minimal set of bones that Mecanim requires for a human model?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HumanTrait.RequiredBone.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.EncodeToEXR(${1:tex}, ${2:flags});",
    "description": "Encodes this texture into the EXR format.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToEXR.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.EncodeToJPG(${1:tex}, ${2:quality});",
    "description": "Encodes this texture into JPG format.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToJPG.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.EncodeToJPG(${1:tex});",
    "description": "Encodes this texture into JPG format.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToJPG.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.EncodeToPNG(${1:tex});",
    "description": "Encodes this texture into PNG format.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToPNG.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.EncodeToTGA(${1:tex});",
    "description": "Encodes the specified texture in TGA format.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToTGA.html",
    "type": "method"
  },
  {
    "snippet": "ImageConversion.LoadImage(${1:tex}, ${2:data}, ${3:markNonReadable});",
    "description": "Loads PNG/JPG image byte array into a texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ImageConversion.LoadImage.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetAccelerationEvent(${1:index});",
    "description": "Returns specific acceleration measurement which occurred during last frame. (Does not allocate temporary variables).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetAccelerationEvent.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetAxis(${1:axisName});",
    "description": "Returns the value of the virtual axis identified by axisName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetAxis.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetAxisRaw(${1:axisName});",
    "description": "Returns the value of the virtual axis identified by axisName with no smoothing filtering applied.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetAxisRaw.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetButton(${1:buttonName});",
    "description": "Returns true while the virtual button identified by buttonName is held down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetButton.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetButtonDown(${1:buttonName});",
    "description": "Returns true during the frame the user pressed down the virtual button identified by buttonName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetButtonDown.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetButtonUp(${1:buttonName});",
    "description": "Returns true the first frame the user releases the virtual button identified by buttonName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetButtonUp.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetJoystickNames();",
    "description": "Returns an array of strings describing the connected joysticks.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetJoystickNames.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKey(${1:name});",
    "description": "Returns true while the user holds down the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKey.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKey(${1:key});",
    "description": "Returns true while the user holds down the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKey.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKeyDown(${1:name});",
    "description": "Returns true during the frame the user starts pressing down the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKeyDown.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKeyDown(${1:key});",
    "description": "Returns true during the frame the user starts pressing down the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKeyDown.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKeyUp(${1:name});",
    "description": "Returns true during the frame the user releases the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKeyUp.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetKeyUp(${1:key});",
    "description": "Returns true during the frame the user releases the key identified by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetKeyUp.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetMouseButton(${1:button});",
    "description": "Returns whether the given mouse button is held down.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetMouseButton.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetMouseButtonDown(${1:button});",
    "description": "Returns true during the frame the user pressed the given mouse button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetMouseButtonDown.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetMouseButtonUp(${1:button});",
    "description": "Returns true during the frame the user releases the given mouse button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetMouseButtonUp.html",
    "type": "method"
  },
  {
    "snippet": "Input.GetTouch(${1:index});",
    "description": "Call Input.GetTouch to obtain a Touch struct.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.GetTouch.html",
    "type": "method"
  },
  {
    "snippet": "Input.IsJoystickPreconfigured(${1:joystickName});",
    "description": "Determine whether a particular joystick model has been preconfigured by Unity. (Linux-only).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.IsJoystickPreconfigured.html",
    "type": "method"
  },
  {
    "snippet": "Input.ResetInputAxes();",
    "description": "Resets all input. After ResetInputAxes all axes return to 0 and all buttons return to 0 for one frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Input.ResetInputAxes.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Joint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Joint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Joint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Joint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "JsonUtility.FromJson(${1:json});",
    "description": "Create an object from its JSON representation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/JsonUtility.FromJson.html",
    "type": "method"
  },
  {
    "snippet": "JsonUtility.FromJson(${1:json}, ${2:type});",
    "description": "Create an object from its JSON representation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/JsonUtility.FromJson.html",
    "type": "method"
  },
  {
    "snippet": "JsonUtility.FromJsonOverwrite(${1:json}, ${2:objectToOverwrite});",
    "description": "Overwrite data in an object by reading from its JSON representation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/JsonUtility.FromJsonOverwrite.html",
    "type": "method"
  },
  {
    "snippet": "JsonUtility.ToJson(${1:obj});",
    "description": "Generate a JSON representation of the public fields of an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html",
    "type": "method"
  },
  {
    "snippet": "JsonUtility.ToJson(${1:obj}, ${2:prettyPrint});",
    "description": "Generate a JSON representation of the public fields of an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html",
    "type": "method"
  },
  {
    "snippet": "LayerMask.GetMask(${1:layerNames});",
    "description": "Given a set of layer names as defined by either a Builtin or a User Layer in the Tags and Layers manager, returns the equivalent layer mask for all of them.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LayerMask.GetMask.html",
    "type": "method"
  },
  {
    "snippet": "LayerMask.LayerToName(${1:layer});",
    "description": "Given a layer number, returns the name of the layer as defined in either a Builtin or a User Layer in the Tags and Layers manager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LayerMask.LayerToName.html",
    "type": "method"
  },
  {
    "snippet": "LayerMask.NameToLayer(${1:layerName});",
    "description": "Given a layer name, returns the layer index as defined by either a Builtin or a User Layer in the Tags and Layers manager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LayerMask.NameToLayer.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LensFlare.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Light.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Light.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Light.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Light.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Light.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbeProxyVolume.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightProbes.CalculateInterpolatedLightAndOcclusionProbes(${1:positions}, ${2:lightProbes}, ${3:occlusionProbes});",
    "description": "Calculate light probes and occlusion probes at the given world space positions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LightProbes.CalculateInterpolatedLightAndOcclusionProbes.html",
    "type": "method"
  },
  {
    "snippet": "LightProbes.GetInterpolatedProbe(${1:position}, ${2:renderer}, ${3:probe});",
    "description": "Returns an interpolated probe for the given position for both realtime and baked light probes combined.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LightProbes.GetInterpolatedProbe.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LineRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LocalizationAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LODGroup.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Material.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Material.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Material.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Material.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Material.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Abs(${1:f});",
    "description": "Returns the absolute value of f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Abs.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Abs(${1:value});",
    "description": "Returns the absolute value of f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Abs.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Acos(${1:f});",
    "description": "Returns the arc-cosine of f - the angle in radians whose cosine is f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Acos.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Approximately(${1:a}, ${2:b});",
    "description": "Compares two floating point values and returns true if they are similar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Approximately.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Asin(${1:f});",
    "description": "Returns the arc-sine of f - the angle in radians whose sine is f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Asin.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Atan(${1:f});",
    "description": "Returns the arc-tangent of f - the angle in radians whose tangent is f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Atan.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Atan2(${1:y}, ${2:x});",
    "description": "Returns the angle in radians whose Tan is y/x.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Atan2.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Ceil(${1:f});",
    "description": "Returns the smallest integer greater to or equal to f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Ceil.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.CeilToInt(${1:f});",
    "description": "Returns the smallest integer greater to or equal to f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.CeilToInt.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Clamp(${1:value}, ${2:min}, ${3:max});",
    "description": "Clamps a value between a minimum float and maximum float value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Clamp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Clamp(${1:value}, ${2:min}, ${3:max});",
    "description": "Clamps a value between a minimum float and maximum float value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Clamp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Clamp01(${1:value});",
    "description": "Clamps value between 0 and 1 and returns value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Clamp01.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.ClosestPowerOfTwo(${1:value});",
    "description": "Returns the closest power of two value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.ClosestPowerOfTwo.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.CorrelatedColorTemperatureToRGB(${1:kelvin});",
    "description": "Convert a color temperature in Kelvin to RGB color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.CorrelatedColorTemperatureToRGB.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Cos(${1:f});",
    "description": "Returns the cosine of angle f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Cos.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.DeltaAngle(${1:current}, ${2:target});",
    "description": "Calculates the shortest difference between two given angles given in degrees.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.DeltaAngle.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Exp(${1:power});",
    "description": "Returns e raised to the specified power.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Exp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Floor(${1:f});",
    "description": "Returns the largest integer smaller than or equal to f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Floor.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.FloorToInt(${1:f});",
    "description": "Returns the largest integer smaller to or equal to f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.FloorToInt.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.GammaToLinearSpace(${1:value});",
    "description": "Converts the given value from gamma (sRGB) to linear color space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.GammaToLinearSpace.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.InverseLerp(${1:a}, ${2:b}, ${3:value});",
    "description": "Calculates the linear parameter t that produces the interpolant value within the range [a, b].",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.InverseLerp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.IsPowerOfTwo(${1:value});",
    "description": "Returns true if the value is power of two.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.IsPowerOfTwo.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.LerpAngle(${1:a}, ${2:b}, ${3:t});",
    "description": "Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.LerpAngle.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between a and b by t with no limit to t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.LinearToGammaSpace(${1:value});",
    "description": "Converts the given value from linear to gamma (sRGB) color space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.LinearToGammaSpace.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Log(${1:f}, ${2:p});",
    "description": "Returns the logarithm of a specified number in a specified base.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Log.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Log(${1:f});",
    "description": "Returns the logarithm of a specified number in a specified base.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Log.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Log10(${1:f});",
    "description": "Returns the base 10 logarithm of a specified number.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Log10.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Max(${1:a}, ${2:b});",
    "description": "Returns largest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Max.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Max(${1:values});",
    "description": "Returns largest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Max.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Max(${1:a}, ${2:b});",
    "description": "Returns largest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Max.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Max(${1:values});",
    "description": "Returns largest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Max.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Min(${1:a}, ${2:b});",
    "description": "Returns the smallest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Min.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Min(${1:values});",
    "description": "Returns the smallest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Min.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Min(${1:a}, ${2:b});",
    "description": "Returns the smallest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Min.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Min(${1:values});",
    "description": "Returns the smallest of two or more values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Min.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.MoveTowards(${1:current}, ${2:target}, ${3:maxDelta});",
    "description": "Moves a value current towards target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.MoveTowards.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.MoveTowardsAngle(${1:current}, ${2:target}, ${3:maxDelta});",
    "description": "Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.MoveTowardsAngle.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.NextPowerOfTwo(${1:value});",
    "description": "Returns the next power of two that is equal to, or greater than, the argument.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.NextPowerOfTwo.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.PerlinNoise(${1:x}, ${2:y});",
    "description": "Generate 2D Perlin noise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.PerlinNoise.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.PingPong(${1:t}, ${2:length});",
    "description": "PingPongs the value t, so that it is never larger than length and never smaller than 0.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.PingPong.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Pow(${1:f}, ${2:p});",
    "description": "Returns f raised to power p.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Pow.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Repeat(${1:t}, ${2:length});",
    "description": "Loops the value t, so that it is never larger than length and never smaller than 0.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Repeat.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Round(${1:f});",
    "description": "Returns f rounded to the nearest integer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Round.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.RoundToInt(${1:f});",
    "description": "Returns f rounded to the nearest integer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.RoundToInt.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Sign(${1:f});",
    "description": "Returns the sign of f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Sign.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Sin(${1:f});",
    "description": "Returns the sine of angle f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Sin.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.SmoothDamp(${1:current}, ${2:target}, ${3:currentVelocity}, ${4:smoothTime}, ${5:maxSpeed}, ${6:deltaTime});",
    "description": "Gradually changes a value towards a desired goal over time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.SmoothDampAngle(${1:current}, ${2:target}, ${3:currentVelocity}, ${4:smoothTime}, ${5:maxSpeed}, ${6:deltaTime});",
    "description": "Gradually changes an angle given in degrees towards a desired goal angle over time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.SmoothDampAngle.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.SmoothStep(${1:from}, ${2:to}, ${3:t});",
    "description": "Interpolates between min and max with smoothing at the limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.SmoothStep.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Sqrt(${1:f});",
    "description": "Returns square root of f.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Sqrt.html",
    "type": "method"
  },
  {
    "snippet": "Mathf.Tan(${1:f});",
    "description": "Returns the tangent of angle f in radians.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Mathf.Tan.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Frustum(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:zNear}, ${6:zFar});",
    "description": "This function returns a projection matrix with viewing frustum that has a near plane defined by the coordinates that were passed in.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Frustum.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Frustum(${1:fp});",
    "description": "This function returns a projection matrix with viewing frustum that has a near plane defined by the coordinates that were passed in.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Frustum.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.LookAt(${1:from}, ${2:to}, ${3:up});",
    "description": "Given a source point, a target point, and an up vector, computes a transformation matrix that corresponds to a camera viewing the target from the source, such that the right-hand vector is perpendicular to the up vector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.LookAt.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Ortho(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:zNear}, ${6:zFar});",
    "description": "Creates an orthogonal projection matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Ortho.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Perspective(${1:fov}, ${2:aspect}, ${3:zNear}, ${4:zFar});",
    "description": "Creates a perspective projection matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Perspective.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Rotate(${1:q});",
    "description": "Creates a rotation matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Rotate.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Scale(${1:vector});",
    "description": "Creates a scaling matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.Translate(${1:vector});",
    "description": "Creates a translation matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.Translate.html",
    "type": "method"
  },
  {
    "snippet": "Matrix4x4.TRS(${1:pos}, ${2:q}, ${3:s});",
    "description": "Creates a translation, rotation and scaling matrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Matrix4x4.TRS.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Mesh.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshFilter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Microphone.End(${1:deviceName});",
    "description": "Stops recording.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Microphone.End.html",
    "type": "method"
  },
  {
    "snippet": "Microphone.GetDeviceCaps(${1:deviceName}, ${2:minFreq}, ${3:maxFreq});",
    "description": "Get the frequency capabilities of a device.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Microphone.GetDeviceCaps.html",
    "type": "method"
  },
  {
    "snippet": "Microphone.GetPosition(${1:deviceName});",
    "description": "Get the position in samples of the recording.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Microphone.GetPosition.html",
    "type": "method"
  },
  {
    "snippet": "Microphone.IsRecording(${1:deviceName});",
    "description": "Query if a device is currently recording.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Microphone.IsRecording.html",
    "type": "method"
  },
  {
    "snippet": "Microphone.Start(${1:deviceName}, ${2:loop}, ${3:lengthSec}, ${4:frequency});",
    "description": "Start Recording with device.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Microphone.Start.html",
    "type": "method"
  },
  {
    "snippet": "MonoBehaviour.print(${1:message});",
    "description": "Logs message to the Unity Console (identical to Debug.Log).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoBehaviour-print.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Motion.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Motion.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Motion.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Motion.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "MovieTexture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "NetworkView.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Object.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Object.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Object.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Object.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Object.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionArea.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "OcclusionPortal.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.GetCollisionEvents(${1:ps}, ${2:go}, ${3:collisionEvents});",
    "description": "Get the particle collision events for a GameObject. Returns the number of events written to the array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.GetCollisionEvents.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.GetSafeCollisionEventSize(${1:ps});",
    "description": "Safe array size for use with ParticleSystem.GetCollisionEvents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.GetSafeCollisionEventSize.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.GetSafeTriggerParticlesSize(${1:ps}, ${2:type});",
    "description": "Safe array size for use with ParticleSystem.GetTriggerParticles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.GetSafeTriggerParticlesSize.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.GetTriggerParticles();",
    "description": "Get the particles that met the condition in the particle trigger module. Returns the number of particles written to the array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.GetTriggerParticles.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.SetTriggerParticles();",
    "description": "Write modified particles back to the particle system, during a call to OnParticleTrigger.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.SetTriggerParticles.html",
    "type": "method"
  },
  {
    "snippet": "ParticlePhysicsExtensions.SetTriggerParticles();",
    "description": "Write modified particles back to the particle system, during a call to OnParticleTrigger.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticlePhysicsExtensions.SetTriggerParticles.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystem.ResetPreMappedBufferMemory();",
    "description": "Reset the cache of reserved graphics memory used for efficient rendering of Particle Systems.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ParticleSystem.ResetPreMappedBufferMemory.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemForceField.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ParticleSystemRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Physics.BoxCast(${1:center}, ${2:halfExtents}, ${3:direction}, ${4:orientation}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Casts the box along a ray and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.BoxCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.BoxCast(${1:center}, ${2:halfExtents}, ${3:direction}, ${4:hitInfo}, ${5:orientation}, ${6:maxDistance}, ${7:layerMask}, ${8:queryTriggerInteraction});",
    "description": "Casts the box along a ray and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.BoxCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.BoxCastAll(${1:center}, ${2:halfExtents}, ${3:direction}, ${4:orientation}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Like Physics.BoxCast, but returns all hits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.BoxCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.BoxCastNonAlloc(${1:center}, ${2:halfExtents}, ${3:direction}, ${4:results}, ${5:orientation}, ${6:maxDistance}, ${7:layerMask}, ${8:queryTriggerInteraction});",
    "description": "Cast the box along the direction, and store hits in the provided buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.BoxCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CapsuleCast(${1:point1}, ${2:point2}, ${3:radius}, ${4:direction}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Casts a capsule against all colliders in the Scene and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CapsuleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CapsuleCast(${1:point1}, ${2:point2}, ${3:radius}, ${4:direction}, ${5:hitInfo}, ${6:maxDistance}, ${7:layerMask}, ${8:queryTriggerInteraction});",
    "description": "Casts a capsule against all colliders in the Scene and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CapsuleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CapsuleCastAll(${1:point1}, ${2:point2}, ${3:radius}, ${4:direction}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Like Physics.CapsuleCast, but this function will return all hits the capsule sweep intersects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CapsuleCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CapsuleCastNonAlloc(${1:point1}, ${2:point2}, ${3:radius}, ${4:direction}, ${5:results}, ${6:maxDistance}, ${7:layerMask}, ${8:queryTriggerInteraction});",
    "description": "Casts a capsule against all colliders in the Scene and returns detailed information on what was hit into the buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CapsuleCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CheckBox(${1:center}, ${2:halfExtents}, ${3:orientation}, ${4:layermask}, ${5:queryTriggerInteraction});",
    "description": "Check whether the given box overlaps with other colliders or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CheckBox.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CheckCapsule(${1:start}, ${2:end}, ${3:radius}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Checks if any colliders overlap a capsule-shaped volume in world space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CheckCapsule.html",
    "type": "method"
  },
  {
    "snippet": "Physics.CheckSphere(${1:position}, ${2:radius}, ${3:layerMask}, ${4:queryTriggerInteraction});",
    "description": "Returns true if there are any colliders overlapping the sphere defined by position and radius in world coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.CheckSphere.html",
    "type": "method"
  },
  {
    "snippet": "Physics.ClosestPoint(${1:point}, ${2:collider}, ${3:position}, ${4:rotation});",
    "description": "Returns a point on the given collider that is closest to the specified location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.ClosestPoint.html",
    "type": "method"
  },
  {
    "snippet": "Physics.ComputePenetration(${1:colliderA}, ${2:positionA}, ${3:rotationA}, ${4:colliderB}, ${5:positionB}, ${6:rotationB}, ${7:direction}, ${8:distance});",
    "description": "Compute the minimal translation required to separate the given colliders apart at specified poses.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.ComputePenetration.html",
    "type": "method"
  },
  {
    "snippet": "Physics.GetIgnoreLayerCollision(${1:layer1}, ${2:layer2});",
    "description": "Are collisions between layer1 and layer2 being ignored?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.GetIgnoreLayerCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics.IgnoreCollision(${1:collider1}, ${2:collider2}, ${3:ignore});",
    "description": "Makes the collision detection system ignore all collisions between collider1 and collider2.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.IgnoreCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics.IgnoreLayerCollision(${1:layer1}, ${2:layer2}, ${3:ignore});",
    "description": "Makes the collision detection system ignore all collisions between any collider in layer1 and any collider in layer2.Note that IgnoreLayerCollision will reset the trigger state of affected colliders, so you might receive OnTriggerExit and OnTriggerEnter messages in response to calling this.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.IgnoreLayerCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Linecast(${1:start}, ${2:end}, ${3:layerMask}, ${4:queryTriggerInteraction});",
    "description": "Returns true if there is any collider intersecting the line between start and end.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Linecast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Linecast(${1:start}, ${2:end}, ${3:hitInfo}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Returns true if there is any collider intersecting the line between start and end.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Linecast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapBox(${1:center}, ${2:halfExtents}, ${3:orientation}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Find all colliders touching or inside of the given box.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapBox.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapBoxNonAlloc(${1:center}, ${2:halfExtents}, ${3:results}, ${4:orientation}, ${5:mask}, ${6:queryTriggerInteraction});",
    "description": "Find all colliders touching or inside of the given box, and store them into the buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapBoxNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapCapsule(${1:point0}, ${2:point1}, ${3:radius}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Check the given capsule against the physics world and return all overlapping colliders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapCapsule.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapCapsuleNonAlloc(${1:point0}, ${2:point1}, ${3:radius}, ${4:results}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Check the given capsule against the physics world and return all overlapping colliders in the user-provided buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapCapsuleNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapSphere(${1:position}, ${2:radius}, ${3:layerMask}, ${4:queryTriggerInteraction});",
    "description": "Returns an array with all colliders touching or inside the sphere.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapSphere.html",
    "type": "method"
  },
  {
    "snippet": "Physics.OverlapSphereNonAlloc(${1:position}, ${2:radius}, ${3:results}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Computes and stores colliders touching or inside the sphere into the provided buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.OverlapSphereNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Raycast(${1:origin}, ${2:direction}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Casts a ray, from point origin, in direction direction, of length maxDistance, against all colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Raycast(${1:origin}, ${2:direction}, ${3:hitInfo}, ${4:maxDistance}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Casts a ray, from point origin, in direction direction, of length maxDistance, against all colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Raycast(${1:ray}, ${2:maxDistance}, ${3:layerMask}, ${4:queryTriggerInteraction});",
    "description": "Casts a ray, from point origin, in direction direction, of length maxDistance, against all colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Raycast(${1:ray}, ${2:hitInfo}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Casts a ray, from point origin, in direction direction, of length maxDistance, against all colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.RaycastAll(${1:ray}, ${2:maxDistance}, ${3:layerMask}, ${4:queryTriggerInteraction});",
    "description": "Casts a ray through the Scene and returns all hits. Note that order is not guaranteed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.RaycastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.RaycastAll(${1:origin}, ${2:direction}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Casts a ray through the Scene and returns all hits. Note that order is not guaranteed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.RaycastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.RaycastNonAlloc(${1:ray}, ${2:results}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Cast a ray through the Scene and store the hits into the buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.RaycastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.RaycastNonAlloc(${1:origin}, ${2:direction}, ${3:results}, ${4:maxDistance}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Cast a ray through the Scene and store the hits into the buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.RaycastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.RebuildBroadphaseRegions(${1:worldBounds}, ${2:subdivisions});",
    "description": "Rebuild the broadphase interest regions as well as set the world boundaries.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.RebuildBroadphaseRegions.html",
    "type": "method"
  },
  {
    "snippet": "Physics.Simulate(${1:step});",
    "description": "Simulate physics in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.Simulate.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCast(${1:origin}, ${2:radius}, ${3:direction}, ${4:hitInfo}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Casts a sphere along a ray and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCast(${1:ray}, ${2:radius}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Casts a sphere along a ray and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCast(${1:ray}, ${2:radius}, ${3:hitInfo}, ${4:maxDistance}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Casts a sphere along a ray and returns detailed information on what was hit.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCastAll(${1:origin}, ${2:radius}, ${3:direction}, ${4:maxDistance}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCastAll(${1:ray}, ${2:radius}, ${3:maxDistance}, ${4:layerMask}, ${5:queryTriggerInteraction});",
    "description": "Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCastNonAlloc(${1:origin}, ${2:radius}, ${3:direction}, ${4:results}, ${5:maxDistance}, ${6:layerMask}, ${7:queryTriggerInteraction});",
    "description": "Cast sphere along the direction and store the results into buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SphereCastNonAlloc(${1:ray}, ${2:radius}, ${3:results}, ${4:maxDistance}, ${5:layerMask}, ${6:queryTriggerInteraction});",
    "description": "Cast sphere along the direction and store the results into buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SphereCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics.SyncTransforms();",
    "description": "Apply Transform changes to the physics engine.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics.SyncTransforms.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.BoxCast(${1:origin}, ${2:size}, ${3:angle}, ${4:direction}, ${5:distance}, ${6:layerMask}, ${7:minDepth}, ${8:maxDepth});",
    "description": "Casts a box against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.BoxCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.BoxCast(${1:origin}, ${2:size}, ${3:angle}, ${4:direction}, ${5:contactFilter}, ${6:results}, ${7:distance});",
    "description": "Casts a box against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.BoxCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.BoxCastAll(${1:origin}, ${2:size}, ${3:angle}, ${4:direction}, ${5:distance}, ${6:layerMask}, ${7:minDepth}, ${8:maxDepth});",
    "description": "Casts a box against colliders in the Scene, returning all colliders that contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.BoxCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.BoxCastNonAlloc(${1:origin}, ${2:size}, ${3:angle}, ${4:direction}, ${5:results}, ${6:distance}, ${7:layerMask}, ${8:minDepth}, ${9:maxDepth});",
    "description": "Casts a box into the Scene, returning colliders that contact with it into the provided results array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.BoxCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CapsuleCast(${1:origin}, ${2:size}, ${3:capsuleDirection}, ${4:angle}, ${5:direction}, ${6:distance}, ${7:layerMask}, ${8:minDepth}, ${9:maxDepth});",
    "description": "Casts a capsule against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CapsuleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CapsuleCast(${1:origin}, ${2:size}, ${3:capsuleDirection}, ${4:angle}, ${5:direction}, ${6:contactFilter}, ${7:results}, ${8:distance});",
    "description": "Casts a capsule against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CapsuleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CapsuleCastAll(${1:origin}, ${2:size}, ${3:capsuleDirection}, ${4:angle}, ${5:direction}, ${6:distance}, ${7:layerMask}, ${8:minDepth}, ${9:maxDepth});",
    "description": "Casts a capsule against colliders in the Scene, returning all colliders that contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CapsuleCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CapsuleCastNonAlloc(${1:origin}, ${2:size}, ${3:capsuleDirection}, ${4:angle}, ${5:direction}, ${6:results}, ${7:distance}, ${8:layerMask}, ${9:minDepth}, ${10:maxDepth});",
    "description": "Casts a capsule into the Scene, returning colliders that contact with it into the provided results array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CapsuleCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CircleCast(${1:origin}, ${2:radius}, ${3:direction}, ${4:distance}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Casts a circle against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CircleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CircleCast(${1:origin}, ${2:radius}, ${3:direction}, ${4:contactFilter}, ${5:results}, ${6:distance});",
    "description": "Casts a circle against colliders in the Scene, returning the first collider to contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CircleCast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CircleCastAll(${1:origin}, ${2:radius}, ${3:direction}, ${4:distance}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Casts a circle against colliders in the Scene, returning all colliders that contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CircleCastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.CircleCastNonAlloc(${1:origin}, ${2:radius}, ${3:direction}, ${4:results}, ${5:distance}, ${6:layerMask}, ${7:minDepth}, ${8:maxDepth});",
    "description": "Casts a circle into the Scene, returning colliders that contact with it into the provided results array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.CircleCastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Distance(${1:colliderA}, ${2:colliderB});",
    "description": "Calculates the minimum distance between two colliders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:collider}, ${2:colliders});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:collider}, ${2:contacts});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:collider}, ${2:contactFilter}, ${3:contacts});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:collider}, ${2:contactFilter}, ${3:colliders});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:collider1}, ${2:collider2}, ${3:contactFilter}, ${4:contacts});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:rigidbody}, ${2:contacts});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:rigidbody}, ${2:colliders});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:rigidbody}, ${2:contactFilter}, ${3:contacts});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetContacts(${1:rigidbody}, ${2:contactFilter}, ${3:colliders});",
    "description": "Retrieves all colliders in contact with the collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetContacts.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetIgnoreCollision(${1:collider1}, ${2:collider2});",
    "description": "Checks whether the collision detection system will ignore all collisions/triggers between collider1 and collider2 or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetIgnoreCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetIgnoreLayerCollision(${1:layer1}, ${2:layer2});",
    "description": "Checks whether collisions between the specified layers be ignored or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetIgnoreLayerCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetLayerCollisionMask(${1:layer});",
    "description": "Get the collision layer mask that indicates which layer(s) the specified layer can collide with.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetLayerCollisionMask.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetRayIntersection(${1:ray}, ${2:distance}, ${3:layerMask});",
    "description": "Cast a 3D ray against the colliders in the Scene returning the first collider along the ray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetRayIntersection.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetRayIntersectionAll(${1:ray}, ${2:distance}, ${3:layerMask});",
    "description": "Cast a 3D ray against the colliders in the Scene returning all the colliders along the ray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetRayIntersectionAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.GetRayIntersectionNonAlloc(${1:ray}, ${2:results}, ${3:distance}, ${4:layerMask});",
    "description": "Cast a 3D ray against the colliders in the Scene returning the colliders along the ray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.GetRayIntersectionNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IgnoreCollision(${1:collider1}, ${2:collider2}, ${3:ignore});",
    "description": "Makes the collision detection system ignore all collisions/triggers between collider1 and collider2.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IgnoreCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IgnoreLayerCollision(${1:layer1}, ${2:layer2}, ${3:ignore});",
    "description": "Choose whether to detect or ignore collisions between a specified pair of layers.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IgnoreLayerCollision.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IsTouching(${1:collider1}, ${2:collider2});",
    "description": "Checks whether the passed colliders are in contact or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IsTouching.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IsTouching(${1:collider}, ${2:contactFilter});",
    "description": "Checks whether the passed colliders are in contact or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IsTouching.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IsTouching(${1:collider1}, ${2:collider2}, ${3:contactFilter});",
    "description": "Checks whether the passed colliders are in contact or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IsTouching.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.IsTouchingLayers(${1:collider}, ${2:layerMask});",
    "description": "Checks whether the collider is touching any colliders on the specified layerMask or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.IsTouchingLayers.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Linecast(${1:start}, ${2:end}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Casts a line segment against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Linecast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Linecast(${1:start}, ${2:end}, ${3:contactFilter}, ${4:results});",
    "description": "Casts a line segment against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Linecast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.LinecastAll(${1:start}, ${2:end}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Casts a line against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.LinecastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.LinecastNonAlloc(${1:start}, ${2:end}, ${3:results}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Casts a line against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.LinecastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapArea(${1:pointA}, ${2:pointB}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Checks if a collider falls within a rectangular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapArea.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapArea(${1:pointA}, ${2:pointB}, ${3:contactFilter}, ${4:results});",
    "description": "Checks if a collider falls within a rectangular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapArea.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapAreaAll(${1:pointA}, ${2:pointB}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Get a list of all colliders that fall within a rectangular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapAreaAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapAreaNonAlloc(${1:pointA}, ${2:pointB}, ${3:results}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Get a list of all colliders that fall within a specified area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapAreaNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapBox(${1:point}, ${2:size}, ${3:angle}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Checks if a collider falls within a box area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapBox.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapBox(${1:point}, ${2:size}, ${3:angle}, ${4:contactFilter}, ${5:results});",
    "description": "Checks if a collider falls within a box area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapBox.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapBoxAll(${1:point}, ${2:size}, ${3:angle}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Get a list of all colliders that fall within a box area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapBoxAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapBoxNonAlloc(${1:point}, ${2:size}, ${3:angle}, ${4:results}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Get a list of all colliders that fall within a box area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapBoxNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCapsule(${1:point}, ${2:size}, ${3:direction}, ${4:angle}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Checks if a collider falls within a capsule area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCapsule.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCapsule(${1:point}, ${2:size}, ${3:direction}, ${4:angle}, ${5:contactFilter}, ${6:results});",
    "description": "Checks if a collider falls within a capsule area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCapsule.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCapsuleAll(${1:point}, ${2:size}, ${3:direction}, ${4:angle}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Get a list of all colliders that fall within a capsule area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCapsuleAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCapsuleNonAlloc(${1:point}, ${2:size}, ${3:direction}, ${4:angle}, ${5:results}, ${6:layerMask}, ${7:minDepth}, ${8:maxDepth});",
    "description": "Get a list of all colliders that fall within a capsule area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCapsuleNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCircle(${1:point}, ${2:radius}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Checks if a collider falls within a circular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCircle.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCircle(${1:point}, ${2:radius}, ${3:contactFilter}, ${4:results});",
    "description": "Checks if a collider falls within a circular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCircle.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCircleAll(${1:point}, ${2:radius}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Get a list of all colliders that fall within a circular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCircleAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCircleNonAlloc(${1:point}, ${2:radius}, ${3:results}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Get a list of all colliders that fall within a circular area.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCircleNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapCollider(${1:collider}, ${2:contactFilter}, ${3:results});",
    "description": "Get a list of all colliders that overlap collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCollider.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapPoint(${1:point}, ${2:layerMask}, ${3:minDepth}, ${4:maxDepth});",
    "description": "Checks if a collider overlaps a point in space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapPoint.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapPoint(${1:point}, ${2:contactFilter}, ${3:results});",
    "description": "Checks if a collider overlaps a point in space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapPoint.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapPointAll(${1:point}, ${2:layerMask}, ${3:minDepth}, ${4:maxDepth});",
    "description": "Get a list of all colliders that overlap a point in space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapPointAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.OverlapPointNonAlloc(${1:point}, ${2:results}, ${3:layerMask}, ${4:minDepth}, ${5:maxDepth});",
    "description": "Get a list of all colliders that overlap a point in space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.OverlapPointNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Raycast(${1:origin}, ${2:direction}, ${3:distance}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Casts a ray against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Raycast(${1:origin}, ${2:direction}, ${3:contactFilter}, ${4:results}, ${5:distance});",
    "description": "Casts a ray against colliders in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Raycast.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.RaycastAll(${1:origin}, ${2:direction}, ${3:distance}, ${4:layerMask}, ${5:minDepth}, ${6:maxDepth});",
    "description": "Casts a ray against colliders in the Scene, returning all colliders that contact with it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.RaycastAll.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.RaycastNonAlloc(${1:origin}, ${2:direction}, ${3:results}, ${4:distance}, ${5:layerMask}, ${6:minDepth}, ${7:maxDepth});",
    "description": "Casts a ray into the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.RaycastNonAlloc.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.SetLayerCollisionMask(${1:layer}, ${2:layerMask});",
    "description": "Set the collision layer mask that indicates which layer(s) the specified layer can collide with.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.SetLayerCollisionMask.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.Simulate(${1:step});",
    "description": "Simulate physics in the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.Simulate.html",
    "type": "method"
  },
  {
    "snippet": "Physics2D.SyncTransforms();",
    "description": "Synchronizes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Physics2D.SyncTransforms.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsMaterial2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsScene2D.OverlapCollider(${1:collider}, ${2:results}, ${3:layerMask});",
    "description": "Checks a collider against colliders in the PhysicsScene2D, returning all intersections.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsScene2D.OverlapCollider.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsScene2D.OverlapCollider(${1:collider}, ${2:contactFilter}, ${3:results});",
    "description": "Checks a collider against colliders in the PhysicsScene2D, returning all intersections.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsScene2D.OverlapCollider.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsSceneExtensions.GetPhysicsScene(${1:scene});",
    "description": "An extension method that returns the 3D physics Scene from the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsSceneExtensions.GetPhysicsScene.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsSceneExtensions2D.GetPhysicsScene2D(${1:scene});",
    "description": "An extension method that returns the 2D physics Scene from the Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsSceneExtensions2D.GetPhysicsScene2D.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsUpdateBehaviour2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlatformEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.DeleteAll();",
    "description": "Removes all keys and values from the preferences. Use with caution.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.DeleteAll.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.DeleteKey(${1:key});",
    "description": "Removes key and its corresponding value from the preferences.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.DeleteKey.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetFloat(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetFloat(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetInt(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetInt(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetString(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetString.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.GetString(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.GetString.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.HasKey(${1:key});",
    "description": "Returns true if key exists in the preferences.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.HasKey.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.Save();",
    "description": "Writes all modified preferences to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.Save.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.SetFloat(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.SetFloat.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.SetInt(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.SetInt.html",
    "type": "method"
  },
  {
    "snippet": "PlayerPrefs.SetString(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerPrefs.SetString.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PointEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PolygonCollider2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralMaterial.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "ProceduralTexture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Projector.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Projector.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Projector.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Projector.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PropertyName.IsNullOrEmpty(${1:prop});",
    "description": "Indicates whether the specified PropertyName is an Empty string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PropertyName.IsNullOrEmpty.html",
    "type": "method"
  },
  {
    "snippet": "QualitySettings.DecreaseLevel(${1:applyExpensiveChanges});",
    "description": "Decrease the current quality level.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/QualitySettings.DecreaseLevel.html",
    "type": "method"
  },
  {
    "snippet": "QualitySettings.GetQualityLevel();",
    "description": "Returns the current graphics quality level.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/QualitySettings.GetQualityLevel.html",
    "type": "method"
  },
  {
    "snippet": "QualitySettings.IncreaseLevel(${1:applyExpensiveChanges});",
    "description": "Increase the current quality level.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/QualitySettings.IncreaseLevel.html",
    "type": "method"
  },
  {
    "snippet": "QualitySettings.SetQualityLevel(${1:index}, ${2:applyExpensiveChanges});",
    "description": "Sets a new graphics quality level.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/QualitySettings.SetQualityLevel.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Angle(${1:a}, ${2:b});",
    "description": "Returns the angle in degrees between two rotations a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Angle.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.AngleAxis(${1:angle}, ${2:axis});",
    "description": "Creates a rotation which rotates angle degrees around axis.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.AngleAxis.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Dot(${1:a}, ${2:b});",
    "description": "The dot product between two rotations.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Dot.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Euler(${1:x}, ${2:y}, ${3:z});",
    "description": "Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Euler.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Euler(${1:euler});",
    "description": "Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Euler.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.FromToRotation(${1:fromDirection}, ${2:toDirection});",
    "description": "Creates a rotation which rotates from fromDirection to toDirection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.FromToRotation.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Inverse(${1:rotation});",
    "description": "Returns the Inverse of rotation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Inverse.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Interpolates between a and b by t and normalizes the result afterwards. The parameter t is clamped to the range [0, 1].",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Interpolates between a and b by t and normalizes the result afterwards. The parameter t is not clamped.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.LookRotation(${1:forward}, ${2:upwards});",
    "description": "Creates a rotation with the specified forward and upwards directions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.LookRotation.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Normalize(${1:q});",
    "description": "Converts this quaternion to one with the same orientation but with a magnitude of 1.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Normalize.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.RotateTowards(${1:from}, ${2:to}, ${3:maxDegreesDelta});",
    "description": "Rotates a rotation from towards to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.RotateTowards.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.Slerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Spherically interpolates between a and b by t. The parameter t is clamped to the range [0, 1].",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.Slerp.html",
    "type": "method"
  },
  {
    "snippet": "Quaternion.SlerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Spherically interpolates between a and b by t. The parameter t is not clamped.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Quaternion.SlerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Random.ColorHSV();",
    "description": "Generates a random color from HSV and alpha ranges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.ColorHSV.html",
    "type": "method"
  },
  {
    "snippet": "Random.ColorHSV(${1:hueMin}, ${2:hueMax});",
    "description": "Generates a random color from HSV and alpha ranges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.ColorHSV.html",
    "type": "method"
  },
  {
    "snippet": "Random.ColorHSV(${1:hueMin}, ${2:hueMax}, ${3:saturationMin}, ${4:saturationMax});",
    "description": "Generates a random color from HSV and alpha ranges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.ColorHSV.html",
    "type": "method"
  },
  {
    "snippet": "Random.ColorHSV(${1:hueMin}, ${2:hueMax}, ${3:saturationMin}, ${4:saturationMax}, ${5:valueMin}, ${6:valueMax});",
    "description": "Generates a random color from HSV and alpha ranges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.ColorHSV.html",
    "type": "method"
  },
  {
    "snippet": "Random.ColorHSV(${1:hueMin}, ${2:hueMax}, ${3:saturationMin}, ${4:saturationMax}, ${5:valueMin}, ${6:valueMax}, ${7:alphaMin}, ${8:alphaMax});",
    "description": "Generates a random color from HSV and alpha ranges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.ColorHSV.html",
    "type": "method"
  },
  {
    "snippet": "Random.InitState(${1:seed});",
    "description": "Initializes the random number generator state with a seed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.InitState.html",
    "type": "method"
  },
  {
    "snippet": "Random.Range(${1:min}, ${2:max});",
    "description": "Return a random float number between min [inclusive] and max [inclusive] (Read Only).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.Range.html",
    "type": "method"
  },
  {
    "snippet": "Random.Range(${1:min}, ${2:max});",
    "description": "Return a random float number between min [inclusive] and max [inclusive] (Read Only).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Random.Range.html",
    "type": "method"
  },
  {
    "snippet": "Rect.MinMaxRect(${1:xmin}, ${2:ymin}, ${3:xmax}, ${4:ymax});",
    "description": "Creates a rectangle from min/max coordinate values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rect.MinMaxRect.html",
    "type": "method"
  },
  {
    "snippet": "Rect.NormalizedToPoint(${1:rectangle}, ${2:normalizedRectCoordinates});",
    "description": "Returns a point inside a rectangle, given normalized coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rect.NormalizedToPoint.html",
    "type": "method"
  },
  {
    "snippet": "Rect.PointToNormalized(${1:rectangle}, ${2:point});",
    "description": "Returns the normalized coordinates cooresponding the the point.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rect.PointToNormalized.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.FlipLayoutAxes(${1:rect}, ${2:keepPositioning}, ${3:recursive});",
    "description": "Flips the horizontal and vertical axes of the RectTransform size and alignment, and optionally its children as well.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.FlipLayoutAxes.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.FlipLayoutOnAxis(${1:rect}, ${2:axis}, ${3:keepPositioning}, ${4:recursive});",
    "description": "Flips the alignment of the RectTransform along the horizontal or vertical axis, and optionally its children as well.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.FlipLayoutOnAxis.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.PixelAdjustPoint(${1:point}, ${2:elementTransform}, ${3:canvas});",
    "description": "Convert a given point in screen space into a pixel correct point.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.PixelAdjustPoint.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.PixelAdjustRect(${1:rectTransform}, ${2:canvas});",
    "description": "Given a rect transform, return the corner points in pixel accurate coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.PixelAdjustRect.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.RectangleContainsScreenPoint(${1:rect}, ${2:screenPoint}, ${3:cam});",
    "description": "Does the RectTransform contain the screen point as seen from the given camera?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.RectangleContainsScreenPoint.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.ScreenPointToLocalPointInRectangle(${1:rect}, ${2:screenPoint}, ${3:cam}, ${4:localPoint});",
    "description": "Transform a screen space point to a position in the local space of a RectTransform that is on the plane of its rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.ScreenPointToLocalPointInRectangle.html",
    "type": "method"
  },
  {
    "snippet": "RectTransformUtility.ScreenPointToWorldPointInRectangle(${1:rect}, ${2:screenPoint}, ${3:cam}, ${4:worldPoint});",
    "description": "Transform a screen space point to a position in world space that is on the plane of the given RectTransform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RectTransformUtility.ScreenPointToWorldPointInRectangle.html",
    "type": "method"
  },
  {
    "snippet": "ReflectionProbe.BlendCubemap(${1:src}, ${2:dst}, ${3:blend}, ${4:target});",
    "description": "Utility method to blend 2 cubemaps into a target render texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ReflectionProbe.BlendCubemap.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RelativeJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.ForceUpdate();",
    "description": "Forces the game to download the newest settings from the server and update its values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.ForceUpdate.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetBool(${1:key}, ${2:defaultValue});",
    "description": "Gets the value corresponding to remote setting identified by key, if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetBool.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetCount();",
    "description": "Gets the number of keys in the remote settings configuration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetCount.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetFloat(${1:key}, ${2:defaultValue});",
    "description": "Gets the value corresponding to remote setting identified by key, if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetInt(${1:key}, ${2:defaultValue});",
    "description": "Gets the value corresponding to remote setting identified by key, if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetKeys();",
    "description": "Gets an array containing all the keys in the remote settings configuration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetKeys.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetLong(${1:key}, ${2:defaultValue});",
    "description": "Gets the value corresponding to remote setting identified by key, if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetLong.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.GetString(${1:key}, ${2:defaultValue});",
    "description": "Gets the value corresponding to remote setting identified by key, if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.GetString.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.HasKey(${1:key});",
    "description": "Reports whether the specified key exists in the remote settings configuration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.HasKey.html",
    "type": "method"
  },
  {
    "snippet": "RemoteSettings.WasLastUpdatedFromServer();",
    "description": "Reports whether or not the settings available from the RemoteSettings object were received from the Analytics Service during the current session.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RemoteSettings.WasLastUpdatedFromServer.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Renderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RendererExtensions.UpdateGIMaterials(${1:renderer});",
    "description": "Schedules an update of the albedo and emissive Textures of a system that contains the Renderer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RendererExtensions.UpdateGIMaterials.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RenderTexture.GetTemporary(${1:desc});",
    "description": "Allocate a temporary render texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.GetTemporary.html",
    "type": "method"
  },
  {
    "snippet": "RenderTexture.GetTemporary(${1:width}, ${2:height}, ${3:depthBuffer}, ${4:format}, ${5:readWrite}, ${6:antiAliasing}, ${7:memorylessMode}, ${8:vrUsage}, ${9:useDynamicScale});",
    "description": "Allocate a temporary render texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.GetTemporary.html",
    "type": "method"
  },
  {
    "snippet": "RenderTexture.ReleaseTemporary(${1:temp});",
    "description": "Release a temporary texture allocated with GetTemporary.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.ReleaseTemporary.html",
    "type": "method"
  },
  {
    "snippet": "RenderTexture.SupportsStencil(${1:rt});",
    "description": "Does a RenderTexture have stencil buffer?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/RenderTexture.SupportsStencil.html",
    "type": "method"
  },
  {
    "snippet": "Resources.FindObjectsOfTypeAll(${1:type});",
    "description": "Returns a list of all objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.FindObjectsOfTypeAll.html",
    "type": "method"
  },
  {
    "snippet": "Resources.FindObjectsOfTypeAll();",
    "description": "Returns a list of all objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.FindObjectsOfTypeAll.html",
    "type": "method"
  },
  {
    "snippet": "Resources.Load(${1:path});",
    "description": "Loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.Load.html",
    "type": "method"
  },
  {
    "snippet": "Resources.Load(${1:path});",
    "description": "Loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.Load.html",
    "type": "method"
  },
  {
    "snippet": "Resources.Load(${1:path}, ${2:systemTypeInstance});",
    "description": "Loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.Load.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAll(${1:path});",
    "description": "Loads all assets in a folder or file at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAll.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAll(${1:path}, ${2:systemTypeInstance});",
    "description": "Loads all assets in a folder or file at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAll.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAll(${1:path});",
    "description": "Loads all assets in a folder or file at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAll.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAsync(${1:path});",
    "description": "Asynchronously loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAsync.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAsync(${1:path}, ${2:type});",
    "description": "Asynchronously loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAsync.html",
    "type": "method"
  },
  {
    "snippet": "Resources.LoadAsync(${1:path});",
    "description": "Asynchronously loads an asset stored at path in a Resources folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.LoadAsync.html",
    "type": "method"
  },
  {
    "snippet": "Resources.UnloadAsset(${1:assetToUnload});",
    "description": "Unloads assetToUnload from memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.UnloadAsset.html",
    "type": "method"
  },
  {
    "snippet": "Resources.UnloadUnusedAssets();",
    "description": "Unloads assets that are not used.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Resources.UnloadUnusedAssets.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Rigidbody2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RuntimeAnimatorController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScalableBufferManager.ResizeBuffers(${1:widthScale}, ${2:heightScale});",
    "description": "Function to resize all buffers marked as DynamicallyScalable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScalableBufferManager.ResizeBuffers.html",
    "type": "method"
  },
  {
    "snippet": "Screen.SetResolution(${1:width}, ${2:height}, ${3:fullscreen});",
    "description": "Switches the screen resolution.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Screen.SetResolution.html",
    "type": "method"
  },
  {
    "snippet": "Screen.SetResolution(${1:width}, ${2:height}, ${3:fullscreen}, ${4:preferredRefreshRate});",
    "description": "Switches the screen resolution.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Screen.SetResolution.html",
    "type": "method"
  },
  {
    "snippet": "Screen.SetResolution(${1:width}, ${2:height}, ${3:fullscreenMode}, ${4:preferredRefreshRate});",
    "description": "Switches the screen resolution.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Screen.SetResolution.html",
    "type": "method"
  },
  {
    "snippet": "ScreenCapture.CaptureScreenshot(${1:filename}, ${2:superSize});",
    "description": "Captures a screenshot at path filename as a PNG file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScreenCapture.CaptureScreenshot.html",
    "type": "method"
  },
  {
    "snippet": "ScreenCapture.CaptureScreenshot(${1:filename}, ${2:stereoCaptureMode});",
    "description": "Captures a screenshot at path filename as a PNG file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScreenCapture.CaptureScreenshot.html",
    "type": "method"
  },
  {
    "snippet": "ScreenCapture.CaptureScreenshotAsTexture(${1:superSize});",
    "description": "Captures a screenshot of the game view into a Texture2D object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScreenCapture.CaptureScreenshotAsTexture.html",
    "type": "method"
  },
  {
    "snippet": "ScreenCapture.CaptureScreenshotAsTexture(${1:stereoCaptureMode});",
    "description": "Captures a screenshot of the game view into a Texture2D object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScreenCapture.CaptureScreenshotAsTexture.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableObject.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableObject.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableObject.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Shader.DisableKeyword(${1:keyword});",
    "description": "Unset a global shader keyword.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.DisableKeyword.html",
    "type": "method"
  },
  {
    "snippet": "Shader.EnableKeyword(${1:keyword});",
    "description": "Set a global shader keyword.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.EnableKeyword.html",
    "type": "method"
  },
  {
    "snippet": "Shader.Find(${1:name});",
    "description": "Finds a shader with the given name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.Find.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalColor(${1:name});",
    "description": "Gets a global color property for all shaders previously set using SetGlobalColor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalColor.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalColor(${1:nameID});",
    "description": "Gets a global color property for all shaders previously set using SetGlobalColor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalColor.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalFloat(${1:name});",
    "description": "Gets a global float property for all shaders previously set using SetGlobalFloat.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalFloat.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalFloat(${1:nameID});",
    "description": "Gets a global float property for all shaders previously set using SetGlobalFloat.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalFloat.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalFloatArray(${1:name});",
    "description": "Gets a global float array for all shaders previously set using SetGlobalFloatArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalFloatArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalFloatArray(${1:nameID});",
    "description": "Gets a global float array for all shaders previously set using SetGlobalFloatArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalFloatArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalInt(${1:name});",
    "description": "Gets a global int property for all shaders previously set using SetGlobalInt.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalInt.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalInt(${1:nameID});",
    "description": "Gets a global int property for all shaders previously set using SetGlobalInt.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalInt.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalMatrix(${1:name});",
    "description": "Gets a global matrix property for all shaders previously set using SetGlobalMatrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalMatrix.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalMatrix(${1:nameID});",
    "description": "Gets a global matrix property for all shaders previously set using SetGlobalMatrix.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalMatrix.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalMatrixArray(${1:name});",
    "description": "Gets a global matrix array for all shaders previously set using SetGlobalMatrixArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalMatrixArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalMatrixArray(${1:nameID});",
    "description": "Gets a global matrix array for all shaders previously set using SetGlobalMatrixArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalMatrixArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalTexture(${1:name});",
    "description": "Gets a global texture property for all shaders previously set using SetGlobalTexture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalTexture.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalTexture(${1:nameID});",
    "description": "Gets a global texture property for all shaders previously set using SetGlobalTexture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalTexture.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalVector(${1:name});",
    "description": "Gets a global vector property for all shaders previously set using SetGlobalVector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalVector.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalVector(${1:nameID});",
    "description": "Gets a global vector property for all shaders previously set using SetGlobalVector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalVector.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalVectorArray(${1:name});",
    "description": "Gets a global vector array for all shaders previously set using SetGlobalVectorArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalVectorArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.GetGlobalVectorArray(${1:nameID});",
    "description": "Gets a global vector array for all shaders previously set using SetGlobalVectorArray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.GetGlobalVectorArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.IsKeywordEnabled(${1:keyword});",
    "description": "Is global shader keyword enabled?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.IsKeywordEnabled.html",
    "type": "method"
  },
  {
    "snippet": "Shader.PropertyToID(${1:name});",
    "description": "Gets unique identifier for a shader property name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.PropertyToID.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalBuffer(${1:name}, ${2:value});",
    "description": "Sets a global compute buffer property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalBuffer.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalBuffer(${1:nameID}, ${2:value});",
    "description": "Sets a global compute buffer property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalBuffer.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalColor(${1:name}, ${2:value});",
    "description": "Sets a global color property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalColor.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalColor(${1:nameID}, ${2:value});",
    "description": "Sets a global color property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalColor.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalFloat(${1:name}, ${2:value});",
    "description": "Sets a global float property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalFloat.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalFloat(${1:nameID}, ${2:value});",
    "description": "Sets a global float property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalFloat.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalFloatArray(${1:name}, ${2:values});",
    "description": "Sets a global float array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalFloatArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalFloatArray(${1:nameID}, ${2:values});",
    "description": "Sets a global float array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalFloatArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalInt(${1:name}, ${2:value});",
    "description": "Sets a global int property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalInt.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalInt(${1:nameID}, ${2:value});",
    "description": "Sets a global int property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalInt.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalMatrix(${1:name}, ${2:value});",
    "description": "Sets a global matrix property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalMatrix.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalMatrix(${1:nameID}, ${2:value});",
    "description": "Sets a global matrix property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalMatrix.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalMatrixArray(${1:name}, ${2:values});",
    "description": "Sets a global matrix array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalMatrixArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalMatrixArray(${1:nameID}, ${2:values});",
    "description": "Sets a global matrix array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalMatrixArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalTexture(${1:name}, ${2:value});",
    "description": "Sets a global texture property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalTexture.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalTexture(${1:nameID}, ${2:value});",
    "description": "Sets a global texture property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalTexture.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalVector(${1:name}, ${2:value});",
    "description": "Sets a global vector property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalVector.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalVector(${1:nameID}, ${2:value});",
    "description": "Sets a global vector property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalVector.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalVectorArray(${1:name}, ${2:values});",
    "description": "Sets a global vector array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalVectorArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.SetGlobalVectorArray(${1:nameID}, ${2:values});",
    "description": "Sets a global vector array property for all shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.SetGlobalVectorArray.html",
    "type": "method"
  },
  {
    "snippet": "Shader.WarmupAllShaders();",
    "description": "Fully load all shaders to prevent future performance hiccups.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Shader.WarmupAllShaders.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderVariantCollection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SkinnedMeshRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Skybox.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Social.CreateAchievement();",
    "description": "Create an IAchievement instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Social.CreateAchievement.html",
    "type": "method"
  },
  {
    "snippet": "Social.CreateLeaderboard();",
    "description": "Create an ILeaderboard instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Social.CreateLeaderboard.html",
    "type": "method"
  },
  {
    "snippet": "Social.ShowAchievementsUI();",
    "description": "Show a default/system view of the games achievements.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Social.ShowAchievementsUI.html",
    "type": "method"
  },
  {
    "snippet": "Social.ShowLeaderboardUI();",
    "description": "Show a default/system view of the games leaderboards.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Social.ShowLeaderboardUI.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "SparseTexture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SphereCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpringJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot}, ${4:pixelsPerUnit}, ${5:extrude});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot}, ${4:pixelsPerUnit}, ${5:extrude}, ${6:meshType});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot}, ${4:pixelsPerUnit}, ${5:extrude}, ${6:meshType}, ${7:border}, ${8:generateFallbackPhysicsShape});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot}, ${4:pixelsPerUnit}, ${5:extrude}, ${6:meshType}, ${7:border});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "Sprite.Create(${1:texture}, ${2:rect}, ${3:pivot}, ${4:pixelsPerUnit});",
    "description": "Create a new Sprite object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprite.Create.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteMask.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "StateMachineBehaviour.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "StaticBatchingUtility.Combine(${1:staticBatchRoot});",
    "description": "\n          StaticBatchingUtility.Combine prepares all children of the staticBatchRoot for static batching.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticBatchingUtility.Combine.html",
    "type": "method"
  },
  {
    "snippet": "StaticBatchingUtility.Combine(${1:gos}, ${2:staticBatchRoot});",
    "description": "\n          StaticBatchingUtility.Combine prepares all children of the staticBatchRoot for static batching.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticBatchingUtility.Combine.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StreamingController.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SurfaceEffector2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SystemInfo.IsFormatSupported();",
    "description": "Verifies that the specified graphics format is supported for the specified usage.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SystemInfo.IsFormatSupported.html",
    "type": "method"
  },
  {
    "snippet": "SystemInfo.SupportsBlendingOnRenderTextureFormat(${1:format});",
    "description": "Is blending supported on render texture format?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SystemInfo.SupportsBlendingOnRenderTextureFormat.html",
    "type": "method"
  },
  {
    "snippet": "SystemInfo.SupportsRenderTextureFormat(${1:format});",
    "description": "Is render texture format supported?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SystemInfo.SupportsRenderTextureFormat.html",
    "type": "method"
  },
  {
    "snippet": "SystemInfo.SupportsTextureFormat(${1:format});",
    "description": "Is texture format supported on this device?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SystemInfo.SupportsTextureFormat.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TargetJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Terrain.CreateTerrainGameObject(${1:assignTerrain});",
    "description": "Creates a Terrain including collider from TerrainData.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Terrain.CreateTerrainGameObject.html",
    "type": "method"
  },
  {
    "snippet": "Terrain.SetConnectivityDirty();",
    "description": "Marks the current connectivity status as invalid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Terrain.SetConnectivityDirty.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainData.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainExtensions.UpdateGIMaterials(${1:terrain});",
    "description": "Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainExtensions.UpdateGIMaterials.html",
    "type": "method"
  },
  {
    "snippet": "TerrainExtensions.UpdateGIMaterials(${1:terrain}, ${2:x}, ${3:y}, ${4:width}, ${5:height});",
    "description": "Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainExtensions.UpdateGIMaterials.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextMesh.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "Texture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "Texture2D.CreateExternalTexture(${1:width}, ${2:height}, ${3:format}, ${4:mipChain}, ${5:linear}, ${6:nativeTex});",
    "description": "Creates Unity Texture out of externally created native texture object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture2D.CreateExternalTexture.html",
    "type": "method"
  },
  {
    "snippet": "Texture2D.GenerateAtlas();",
    "description": "Packs a set of rectangles into a square atlas, with optional padding between rectangles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture2D.GenerateAtlas.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "Texture2DArray.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "Texture3D.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "TouchScreenKeyboard.Open(${1:text}, ${2:keyboardType}, ${3:autocorrection}, ${4:multiline}, ${5:secure}, ${6:alert}, ${7:textPlaceholder}, ${8:characterLimit});",
    "description": "Opens the native keyboard provided by OS on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TouchScreenKeyboard.Open.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrailRenderer.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Transform.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Transform.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Transform.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Transform.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Tree.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Tree.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tree.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tree.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Angle(${1:from}, ${2:to});",
    "description": "Returns the unsigned angle in degrees between from and to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Angle.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.ClampMagnitude(${1:vector}, ${2:maxLength});",
    "description": "Returns a copy of vector with its magnitude clamped to maxLength.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.ClampMagnitude.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Distance(${1:a}, ${2:b});",
    "description": "Returns the distance between a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Dot(${1:lhs}, ${2:rhs});",
    "description": "Dot Product of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Dot.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between vectors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between vectors a and b by t.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Max(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the largest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Max.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Min(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the smallest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Min.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.MoveTowards(${1:current}, ${2:target}, ${3:maxDistanceDelta});",
    "description": "Moves a point current towards target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.MoveTowards.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Perpendicular(${1:inDirection});",
    "description": "Returns the 2D vector perpendicular to this 2D vector. The result is always rotated 90-degrees in a counter-clockwise direction for a 2D coordinate system where the positive Y axis goes up.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Perpendicular.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Reflect(${1:inDirection}, ${2:inNormal});",
    "description": "Reflects a vector off the vector defined by a normal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Reflect.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Scale(${1:a}, ${2:b});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.Scale(${1:scale});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.SignedAngle(${1:from}, ${2:to});",
    "description": "Returns the signed angle in degrees between from and to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.SignedAngle.html",
    "type": "method"
  },
  {
    "snippet": "Vector2.SmoothDamp(${1:current}, ${2:target}, ${3:currentVelocity}, ${4:smoothTime}, ${5:maxSpeed}, ${6:deltaTime});",
    "description": "Gradually changes a vector towards a desired goal over time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2.SmoothDamp.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.CeilToInt(${1:v});",
    "description": "Converts a  Vector2 to a Vector2Int by doing a Ceiling to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.CeilToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.Distance(${1:a}, ${2:b});",
    "description": "Returns the distance between a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.FloorToInt(${1:v});",
    "description": "Converts a Vector2 to a Vector2Int by doing a Floor to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.FloorToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.Max(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the largest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.Max.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.Min(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the smallest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.Min.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.RoundToInt(${1:v});",
    "description": "Converts a  Vector2 to a Vector2Int by doing a Round to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.RoundToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.Scale(${1:a}, ${2:b});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector2Int.Scale(${1:scale});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector2Int.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Angle(${1:from}, ${2:to});",
    "description": "Returns the angle in degrees between from and to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Angle.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.ClampMagnitude(${1:vector}, ${2:maxLength});",
    "description": "Returns a copy of vector with its magnitude clamped to maxLength.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.ClampMagnitude.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Cross(${1:lhs}, ${2:rhs});",
    "description": "Cross Product of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Cross.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Distance(${1:a}, ${2:b});",
    "description": "Returns the distance between a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Dot(${1:lhs}, ${2:rhs});",
    "description": "Dot Product of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Dot.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Max(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the largest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Max.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Min(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the smallest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Min.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.MoveTowards(${1:current}, ${2:target}, ${3:maxDistanceDelta});",
    "description": "Calculate a position between the points specified by current and target, moving no farther than the distance specified by maxDistanceDelta.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.MoveTowards.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Normalize(${1:value});",
    "description": "Makes this vector have a magnitude of 1.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Normalize.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.OrthoNormalize(${1:normal}, ${2:tangent});",
    "description": "Makes vectors normalized and orthogonal to each other.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.OrthoNormalize.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.OrthoNormalize(${1:normal}, ${2:tangent}, ${3:binormal});",
    "description": "Makes vectors normalized and orthogonal to each other.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.OrthoNormalize.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Project(${1:vector}, ${2:onNormal});",
    "description": "Projects a vector onto another vector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Project.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.ProjectOnPlane(${1:vector}, ${2:planeNormal});",
    "description": "Projects a vector onto a plane defined by a normal orthogonal to the plane.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.ProjectOnPlane.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Reflect(${1:inDirection}, ${2:inNormal});",
    "description": "Reflects a vector off the plane defined by a normal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Reflect.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.RotateTowards(${1:current}, ${2:target}, ${3:maxRadiansDelta}, ${4:maxMagnitudeDelta});",
    "description": "Rotates a vector current towards target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.RotateTowards.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Scale(${1:a}, ${2:b});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Scale(${1:scale});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.SignedAngle(${1:from}, ${2:to}, ${3:axis});",
    "description": "Returns the signed angle in degrees between from and to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.SignedAngle.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.Slerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Spherically interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.Slerp.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.SlerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Spherically interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.SlerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Vector3.SmoothDamp(${1:current}, ${2:target}, ${3:currentVelocity}, ${4:smoothTime}, ${5:maxSpeed}, ${6:deltaTime});",
    "description": "Gradually changes a vector towards a desired goal over time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.CeilToInt(${1:v});",
    "description": "Converts a  Vector3 to a Vector3Int by doing a Ceiling to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.CeilToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.Distance(${1:a}, ${2:b});",
    "description": "Returns the distance between a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.FloorToInt(${1:v});",
    "description": "Converts a  Vector3 to a Vector3Int by doing a Floor to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.FloorToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.Max(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the largest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.Max.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.Min(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the smallest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.Min.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.RoundToInt(${1:v});",
    "description": "Converts a  Vector3 to a Vector3Int by doing a Round to each value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.RoundToInt.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.Scale(${1:a}, ${2:b});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector3Int.Scale(${1:scale});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector3Int.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Distance(${1:a}, ${2:b});",
    "description": "Returns the distance between a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Distance.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Dot(${1:a}, ${2:b});",
    "description": "Dot Product of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Dot.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Lerp(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Lerp.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.LerpUnclamped(${1:a}, ${2:b}, ${3:t});",
    "description": "Linearly interpolates between two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.LerpUnclamped.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Max(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the largest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Max.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Min(${1:lhs}, ${2:rhs});",
    "description": "Returns a vector that is made from the smallest components of two vectors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Min.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.MoveTowards(${1:current}, ${2:target}, ${3:maxDistanceDelta});",
    "description": "Moves a point current towards target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.MoveTowards.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Normalize();",
    "description": "",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Normalize.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Project(${1:a}, ${2:b});",
    "description": "Projects a vector onto another vector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Project.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Scale(${1:a}, ${2:b});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Scale.html",
    "type": "method"
  },
  {
    "snippet": "Vector4.Scale(${1:scale});",
    "description": "Multiplies two vectors component-wise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Vector4.Scale.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.SetGlobalAnisotropicFilteringLimits(${1:forcedMin}, ${2:globalMax});",
    "description": "Sets Anisotropic limits.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetGlobalAnisotropicFilteringLimits.html",
    "type": "method"
  },
  {
    "snippet": "WebCamTexture.SetStreamingTextureMaterialDebugProperties();",
    "description": "Uploads additional debug information to materials using textures set to stream mip maps.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Texture.SetStreamingTextureMaterialDebugProperties.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelCollider.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WheelJoint2D.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "WindZone.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AdvertisementSettings.GetGameId(${1:platform});",
    "description": "Gets the game identifier specified for a runtime platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.AdvertisementSettings.GetGameId.html",
    "type": "method"
  },
  {
    "snippet": "AdvertisementSettings.GetPlatformGameId(${1:platformName});",
    "description": "Gets the game identifier specified for a runtime platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.AdvertisementSettings.GetPlatformGameId.html",
    "type": "method"
  },
  {
    "snippet": "AdvertisementSettings.SetGameId(${1:platform}, ${2:gameId});",
    "description": "Sets the game identifier for the specified platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.AdvertisementSettings.SetGameId.html",
    "type": "method"
  },
  {
    "snippet": "AdvertisementSettings.SetPlatformGameId(${1:platformName}, ${2:gameId});",
    "description": "Sets the game identifier for the specified platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Advertisements.AdvertisementSettings.SetPlatformGameId.html",
    "type": "method"
  },
  {
    "snippet": "NavMeshEditorHelpers.DrawBuildDebug(${1:navMeshData}, ${2:flags});",
    "description": "Displays in the Editor the precise intermediate data used during the build process of the specified NavMesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AI.NavMeshEditorHelpers.DrawBuildDebug.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorController.CreateAnimatorControllerAtPath(${1:path});",
    "description": "Creates an AnimatorController at the given path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimatorController.CreateAnimatorControllerAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorController.CreateAnimatorControllerAtPathWithClip(${1:path}, ${2:clip});",
    "description": "Creates an AnimatorController at the given path, and automatically create an AnimatorLayer  with an AnimatorStateMachine that will add a State with the AnimationClip in it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimatorController.CreateAnimatorControllerAtPathWithClip.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorController.CreateStateMachineBehaviour(${1:script});",
    "description": "This function will create a StateMachineBehaviour instance based on the class define in this script.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimatorController.CreateStateMachineBehaviour.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorController.FindStateMachineBehaviourContext(${1:behaviour});",
    "description": "Use this function to retrieve the owner of this behaviour.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Animations.AnimatorController.FindStateMachineBehaviourContext.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorState.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateMachine.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorStateTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransition.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AnimatorTransitionBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BlendTree.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectRecorder.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.ArchiveAndCompress(${1:resourceFiles}, ${2:outputBundlePath}, ${3:compression});",
    "description": "Combines resource files into a single archive and compresses them based on the passed in options.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.ArchiveAndCompress.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.CalculateBuildUsageTags(${1:objectIDs}, ${2:dependentObjectIDs}, ${3:globalUsage}, ${4:usageSet});",
    "description": "Calculates the build usage of a set of objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.CalculateBuildUsageTags.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.CalculateBuildUsageTags(${1:objectIDs}, ${2:dependentObjectIDs}, ${3:globalUsage}, ${4:usageSet}, ${5:usageCache});",
    "description": "Calculates the build usage of a set of objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.CalculateBuildUsageTags.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GenerateAssetBundleBuilds();",
    "description": "Returns an array of AssetBundleBuild structs that detail the current asset bundle layout set in the AssetDatabase.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GenerateAssetBundleBuilds.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GetPlayerDependenciesForObject(${1:objectID}, ${2:target}, ${3:typeDB});",
    "description": "Returns a list of objects referenced by an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GetPlayerDependenciesForObject.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GetPlayerDependenciesForObjects(${1:objectIDs}, ${2:target}, ${3:typeDB});",
    "description": "Returns a list of objects referenced by a set of objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GetPlayerDependenciesForObjects.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GetPlayerObjectIdentifiersInAsset(${1:asset}, ${2:target});",
    "description": "Returns a list of objects directly contained inside of an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInAsset.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GetTypeForObject(${1:objectID});",
    "description": "Gets the type of an object specified by an ObjectIdentifier.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GetTypeForObject.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.GetTypeForObjects(${1:objectIDs});",
    "description": "Gets the types of all the objects specified by ObjectIdentifiers.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.GetTypeForObjects.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.PrepareScene(${1:scenePath}, ${2:settings}, ${3:usageSet}, ${4:outputFolder});",
    "description": "Calculates the Scene dependency information and writes a post processed Scene to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.PrepareScene.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.PrepareScene(${1:scenePath}, ${2:settings}, ${3:usageSet}, ${4:usageCache}, ${5:outputFolder});",
    "description": "Calculates the Scene dependency information and writes a post processed Scene to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.PrepareScene.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.WriteSceneSerializedFile(${1:outputFolder}, ${2:scenePath}, ${3:processedScene}, ${4:writeCommand}, ${5:settings}, ${6:globalUsage}, ${7:usageSet}, ${8:referenceMap});",
    "description": "Writes Scene objects to a serialized file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.WriteSceneSerializedFile.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.WriteSceneSerializedFile(${1:outputFolder}, ${2:scenePath}, ${3:processedScene}, ${4:writeCommand}, ${5:settings}, ${6:globalUsage}, ${7:usageSet}, ${8:referenceMap}, ${9:preloadInfo});",
    "description": "Writes Scene objects to a serialized file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.WriteSceneSerializedFile.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.WriteSceneSerializedFile(${1:outputFolder}, ${2:scenePath}, ${3:processedScene}, ${4:writeCommand}, ${5:settings}, ${6:globalUsage}, ${7:usageSet}, ${8:referenceMap}, ${9:preloadInfo}, ${10:sceneBundleInfo});",
    "description": "Writes Scene objects to a serialized file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.WriteSceneSerializedFile.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.WriteSerializedFile(${1:outputFolder}, ${2:writeCommand}, ${3:settings}, ${4:globalUsage}, ${5:usageSet}, ${6:referenceMap});",
    "description": "Writes objects to a serialized file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.WriteSerializedFile.html",
    "type": "method"
  },
  {
    "snippet": "ContentBuildInterface.WriteSerializedFile(${1:outputFolder}, ${2:writeCommand}, ${3:settings}, ${4:globalUsage}, ${5:usageSet}, ${6:referenceMap}, ${7:bundleInfo});",
    "description": "Writes objects to a serialized file on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Content.ContentBuildInterface.WriteSerializedFile.html",
    "type": "method"
  },
  {
    "snippet": "PlayerBuildInterface.CompilePlayerScripts(${1:input}, ${2:outputFolder});",
    "description": "Compiles user scripts into one or more assemblies.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Build.Player.PlayerBuildInterface.CompilePlayerScripts.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildReport.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "StrippingInfo.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetAssemblies(${1:assembliesType});",
    "description": "Get all script assemblies compiled by Unity filtered by AssembliesType.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetAssemblies.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyName(${1:assemblyName});",
    "description": "Returns the assembly definition file path from an assembly name. Returns null if there is no assembly definition file for the given assembly name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyName.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetAssemblyDefinitionFilePathFromScriptPath(${1:sourceFilePath});",
    "description": "Returns the assembly definition file path for a source (script) path. Returns null if there is no assembly definition file for the given script path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromScriptPath.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetAssemblyDefinitionPlatforms();",
    "description": "Returns all the platforms supported by assembly definition files.See Also: AssemblyDefinitionPlatform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetAssemblyDefinitionPlatforms.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetAssemblyNameFromScriptPath(${1:sourceFilePath});",
    "description": "Returns the assembly name for a source (script) path. Returns null if there is no assembly name for the given script path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetAssemblyNameFromScriptPath.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetPrecompiledAssemblyNames();",
    "description": "Get all precompiled assembly names.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetPrecompiledAssemblyNames.html",
    "type": "method"
  },
  {
    "snippet": "CompilationPipeline.GetPrecompiledAssemblyPathFromAssemblyName(${1:assemblyName});",
    "description": "Returns the Assembly file path from an assembly name. Returns null if there is no Precompiled Assembly name match.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Compilation.CompilationPipeline.GetPrecompiledAssemblyPathFromAssemblyName.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.AddVoidPersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Adds a persistent, preset call to the listener.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.AddVoidPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RegisterVoidPersistentListener(${1:unityEvent}, ${2:index}, ${3:call});",
    "description": "Modifies the event at the given index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RegisterVoidPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:index});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.RemovePersistentListener(${1:unityEvent}, ${2:call});",
    "description": "Removes the given function from the event.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.RemovePersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "UnityEventTools.UnregisterPersistentListener(${1:unityEvent}, ${2:index});",
    "description": "Unregisters the given listener at the specified index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Events.UnityEventTools.UnregisterPersistentListener.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EventSystemEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EventTriggerEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporterEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScriptedImporterEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUI.AttachToPlayerDropdown(${1:rect}, ${2:state}, ${3:style});",
    "description": "Display a drop-down button and menu for the user to choose and establish a connection to a Player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Networking.PlayerConnection.EditorGUI.AttachToPlayerDropdown.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUILayout.AttachToPlayerDropdown(${1:state}, ${2:style});",
    "description": "Display a drop-down button and menu for the user to choose and establish a connection to a Player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Networking.PlayerConnection.EditorGUILayout.AttachToPlayerDropdown.html",
    "type": "method"
  },
  {
    "snippet": "PrefabStageUtility.GetCurrentPrefabStage();",
    "description": "Get the current Prefab stage, or null if there is none.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.SceneManagement.PrefabStageUtility.GetCurrentPrefabStage.html",
    "type": "method"
  },
  {
    "snippet": "PrefabStageUtility.GetPrefabStage(${1:gameObject});",
    "description": "Get the Prefab stage which contains the given GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.SceneManagement.PrefabStageUtility.GetPrefabStage.html",
    "type": "method"
  },
  {
    "snippet": "TerrainPaintUtilityEditor.DrawBrushPreview(${1:heightmapPC}, ${2:previewTexture}, ${3:brushTexture}, ${4:brushXform}, ${5:proceduralMaterial}, ${6:materialPassIndex});",
    "description": "Draws a Terrain brush preview mesh from a heightmap PaintContext using the provided procedural material.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainPaintUtilityEditor.DrawBrushPreview.html",
    "type": "method"
  },
  {
    "snippet": "TerrainPaintUtilityEditor.GetDefaultBrushPreviewMaterial();",
    "description": "Returns the default brush preview material.  This material supports procedural mesh generation for use with DrawBrushPreview.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainPaintUtilityEditor.GetDefaultBrushPreviewMaterial.html",
    "type": "method"
  },
  {
    "snippet": "TerrainPaintUtilityEditor.ShowDefaultPreviewBrush(${1:terrain}, ${2:brushTexture}, ${3:brushSize});",
    "description": "Helper function to display a default preview brush with no rotation or custom materials.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.TerrainAPI.TerrainPaintUtilityEditor.ShowDefaultPreviewBrush.html",
    "type": "method"
  },
  {
    "snippet": "SpriteEditorExtension.GetSpriteID(${1:sprite});",
    "description": "Gets the Sprite's GUID.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteEditorExtension.GetSpriteID.html",
    "type": "method"
  },
  {
    "snippet": "SpriteEditorExtension.SetSpriteID(${1:sprite}, ${2:guid});",
    "description": "Sets a Sprite's Global Unique Identifier (GUID) for easy identification later.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.U2D.SpriteEditorExtension.SetSpriteID.html",
    "type": "method"
  },
  {
    "snippet": "GraphElementScopeExtensions.GetContainingScope(${1:element});",
    "description": "Returns the scope containing the specified GraphElement.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.GraphElementScopeExtensions.GetContainingScope.html",
    "type": "method"
  },
  {
    "snippet": "GraphView.CalculateFrameTransform(${1:rectToFit}, ${2:clientRect}, ${3:border}, ${4:frameTranslation}, ${5:frameScaling});",
    "description": "Calculate the view transform based on zoom level and the size of the window or parent.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.GraphView.CalculateFrameTransform.html",
    "type": "method"
  },
  {
    "snippet": "IconBadge.CreateComment(${1:message});",
    "description": "Creates an IconBadge with the \"comment\" visual style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.IconBadge.CreateComment.html",
    "type": "method"
  },
  {
    "snippet": "IconBadge.CreateError(${1:message});",
    "description": "Creates an IconBadge with the \"error\" visual style.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.IconBadge.CreateError.html",
    "type": "method"
  },
  {
    "snippet": "Port.Create(${1:orientation}, ${2:direction}, ${3:capacity}, ${4:type});",
    "description": "Factory method for creating a port.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.Port.Create.html",
    "type": "method"
  },
  {
    "snippet": "Port.Create();",
    "description": "Factory method for creating a port.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.Port.Create.html",
    "type": "method"
  },
  {
    "snippet": "RectUtils.Encompass(${1:a}, ${2:b});",
    "description": "Create rectangle that encompasses two rectangles.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.RectUtils.Encompass.html",
    "type": "method"
  },
  {
    "snippet": "RectUtils.Inflate(${1:a}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom});",
    "description": "Creates and returns an enlarged copy of the specified rectangle. The copy is enlarged by the specified amounts.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.RectUtils.Inflate.html",
    "type": "method"
  },
  {
    "snippet": "RectUtils.IntersectsSegment(${1:rect}, ${2:p1}, ${3:p2});",
    "description": "Check if a line segment overlaps a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.RectUtils.IntersectsSegment.html",
    "type": "method"
  },
  {
    "snippet": "SearchWindow.Open(${1:context}, ${2:provider});",
    "description": "Opens the search window above the Graph.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.GraphView.SearchWindow.Open.html",
    "type": "method"
  },
  {
    "snippet": "BindingExtensions.Bind(${1:element}, ${2:obj});",
    "description": "Binds a SerializedObject to fields in the element hierarchy.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.BindingExtensions.Bind.html",
    "type": "method"
  },
  {
    "snippet": "BindingExtensions.BindProperty(${1:field}, ${2:obj});",
    "description": "Binds a property to a field and synchronizes their values. This method finds the property using the field's binding path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.BindingExtensions.BindProperty.html",
    "type": "method"
  },
  {
    "snippet": "BindingExtensions.BindProperty(${1:field}, ${2:property});",
    "description": "Binds a property to a field and synchronizes their values. This method finds the property using the field's binding path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.BindingExtensions.BindProperty.html",
    "type": "method"
  },
  {
    "snippet": "BindingExtensions.Unbind(${1:element});",
    "description": "Disconnects all properties bound to fields in the element's hierarchy.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.BindingExtensions.Unbind.html",
    "type": "method"
  },
  {
    "snippet": "ToolbarMenuElementExtensions.ShowMenu(${1:tbe});",
    "description": "Display the menu for the element.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.ToolbarMenuElementExtensions.ShowMenu.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditorUtility.CreateDefaultCursorStyle(${1:mouseCursor});",
    "description": "Creates a default CursorStyle property from the given MouseCursor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.UIElements.UIElementsEditorUtility.CreateDefaultCursorStyle.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.GetCustomBakeResults(${1:results});",
    "description": "Retrieve the custom bake results.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Lightmapping.GetCustomBakeResults.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.SetCustomBakeInputs(${1:inputData}, ${2:sampleCount});",
    "description": "Set the custom bake inputs.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Experimental.Lightmapping.SetCustomBakeInputs.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "UIElementsEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ArcHandle.DefaultAngleHandleDrawFunction(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "A CapFunction that draws a line terminated with Handles.CylinderHandleCap.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.ArcHandle.DefaultAngleHandleDrawFunction.html",
    "type": "method"
  },
  {
    "snippet": "ArcHandle.DefaultAngleHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.ArcHandle.DefaultAngleHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "ArcHandle.DefaultRadiusHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.ArcHandle.DefaultRadiusHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "BoxBoundsHandle.DefaultMidpointHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "CapsuleBoundsHandle.DefaultMidpointHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "MultiColumnHeaderState.CanOverwriteSerializedFields(${1:source}, ${2:destination});",
    "description": "Checks if the source state can transfer its serialized data to the destination state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.MultiColumnHeaderState.CanOverwriteSerializedFields.html",
    "type": "method"
  },
  {
    "snippet": "MultiColumnHeaderState.OverwriteSerializedFields(${1:source}, ${2:destination});",
    "description": "Overwrites the seralized fields from the source state to the destination state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.MultiColumnHeaderState.OverwriteSerializedFields.html",
    "type": "method"
  },
  {
    "snippet": "PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "SphereBoundsHandle.DefaultMidpointHandleSizeFunction(${1:position});",
    "description": "A SizeFunction that returns a fixed screen-space size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction.html",
    "type": "method"
  },
  {
    "snippet": "TreeView.SetupDepthsFromParentsAndChildren(${1:root});",
    "description": "Utility method using the depth of the input TreeViewItem to set the correct depths for all its descendant TreeViewItems.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.SetupDepthsFromParentsAndChildren.html",
    "type": "method"
  },
  {
    "snippet": "DefaultGUI.BoldLabel(${1:rect}, ${2:label}, ${3:selected}, ${4:focused});",
    "description": "Draws a bold label that have correct text color when selected and/or focused.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.DefaultGUI.BoldLabel.html",
    "type": "method"
  },
  {
    "snippet": "DefaultGUI.BoldLabelRightAligned(${1:rect}, ${2:label}, ${3:selected}, ${4:focused});",
    "description": "Draws a bold right aligned label that have correct text color when selected and/or focused.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.DefaultGUI.BoldLabelRightAligned.html",
    "type": "method"
  },
  {
    "snippet": "DefaultGUI.FoldoutLabel(${1:rect}, ${2:label}, ${3:selected}, ${4:focused});",
    "description": "Draws a foldout label that have correct text color when selected and/or focused.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.DefaultGUI.FoldoutLabel.html",
    "type": "method"
  },
  {
    "snippet": "DefaultGUI.Label(${1:rect}, ${2:label}, ${3:selected}, ${4:focused});",
    "description": "Draws a label that have correct text color when selected and/or focused.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.DefaultGUI.Label.html",
    "type": "method"
  },
  {
    "snippet": "DefaultGUI.LabelRightAligned(${1:rect}, ${2:label}, ${3:selected}, ${4:focused});",
    "description": "Draws a right aligned label that have correct text color when selected and/or focused.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/IMGUI.Controls.TreeView.DefaultGUI.LabelRightAligned.html",
    "type": "method"
  },
  {
    "snippet": "PBXProjectExtensions.AddAppExtension(${1:proj}, ${2:mainTargetGuid}, ${3:name}, ${4:bundleId}, ${5:infoPlistPath});",
    "description": "Creates an app extension.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.Extensions.PBXProjectExtensions.AddAppExtension.html",
    "type": "method"
  },
  {
    "snippet": "PBXProjectExtensions.AddFileToEmbedFrameworks(${1:proj}, ${2:targetGuid}, ${3:fileGuid});",
    "description": "Configures file for embed framework section for the given native target.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.Extensions.PBXProjectExtensions.AddFileToEmbedFrameworks.html",
    "type": "method"
  },
  {
    "snippet": "PBXProjectExtensions.AddWatchApp(${1:proj}, ${2:mainTargetGuid}, ${3:watchExtensionTargetGuid}, ${4:name}, ${5:bundleId}, ${6:infoPlistPath});",
    "description": "Creates a watch application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.Extensions.PBXProjectExtensions.AddWatchApp.html",
    "type": "method"
  },
  {
    "snippet": "PBXProjectExtensions.AddWatchExtension(${1:proj}, ${2:mainTarget}, ${3:name}, ${4:bundleId}, ${5:infoPlistPath});",
    "description": "Creates a watch extension.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.Extensions.PBXProjectExtensions.AddWatchExtension.html",
    "type": "method"
  },
  {
    "snippet": "PBXCapabilityType.StringToPBXCapabilityType(${1:cap});",
    "description": "Convenience method that converts a reverse DNS name(i.e. com.apple.iCloud) to a PBXCapabilityType.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXCapabilityType.StringToPBXCapabilityType.html",
    "type": "method"
  },
  {
    "snippet": "PBXProject.GetPBXProjectPath(${1:buildPath});",
    "description": "Returns the path to PBX project in the given Unity build path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXProject.GetPBXProjectPath.html",
    "type": "method"
  },
  {
    "snippet": "PBXProject.GetUnityTargetName();",
    "description": "Returns the default main target name in Unity project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXProject.GetUnityTargetName.html",
    "type": "method"
  },
  {
    "snippet": "PBXProject.GetUnityTestTargetName();",
    "description": "Returns the default test target name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXProject.GetUnityTestTargetName.html",
    "type": "method"
  },
  {
    "snippet": "PBXProject.IsBuildable(${1:ext});",
    "description": "Checks if a file with the given extension can be built by Xcode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXProject.IsBuildable.html",
    "type": "method"
  },
  {
    "snippet": "PBXProject.IsKnownExtension(${1:ext});",
    "description": "Checks if files with the given extension are known to PBXProject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/iOS.Xcode.PBXProject.IsKnownExtension.html",
    "type": "method"
  },
  {
    "snippet": "MemorySnapshot.RequestNewSnapshot();",
    "description": "Requests a new snapshot from the currently connected target of the profiler. Memory snapshots are supported on IL2CPP and Mono .NET 3.5/4.0 scripting backends, although .NET 3.5 has been deprecated as of 2018.3.\n \nNOTE: Each snapshot consists of approximately one managed object per recorded managed object. Snapshots taken from the editor will contain the objects in all previous snapshots that have not yet been garbage-collected. Therefore, repeated snapshots of the editor may grow exponentially. If you no longer need an old snapshot it is therefore advisable to null all references to it and call GC.Collect() before taking another one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MemoryProfiler.MemorySnapshot.RequestNewSnapshot.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "EditorConnection.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "BuildUtilities.RegisterShouldIncludeInBuildCallback(${1:cb});",
    "description": "Register a callback object for a package.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.BuildUtilities.RegisterShouldIncludeInBuildCallback.html",
    "type": "method"
  },
  {
    "snippet": "Client.Add(${1:packageIdOrName});",
    "description": "Adds a package dependency to the project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.Client.Add.html",
    "type": "method"
  },
  {
    "snippet": "Client.Remove(${1:packageIdOrName});",
    "description": "Removes a previously added package from the project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.Client.Remove.html",
    "type": "method"
  },
  {
    "snippet": "Client.ResetToEditorDefaults();",
    "description": "Resets the list of packages installed for this project to the editor's default configuration. This operation will clear all packages added to the project and keep only the packages set for the current editor default configuration.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.Client.ResetToEditorDefaults.html",
    "type": "method"
  },
  {
    "snippet": "Client.Search(${1:packageIdOrName});",
    "description": "Searches the Unity package registry for the given package.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.Client.Search.html",
    "type": "method"
  },
  {
    "snippet": "Client.SearchAll();",
    "description": "Searches the Unity package registry for all packages compatible with the current Unity version.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PackageManager.Client.SearchAll.html",
    "type": "method"
  },
  {
    "snippet": "Utility.GetAllGraphs();",
    "description": "Returns all existing PlayableGraphs.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Playables.Utility.GetAllGraphs.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "DefaultPresetSelectorReceiver.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Preset.GetDefaultForObject(${1:target});",
    "description": "Returns the current default Preset assigned to the same Object type. Returns null if there is no matching default.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.GetDefaultForObject.html",
    "type": "method"
  },
  {
    "snippet": "Preset.GetDefaultForPreset(${1:preset});",
    "description": "Returns the current default Preset assigned to the same Preset type. Returns null if there is no matching default.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.GetDefaultForPreset.html",
    "type": "method"
  },
  {
    "snippet": "Preset.IsObjectExcludedFromDefaultPresets(${1:target});",
    "description": "Returns true if this Object cannot have a default Preset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.IsObjectExcludedFromDefaultPresets.html",
    "type": "method"
  },
  {
    "snippet": "Preset.IsObjectExcludedFromPresets(${1:reference});",
    "description": "Returns true if this Object is not available in the Preset system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.IsObjectExcludedFromPresets.html",
    "type": "method"
  },
  {
    "snippet": "Preset.IsPresetExcludedFromDefaultPresets(${1:preset});",
    "description": "Returns true if this Preset cannot be set as the default.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.IsPresetExcludedFromDefaultPresets.html",
    "type": "method"
  },
  {
    "snippet": "Preset.RemoveFromDefault(${1:preset});",
    "description": "Remove the Preset type from having default values in the project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.RemoveFromDefault.html",
    "type": "method"
  },
  {
    "snippet": "Preset.SetAsDefault(${1:preset});",
    "description": "Sets the Preset as the default for its target type in the project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.Preset.SetAsDefault.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelector.DrawPresetButton(${1:rectangle}, ${2:targets});",
    "description": "Draw a Preset button that opens the default PresetSelector using the targets array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.PresetSelector.DrawPresetButton.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelector.ShowSelector(${1:targets}, ${2:currentSelection}, ${3:createNewAllowed});",
    "description": "Opens a modal window for selecting a Preset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.PresetSelector.ShowSelector.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelector.ShowSelector(${1:target}, ${2:currentSelection}, ${3:createNewAllowed}, ${4:eventReceiver});",
    "description": "Opens a modal window for selecting a Preset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Presets.PresetSelector.ShowSelector.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PresetSelectorReceiver.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFlagsExtensions.IsDontDestroyOnLoad(${1:flags});",
    "description": "True if the object is marked as DontDestroyOnLoad; otherwise false.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.ObjectFlagsExtensions.IsDontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFlagsExtensions.IsManager(${1:flags});",
    "description": "True if the object is a manager, otherwise false.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.ObjectFlagsExtensions.IsManager.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFlagsExtensions.IsPersistent(${1:flags});",
    "description": "True if the object is marked as Persistent, otherwise false.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.ObjectFlagsExtensions.IsPersistent.html",
    "type": "method"
  },
  {
    "snippet": "PackedMemorySnapshot.Convert(${1:snapshot}, ${2:writePath});",
    "description": "Converts the specified old format PackedMemorySnapshot object to a new PackedMemorySnapshot format object and writes it to the location and file name specified the the write path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.PackedMemorySnapshot.Convert.html",
    "type": "method"
  },
  {
    "snippet": "PackedMemorySnapshot.Load(${1:path});",
    "description": "Load memory snapshot from given file path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.PackedMemorySnapshot.Load.html",
    "type": "method"
  },
  {
    "snippet": "PackedMemorySnapshot.Save(${1:snapshot}, ${2:writePath});",
    "description": "Copy the memory snapshot file to the given file path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.PackedMemorySnapshot.Save.html",
    "type": "method"
  },
  {
    "snippet": "TypeFlagsExtensions.ArrayRank(${1:flags});",
    "description": "If the type is an array type, retrieves the array rank of the type flags.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.TypeFlagsExtensions.ArrayRank.html",
    "type": "method"
  },
  {
    "snippet": "TypeFlagsExtensions.IsArray(${1:flags});",
    "description": "Returns whether the flag describes an array type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.TypeFlagsExtensions.IsArray.html",
    "type": "method"
  },
  {
    "snippet": "TypeFlagsExtensions.IsValueType(${1:flags});",
    "description": "Returns whether the type describes a value type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Profiling.Memory.Experimental.TypeFlagsExtensions.IsValueType.html",
    "type": "method"
  },
  {
    "snippet": "EditorGraphicsSettings.GetTierSettings(${1:target}, ${2:tier});",
    "description": "Returns TierSettings for the target build platform and shader hardware tier.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.EditorGraphicsSettings.GetTierSettings.html",
    "type": "method"
  },
  {
    "snippet": "EditorGraphicsSettings.SetTierSettings(${1:target}, ${2:tier}, ${3:settings});",
    "description": "Allows you to set the PlatformShaderSettings for the specified platform and shader hardware tier.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Rendering.EditorGraphicsSettings.SetTierSettings.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.ClosePreviewScene(${1:scene});",
    "description": "Closes a preview Scene created by NewPreviewScene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.ClosePreviewScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.CloseScene(${1:scene}, ${2:removeScene});",
    "description": "Close the Scene. If removeScene flag is true, the closed Scene will also be removed from EditorSceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.CloseScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.DetectCrossSceneReferences(${1:scene});",
    "description": "Detects cross-Scene references in a Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.DetectCrossSceneReferences.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.EnsureUntitledSceneHasBeenSaved(${1:dialogContent});",
    "description": "Shows a save dialog if an Untitled Scene exists in the current Scene manager setup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.EnsureUntitledSceneHasBeenSaved.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.GetSceneManagerSetup();",
    "description": "Returns the current setup of the SceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.GetSceneManagerSetup.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.IsPreviewScene(${1:scene});",
    "description": "Is the Scene a preview Scene?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.IsPreviewScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.IsPreviewSceneObject(${1:obj});",
    "description": "Is this object part of a preview Scene?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.IsPreviewSceneObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.LoadSceneAsyncInPlayMode(${1:path}, ${2:parameters});",
    "description": "This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Build Settings Scene list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.LoadSceneAsyncInPlayMode.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.LoadSceneInPlayMode(${1:path}, ${2:parameters});",
    "description": "This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Build Settings Scene list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.LoadSceneInPlayMode.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.MarkAllScenesDirty();",
    "description": "Mark all the loaded Scenes as modified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.MarkAllScenesDirty.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.MarkSceneDirty(${1:scene});",
    "description": "Mark the specified Scene as modified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.MarkSceneDirty.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.MoveSceneAfter(${1:src}, ${2:dst});",
    "description": "Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes after the destination Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.MoveSceneAfter.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.MoveSceneBefore(${1:src}, ${2:dst});",
    "description": "Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes before the destination Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.MoveSceneBefore.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.NewPreviewScene();",
    "description": "Creates a new preview Scene.  Any object added to a preview Scene will only be rendered in that Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.NewPreviewScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.NewScene(${1:setup}, ${2:mode});",
    "description": "Create a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.NewScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.OpenScene(${1:scenePath}, ${2:mode});",
    "description": "Open a Scene in the Editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.OpenScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.RestoreSceneManagerSetup(${1:value});",
    "description": "Restore the setup of the SceneManager.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.RestoreSceneManagerSetup.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo();",
    "description": "Asks you if you want to save the modified Scene or Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.SaveModifiedScenesIfUserWantsTo(${1:scenes});",
    "description": "Asks whether the modfied input Scenes should be saved.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.SaveModifiedScenesIfUserWantsTo.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.SaveOpenScenes();",
    "description": "Save all open Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.SaveOpenScenes.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.SaveScene(${1:scene}, ${2:dstScenePath}, ${3:saveAsCopy});",
    "description": "Save a Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.SaveScene.html",
    "type": "method"
  },
  {
    "snippet": "EditorSceneManager.SaveScenes(${1:scenes});",
    "description": "Save a list of Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.SaveScenes.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GetCurrentStageHandle();",
    "description": "Get the current stage being edited.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GetCurrentStageHandle.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GetMainStageHandle();",
    "description": "Get the main stage which contains all the currently open regular Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GetMainStageHandle.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GetStageHandle(${1:gameObject});",
    "description": "Get the stage in which the given GameObject exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GetStageHandle.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GetStageHandle(${1:scene});",
    "description": "Get the stage in which the given GameObject exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GetStageHandle.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GoBackToPreviousStage();",
    "description": "Navigate the Editor to the previous stage.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GoBackToPreviousStage.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.GoToMainStage();",
    "description": "Navigate the Editor to the main stage.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.GoToMainStage.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.IsGameObjectRenderedByCamera(${1:gameObject}, ${2:camera});",
    "description": "Is the given GameObject rendered by the given Camera?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.IsGameObjectRenderedByCamera.html",
    "type": "method"
  },
  {
    "snippet": "StageUtility.PlaceGameObjectInCurrentStage(${1:gameObject});",
    "description": "Place the given GameObject in the current stage being edited.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneManagement.StageUtility.PlaceGameObjectInCurrentStage.html",
    "type": "method"
  },
  {
    "snippet": "Packer.GetAlphaTexturesForAtlas(${1:atlasName});",
    "description": "Returns all alpha atlas textures generated for the specified atlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.Packer.GetAlphaTexturesForAtlas.html",
    "type": "method"
  },
  {
    "snippet": "Packer.GetAtlasDataForSprite(${1:sprite}, ${2:atlasName}, ${3:atlasTexture});",
    "description": "Returns atlasing data for the specified Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.Packer.GetAtlasDataForSprite.html",
    "type": "method"
  },
  {
    "snippet": "Packer.GetTexturesForAtlas(${1:atlasName});",
    "description": "Returns all atlas textures generated for the specified atlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.Packer.GetTexturesForAtlas.html",
    "type": "method"
  },
  {
    "snippet": "Packer.RebuildAtlasCacheIfNeeded(${1:target}, ${2:displayProgressBar}, ${3:execution});",
    "description": "Rebuilds the Sprite atlas cache.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.Packer.RebuildAtlasCacheIfNeeded.html",
    "type": "method"
  },
  {
    "snippet": "SpriteUtility.GetSpriteTexture(${1:sprite}, ${2:getAtlasData});",
    "description": "Returns the generated Sprite texture. If Sprite is packed, it is possible to query for both source and atlas textures.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.SpriteUtility.GetSpriteTexture.html",
    "type": "method"
  },
  {
    "snippet": "SpriteUtility.GetSpriteUVs(${1:sprite}, ${2:getAtlasData});",
    "description": "Returns the generated Sprite mesh uvs.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Sprites.SpriteUtility.GetSpriteUVs.html",
    "type": "method"
  },
  {
    "snippet": "TimelineEditor.Refresh(${1:reason});",
    "description": "Refreshes the different components affected by the currently inspected TimelineAsset, based on the RefreshReason provided.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Timeline.TimelineEditor.Refresh.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.Add(${1:spriteAtlas}, ${2:objects});",
    "description": "Add an array of Assets to the packable objects list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.Add.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.GetPackables(${1:spriteAtlas});",
    "description": "Return all the current packed packables in the atlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.GetPackables.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.GetPackingSettings(${1:spriteAtlas});",
    "description": "Current SpriteAtlasPackingSettings to use when packing this SpriteAtlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.GetPackingSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.GetPlatformSettings(${1:spriteAtlas}, ${2:buildTarget});",
    "description": "Returns the platform settings of the build target you specify.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.GetPlatformSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.GetTextureSettings(${1:spriteAtlas});",
    "description": "Current SpriteAtlasTextureSettings of the packed texture generated by this SpriteAtlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.GetTextureSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.Remove(${1:spriteAtlas}, ${2:objects});",
    "description": "Remove objects from the atlas's packable objects list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.Remove.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetIncludeInBuild(${1:spriteAtlas}, ${2:value});",
    "description": "Define if this sprite atlas's packed texture is included in the build with the Sprite after packing is done.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetIncludeInBuild.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetIsVariant(${1:spriteAtlas}, ${2:value});",
    "description": "Sets whether this Sprite Atlas is a variant or not.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetIsVariant.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetMasterAtlas(${1:spriteAtlas}, ${2:value});",
    "description": "Set an atlas to be the master atlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetMasterAtlas.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetPackingSettings(${1:spriteAtlas}, ${2:src});",
    "description": "Set the SpriteAtlasPackingSettings to use when packing this SpriteAtlas",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetPackingSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetPlatformSettings(${1:spriteAtlas}, ${2:src});",
    "description": "Set the platform specific settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetPlatformSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetTextureSettings(${1:spriteAtlas}, ${2:src});",
    "description": "Set the SpriteAtlasTextureSettings for the packed texture generated by this SpriteAtlas.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetTextureSettings.html",
    "type": "method"
  },
  {
    "snippet": "SpriteAtlasExtensions.SetVariantScale(${1:spriteAtlas}, ${2:value});",
    "description": "Set the value used to downscale the master's texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/U2D.SpriteAtlasExtensions.SetVariantScale.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "AspectRatioFitterEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ButtonEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CanvasScalerEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ContentSizeFitterEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "DropdownEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GraphicEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridLayoutGroupEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "HorizontalOrVerticalLayoutGroupEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ImageEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "InputFieldEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LayoutElementEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "MaskEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RawImageEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "RectMask2DEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollbarEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ScrollRectEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelectableEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SelfControllerEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "SliderEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TextEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ToggleEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Add(${1:assets}, ${2:recursive});",
    "description": "Adds an assets or list of assets to version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Add.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Add(${1:asset}, ${2:recursive});",
    "description": "Adds an assets or list of assets to version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Add.html",
    "type": "method"
  },
  {
    "snippet": "Provider.AddIsValid(${1:assets});",
    "description": "Given a list of assets this function returns true if Add is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.AddIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetDescription(${1:changeset});",
    "description": "Given a changeset only containing the changeset ID, this will start a task for quering the description of the changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetDescription.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetMove(${1:assets}, ${2:changeset});",
    "description": "Move an asset or list of assets from their current changeset to a new changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetMove.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetMove(${1:asset}, ${2:changeset});",
    "description": "Move an asset or list of assets from their current changeset to a new changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetMove.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetMove(${1:assets}, ${2:changesetID});",
    "description": "Move an asset or list of assets from their current changeset to a new changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetMove.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetMove(${1:asset}, ${2:changesetID});",
    "description": "Move an asset or list of assets from their current changeset to a new changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetMove.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSets();",
    "description": "Get a list of pending changesets owned by the current user.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSets.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetStatus(${1:changeset});",
    "description": "Retrieves the list of assets belonging to a changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetStatus.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ChangeSetStatus(${1:changesetID});",
    "description": "Retrieves the list of assets belonging to a changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ChangeSetStatus.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:assets}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:assets}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:assets}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:asset}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:asset}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Checkout(${1:asset}, ${2:mode});",
    "description": "Checkout an asset or list of asset from the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Checkout.html",
    "type": "method"
  },
  {
    "snippet": "Provider.CheckoutIsValid(${1:assets});",
    "description": "Given an asset or a  list of assets this function returns true if Checkout is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.CheckoutIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.CheckoutIsValid(${1:asset});",
    "description": "Given an asset or a  list of assets this function returns true if Checkout is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.CheckoutIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ClearCache();",
    "description": "This will invalidate the cached state information for all assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ClearCache.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Delete(${1:assetProjectPath});",
    "description": "This will statt a task for deleting an asset or assets both from disk and from version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Delete.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Delete(${1:assets});",
    "description": "This will statt a task for deleting an asset or assets both from disk and from version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Delete.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Delete(${1:asset});",
    "description": "This will statt a task for deleting an asset or assets both from disk and from version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Delete.html",
    "type": "method"
  },
  {
    "snippet": "Provider.DeleteChangeSets(${1:changesets});",
    "description": "Starts a task that will attempt to delete the given changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.DeleteChangeSets.html",
    "type": "method"
  },
  {
    "snippet": "Provider.DeleteChangeSetsIsValid(${1:changesets});",
    "description": "Test if deleting a changeset is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.DeleteChangeSetsIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.DiffHead(${1:assets}, ${2:includingMetaFiles});",
    "description": "Starts a task for showing a diff of the given assest versus their head revision.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.DiffHead.html",
    "type": "method"
  },
  {
    "snippet": "Provider.DiffIsValid(${1:assets});",
    "description": "Return true is starting a Diff task is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.DiffIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetActiveConfigFields();",
    "description": "Returns the configuration fields for the currently active version control plugin.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetActiveConfigFields.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetActivePlugin();",
    "description": "Gets the currently user selected verson control plugin.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetActivePlugin.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetAssetByGUID(${1:guid});",
    "description": "Returns version control information about an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetAssetByGUID.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetAssetByPath(${1:unityPath});",
    "description": "Returns version control information about an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetAssetByPath.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetAssetListFromSelection();",
    "description": "Return version control information about the currently selected assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetAssetListFromSelection.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetLatest(${1:assets});",
    "description": "Start a task for getting the latest version of an asset from the version control server.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetLatest.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetLatest(${1:asset});",
    "description": "Start a task for getting the latest version of an asset from the version control server.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetLatest.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetLatestIsValid(${1:assets});",
    "description": "Returns true if getting the latest version of an asset is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetLatestIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.GetLatestIsValid(${1:asset});",
    "description": "Returns true if getting the latest version of an asset is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.GetLatestIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Incoming();",
    "description": "Start a task for quering the version control server for incoming changes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Incoming.html",
    "type": "method"
  },
  {
    "snippet": "Provider.IncomingChangeSetAssets(${1:changeset});",
    "description": "Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.IncomingChangeSetAssets.html",
    "type": "method"
  },
  {
    "snippet": "Provider.IncomingChangeSetAssets(${1:changesetID});",
    "description": "Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.IncomingChangeSetAssets.html",
    "type": "method"
  },
  {
    "snippet": "Provider.IsOpenForEdit(${1:asset});",
    "description": "Returns true if an asset can be edited.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Lock(${1:assets}, ${2:locked});",
    "description": "Attempt to lock an asset for exclusive editing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Lock.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Lock(${1:asset}, ${2:locked});",
    "description": "Attempt to lock an asset for exclusive editing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Lock.html",
    "type": "method"
  },
  {
    "snippet": "Provider.LockIsValid(${1:assets});",
    "description": "Return true if the task can be executed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.LockIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.LockIsValid(${1:asset});",
    "description": "Return true if the task can be executed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.LockIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Merge(${1:assets}, ${2:method});",
    "description": "This method will initiate a merge task handle merging of the conflicting assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Merge.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Move(${1:from}, ${2:to});",
    "description": "Uses the version control plugin to move an asset from one path to another.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Move.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Resolve(${1:assets}, ${2:resolveMethod});",
    "description": "Start a task that will resolve conflicting assets in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Resolve.html",
    "type": "method"
  },
  {
    "snippet": "Provider.ResolveIsValid(${1:assets});",
    "description": "Tests if any of the assets in the list is resolvable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.ResolveIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Revert(${1:assets}, ${2:mode});",
    "description": "Reverts the specified assets by undoing any changes done since last time you synced.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Revert.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Revert(${1:asset}, ${2:mode});",
    "description": "Reverts the specified assets by undoing any changes done since last time you synced.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Revert.html",
    "type": "method"
  },
  {
    "snippet": "Provider.RevertIsValid(${1:assets}, ${2:mode});",
    "description": "Return true if Revert is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.RevertIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.RevertIsValid(${1:asset}, ${2:mode});",
    "description": "Return true if Revert is a valid task to perform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.RevertIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:assets});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:asset});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:assets}, ${2:recursively});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:asset}, ${2:recursively});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:assets});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:assets}, ${2:recursively});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:asset});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Status(${1:asset}, ${2:recursively});",
    "description": "Start a task that will fetch the most recent status from revision control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Status.html",
    "type": "method"
  },
  {
    "snippet": "Provider.Submit(${1:changeset}, ${2:list}, ${3:description}, ${4:saveOnly});",
    "description": "Start a task that submits the assets to version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.Submit.html",
    "type": "method"
  },
  {
    "snippet": "Provider.SubmitIsValid(${1:changeset}, ${2:assets});",
    "description": "Returns true if submitting the assets is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.SubmitIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.UnlockIsValid(${1:assets});",
    "description": "Returns true if locking the assets is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.UnlockIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.UnlockIsValid(${1:asset});",
    "description": "Returns true if locking the assets is a valid operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.UnlockIsValid.html",
    "type": "method"
  },
  {
    "snippet": "Provider.UpdateSettings();",
    "description": "Start a task that sends the version control settings to the version control system.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/VersionControl.Provider.UpdateSettings.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.AddEditorCurveBinding(${1:gameObject}, ${2:binding});",
    "description": "Marks a property defined by an EditorCurveBinding as currently being animated.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.AddEditorCurveBinding.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.AddPropertyModification(${1:binding}, ${2:modification}, ${3:keepPrefabOverride});",
    "description": "Marks a property as currently being animated.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.AddPropertyModification.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.BeginSampling();",
    "description": "Initialise the start of the animation clip sampling.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.BeginSampling.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.EndSampling();",
    "description": "Finish the sampling of the animation clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.EndSampling.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.InAnimationMode();",
    "description": "Are we currently in AnimationMode?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.InAnimationMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.IsPropertyAnimated(${1:target}, ${2:propertyPath});",
    "description": "Is the specified property currently in animation mode and being animated?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.IsPropertyAnimated.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.SampleAnimationClip(${1:gameObject}, ${2:clip}, ${3:time});",
    "description": "Samples an AnimationClip on the object and also records any modified\n        properties in AnimationMode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.SampleAnimationClip.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.StartAnimationMode();",
    "description": "Starts the animation mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.StartAnimationMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationMode.StopAnimationMode();",
    "description": "Stops Animation mode, reverts all properties that were animated in animation mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationMode.StopAnimationMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.CalculateTransformPath(${1:targetTransform}, ${2:root});",
    "description": "Calculates path from root transform to target transform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.CalculateTransformPath.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetAnimatableBindings(${1:targetObject}, ${2:root});",
    "description": "Returns all the animatable bindings that a specific game object has.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetAnimatableBindings.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetAnimatedObject(${1:root}, ${2:binding});",
    "description": "Returns the animated object that the binding is pointing to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetAnimatedObject.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetAnimationClips(${1:component});",
    "description": "Returns the array of Animation Clips associated with the GameObject or component.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetAnimationClips.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetAnimationClips(${1:gameObject});",
    "description": "Returns the array of Animation Clips associated with the GameObject or component.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetAnimationClips.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetAnimationEvents(${1:clip});",
    "description": "Retrieves all animation events associated with the animation clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetAnimationEvents.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetCurveBindings(${1:clip});",
    "description": "Returns all the float curve bindings currently stored in the clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetCurveBindings.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetEditorCurve(${1:clip}, ${2:relativePath}, ${3:type}, ${4:propertyName});",
    "description": "Return the float curve that the binding is pointing to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetEditorCurve.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetEditorCurve(${1:clip}, ${2:binding});",
    "description": "Return the float curve that the binding is pointing to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetEditorCurve.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetFloatValue(${1:root}, ${2:relativePath}, ${3:type}, ${4:propertyName}, ${5:data});",
    "description": "Retrieves the current float value by sampling a curve value on a specific game object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetFloatValue.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetKeyBroken(${1:curve}, ${2:index});",
    "description": "Retrieve the specified keyframe broken tangent flag.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetKeyBroken.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetKeyLeftTangentMode(${1:curve}, ${2:index});",
    "description": "Retrieve the left tangent mode of the keyframe at specified index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetKeyLeftTangentMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetKeyRightTangentMode(${1:curve}, ${2:index});",
    "description": "Retrieve the right tangent mode of the keyframe at specified index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetKeyRightTangentMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetObjectReferenceCurve(${1:clip}, ${2:binding});",
    "description": "Return the object reference curve that the binding is pointing to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetObjectReferenceCurve.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.GetObjectReferenceCurveBindings(${1:clip});",
    "description": "Returns all the object reference curve bindings currently stored in the clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.GetObjectReferenceCurveBindings.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetAdditiveReferencePose(${1:clip}, ${2:referenceClip}, ${3:time});",
    "description": "Set the additive reference pose from referenceClip at time for animation clip clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetAdditiveReferencePose.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetAnimationClips(${1:animation}, ${2:clips});",
    "description": "Sets the array of AnimationClips to be referenced in the Animation component.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetAnimationClips.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetAnimationEvents(${1:clip}, ${2:events});",
    "description": "Replaces all animation events in the animation clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetAnimationEvents.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetEditorCurve(${1:clip}, ${2:binding}, ${3:curve});",
    "description": "Adds, modifies or removes an editor float curve in a given clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetEditorCurve.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetKeyBroken(${1:curve}, ${2:index}, ${3:broken});",
    "description": "Change the specified keyframe broken tangent flag.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetKeyBroken.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetKeyLeftTangentMode(${1:curve}, ${2:index}, ${3:tangentMode});",
    "description": "Change the specified keyframe tangent mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetKeyLeftTangentMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetKeyRightTangentMode(${1:curve}, ${2:index}, ${3:tangentMode});",
    "description": "Change the specified keyframe tangent mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetKeyRightTangentMode.html",
    "type": "method"
  },
  {
    "snippet": "AnimationUtility.SetObjectReferenceCurve(${1:clip}, ${2:binding}, ${3:keyframes});",
    "description": "Adds, modifies or removes an object reference curve in a given clip.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AnimationUtility.SetObjectReferenceCurve.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.Add(${1:array}, ${2:item});",
    "description": "Appends item to the end of array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.Add.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.AddRange(${1:array}, ${2:items});",
    "description": "Appends items to the end of array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.AddRange.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.ArrayEquals(${1:lhs}, ${2:rhs});",
    "description": "Compares two arrays.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.ArrayEquals.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.ArrayReferenceEquals(${1:lhs}, ${2:rhs});",
    "description": "Compares two array references.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.ArrayReferenceEquals.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.Clear(${1:array});",
    "description": "Clears the array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.Clear.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.Contains(${1:array}, ${2:item});",
    "description": "Determines if the array contains the item.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.Contains.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.IndexOf(${1:array}, ${2:value});",
    "description": "Index of first element with value value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.IndexOf.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.Insert(${1:array}, ${2:index}, ${3:item});",
    "description": "Inserts item item at position index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.Insert.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.LastIndexOf(${1:array}, ${2:value});",
    "description": "Index of the last element with value value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.LastIndexOf.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.Remove(${1:array}, ${2:item});",
    "description": "Removes item from array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.Remove.html",
    "type": "method"
  },
  {
    "snippet": "ArrayUtility.RemoveAt(${1:array}, ${2:index});",
    "description": "Remove element at position index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ArrayUtility.RemoveAt.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.AddObjectToAsset(${1:objectToAdd}, ${2:path});",
    "description": "Adds objectToAdd to an existing asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.AddObjectToAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.AddObjectToAsset(${1:objectToAdd}, ${2:assetObject});",
    "description": "Adds objectToAdd to an existing asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.AddObjectToAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.AssetPathToGUID(${1:path});",
    "description": "Get the GUID for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.AssetPathToGUID.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ClearLabels(${1:obj});",
    "description": "Removes all labels attached to an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ClearLabels.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.Contains(${1:obj});",
    "description": "Is object an asset?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.Contains.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.Contains(${1:instanceID});",
    "description": "Is object an asset?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.Contains.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.CopyAsset(${1:path}, ${2:newPath});",
    "description": "Duplicates the asset at path and stores it at newPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.CopyAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.CreateAsset(${1:asset}, ${2:path});",
    "description": "Creates a new asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.CreateAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.CreateFolder(${1:parentFolder}, ${2:newFolderName});",
    "description": "Create a new folder.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.CreateFolder.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.DeleteAsset(${1:path});",
    "description": "Deletes the asset file at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.DeleteAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ExportPackage(${1:assetPathName}, ${2:fileName});",
    "description": "Exports the assets identified by assetPathNames to a unitypackage file in fileName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ExportPackage.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ExportPackage(${1:assetPathName}, ${2:fileName}, ${3:flags});",
    "description": "Exports the assets identified by assetPathNames to a unitypackage file in fileName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ExportPackage.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ExportPackage(${1:assetPathNames}, ${2:fileName}, ${3:flags});",
    "description": "Exports the assets identified by assetPathNames to a unitypackage file in fileName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ExportPackage.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ExtractAsset(${1:asset}, ${2:newPath});",
    "description": "Creates an external Asset from an object (such as a Material) by extracting it from within an imported asset (such as an FBX file).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ExtractAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.FindAssets(${1:filter});",
    "description": "Search the asset database using the search filter string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.FindAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.FindAssets(${1:filter}, ${2:searchInFolders});",
    "description": "Search the asset database using the search filter string.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.FindAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ForceReserializeAssets();",
    "description": "Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ForceReserializeAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ForceReserializeAssets();",
    "description": "Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ForceReserializeAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ForceReserializeAssets();",
    "description": "Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ForceReserializeAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GenerateUniqueAssetPath(${1:path});",
    "description": "Creates a new unique path for an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GenerateUniqueAssetPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAllAssetBundleNames();",
    "description": "Return all the AssetBundle names in the asset database.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAllAssetBundleNames.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetBundleDependencies(${1:assetBundleName}, ${2:recursive});",
    "description": "Given an assetBundleName, returns the list of AssetBundles that it depends on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetBundleDependencies.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetDependencyHash(${1:path});",
    "description": "Returns the hash of all the dependencies of an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetDependencyHash.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetOrScenePath(${1:assetObject});",
    "description": "Returns the path name relative to the project folder where the asset is stored.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetOrScenePath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetPath(${1:instanceID});",
    "description": "Returns the path name relative to the project folder where the asset is stored.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetPath(${1:assetObject});",
    "description": "Returns the path name relative to the project folder where the asset is stored.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetPathFromTextMetaFilePath(${1:path});",
    "description": "Gets the path to the asset file associated with a text .meta file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetPathFromTextMetaFilePath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetPathsFromAssetBundle(${1:assetBundleName});",
    "description": "Get the paths of the assets which have been marked with the given assetBundle name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetPathsFromAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(${1:assetBundleName}, ${2:assetName});",
    "description": "Get the Asset paths for all Assets tagged with assetBundleName and\n                named assetName.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetCachedIcon(${1:path});",
    "description": "Retrieves an icon for the asset at the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetCachedIcon.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetCurrentCacheServerIp();",
    "description": "Gets the IP address of the Cache Server currently in use by the Editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetCurrentCacheServerIp.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetDependencies(${1:pathName});",
    "description": "Given a pathName, returns the list of all assets that it depends on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetDependencies(${1:pathName}, ${2:recursive});",
    "description": "Given a pathName, returns the list of all assets that it depends on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetDependencies(${1:pathNames});",
    "description": "Given a pathName, returns the list of all assets that it depends on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetDependencies(${1:pathNames}, ${2:recursive});",
    "description": "Given a pathName, returns the list of all assets that it depends on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetImplicitAssetBundleName(${1:assetPath});",
    "description": "Returns the name of the AssetBundle that a given asset belongs to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetImplicitAssetBundleName.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetImplicitAssetBundleVariantName(${1:assetPath});",
    "description": "Returns the name of the AssetBundle Variant that a given asset belongs to.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetImplicitAssetBundleVariantName.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetLabels(${1:obj});",
    "description": "Returns all labels attached to a given asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetLabels.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetMainAssetTypeAtPath(${1:assetPath});",
    "description": "Returns the type of the main asset object at assetPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetMainAssetTypeAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetSubFolders(${1:path});",
    "description": "Given a path to a directory in the Assets folder, relative to the project folder, this method will return an array of all its subdirectories.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetSubFolders.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetTextMetaFilePathFromAssetPath(${1:path});",
    "description": "Gets the path to the text .meta file associated with an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetTextMetaFilePathFromAssetPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GetUnusedAssetBundleNames();",
    "description": "Return all the unused assetBundle names in the asset database.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GetUnusedAssetBundleNames.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.GUIDToAssetPath(${1:guid});",
    "description": "Translate a GUID to its current asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.GUIDToAssetPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ImportAsset(${1:path}, ${2:options});",
    "description": "Import asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ImportAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ImportPackage(${1:packagePath}, ${2:interactive});",
    "description": "Imports package at packagePath into the current project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ImportPackage.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsForeignAsset(${1:obj});",
    "description": "Determines whether the Asset is a foreign Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsForeignAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsForeignAsset(${1:instanceID});",
    "description": "Determines whether the Asset is a foreign Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsForeignAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMainAsset(${1:obj});",
    "description": "Is asset a main asset in the project window?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMainAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMainAsset(${1:instanceID});",
    "description": "Is asset a main asset in the project window?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMainAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMainAssetAtPathLoaded(${1:assetPath});",
    "description": "Returns true if the main asset object at assetPath is loaded in memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMainAssetAtPathLoaded.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMetaFileOpenForEdit(${1:assetObject}, ${2:statusOptions});",
    "description": "Query whether an asset's metadata (.meta) file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMetaFileOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMetaFileOpenForEdit(${1:assetObject}, ${2:message}, ${3:statusOptions});",
    "description": "Query whether an asset's metadata (.meta) file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMetaFileOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMetaFileOpenForEdit(${1:assetObject});",
    "description": "Query whether an asset's metadata (.meta) file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMetaFileOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsMetaFileOpenForEdit(${1:assetObject}, ${2:message});",
    "description": "Query whether an asset's metadata (.meta) file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsMetaFileOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsNativeAsset(${1:obj});",
    "description": "Determines whether the Asset is a native Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsNativeAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsNativeAsset(${1:instanceID});",
    "description": "Determines whether the Asset is a native Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsNativeAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetObject}, ${2:StatusQueryOptions});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetOrMetaFilePath}, ${2:StatusQueryOptions});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetObject}, ${2:message}, ${3:statusOptions});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetOrMetaFilePath}, ${2:message}, ${3:statusOptions});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetObject});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetOrMetaFilePath});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetObject}, ${2:message});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsOpenForEdit(${1:assetOrMetaFilePath}, ${2:message});",
    "description": "Query whether an asset file is open for edit in version control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsOpenForEdit.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsSubAsset(${1:obj});",
    "description": "Does the asset form part of another asset?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsSubAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsSubAsset(${1:instanceID});",
    "description": "Does the asset form part of another asset?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsSubAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.IsValidFolder(${1:path});",
    "description": "Given a path to a folder, returns true if it exists, false otherwise.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.IsValidFolder.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.LoadAllAssetRepresentationsAtPath(${1:assetPath});",
    "description": "Returns all sub Assets at assetPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.LoadAllAssetRepresentationsAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.LoadAllAssetsAtPath(${1:assetPath});",
    "description": "Returns an array of all Assets at assetPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.LoadAllAssetsAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.LoadAssetAtPath(${1:assetPath}, ${2:type});",
    "description": "Returns the first asset object of type type at given path assetPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.LoadAssetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.LoadMainAssetAtPath(${1:assetPath});",
    "description": "Returns the main asset object at assetPath.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.LoadMainAssetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.MoveAsset(${1:oldPath}, ${2:newPath});",
    "description": "Move an asset file (or folder) from one folder to another.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.MoveAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.MoveAssetToTrash(${1:path});",
    "description": "Moves the asset at path to the trash.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.MoveAssetToTrash.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.OpenAsset(${1:instanceID}, ${2:lineNumber});",
    "description": "Opens the asset with associated application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.OpenAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.OpenAsset(${1:target}, ${2:lineNumber});",
    "description": "Opens the asset with associated application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.OpenAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.OpenAsset(${1:objects});",
    "description": "Opens the asset with associated application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.OpenAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.Refresh(${1:options});",
    "description": "Import any changed assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.Refresh.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ReleaseCachedFileHandles();",
    "description": "Calling this function will release file handles internally cached by Unity. This allows modifying asset or meta files safely thus avoiding potential file sharing IO errors.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ReleaseCachedFileHandles.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.RemoveAssetBundleName(${1:assetBundleName}, ${2:forceRemove});",
    "description": "Remove the assetBundle name from the asset database. The forceRemove flag is used to indicate if you want to remove it even it's in use.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.RemoveAssetBundleName.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.RemoveObjectFromAsset(${1:objectToRemove});",
    "description": "Removes object from its asset (See Also: AssetDatabase.AddObjectToAsset).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.RemoveObjectFromAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.RemoveUnusedAssetBundleNames();",
    "description": "Remove all the unused assetBundle names in the asset database.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.RemoveUnusedAssetBundleNames.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.RenameAsset(${1:pathName}, ${2:newName});",
    "description": "Rename an asset file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.RenameAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.SaveAssets();",
    "description": "Writes all unsaved asset changes to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.SaveAssets.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.SetLabels(${1:obj}, ${2:labels});",
    "description": "Replaces that list of labels on an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.SetLabels.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.SetMainObject(${1:mainObject}, ${2:assetPath});",
    "description": "Specifies which object in the asset file should become the main object after the next import.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.SetMainObject.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.StartAssetEditing();",
    "description": "Begin Asset importing. This lets you group several asset imports together into one larger import.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.StartAssetEditing.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.StopAssetEditing();",
    "description": "Stop Asset importing. This lets you group several asset imports together into one larger import.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.StopAssetEditing.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.TryGetGUIDAndLocalFileIdentifier(${1:obj}, ${2:guid}, ${3:localId});",
    "description": "\n          Warning Use the overload with a long localId parameter. Using the overload with an integer localId parameter can cause an integer overflow in localId. This can happen when the object passed to the API is part of a Prefab.Get the GUID and local file id from an object instance id.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.TryGetGUIDAndLocalFileIdentifier.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.TryGetGUIDAndLocalFileIdentifier(${1:instanceID}, ${2:guid}, ${3:localId});",
    "description": "\n          Warning Use the overload with a long localId parameter. Using the overload with an integer localId parameter can cause an integer overflow in localId. This can happen when the object passed to the API is part of a Prefab.Get the GUID and local file id from an object instance id.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.TryGetGUIDAndLocalFileIdentifier.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.TryGetGUIDAndLocalFileIdentifier(${1:obj}, ${2:guid}, ${3:localId});",
    "description": "\n          Warning Use the overload with a long localId parameter. Using the overload with an integer localId parameter can cause an integer overflow in localId. This can happen when the object passed to the API is part of a Prefab.Get the GUID and local file id from an object instance id.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.TryGetGUIDAndLocalFileIdentifier.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.TryGetGUIDAndLocalFileIdentifier(${1:instanceID}, ${2:guid}, ${3:localId});",
    "description": "\n          Warning Use the overload with a long localId parameter. Using the overload with an integer localId parameter can cause an integer overflow in localId. This can happen when the object passed to the API is part of a Prefab.Get the GUID and local file id from an object instance id.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.TryGetGUIDAndLocalFileIdentifier.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.ValidateMoveAsset(${1:oldPath}, ${2:newPath});",
    "description": "Checks if an asset file can be moved from one folder to another. (Without actually moving the file).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.ValidateMoveAsset.html",
    "type": "method"
  },
  {
    "snippet": "AssetDatabase.WriteImportSettingsIfDirty(${1:path});",
    "description": "Writes the import settings to disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetDatabase.WriteImportSettingsIfDirty.html",
    "type": "method"
  },
  {
    "snippet": "AssetImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.GetAssetPreview(${1:asset});",
    "description": "Returns a preview texture for an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.GetAssetPreview.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.GetAssetPreview();",
    "description": "Returns a preview texture for an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.GetAssetPreview.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.GetMiniThumbnail(${1:obj});",
    "description": "Returns the thumbnail for an object (like the ones you see in the project view).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.GetMiniThumbnail.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.GetMiniTypeThumbnail(${1:type});",
    "description": "Returns the thumbnail for the type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.GetMiniTypeThumbnail.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.GetMiniTypeThumbnail();",
    "description": "Returns the thumbnail for the type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.GetMiniTypeThumbnail.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.IsLoadingAssetPreview(${1:instanceID});",
    "description": "Loading previews is asynchronous so it is useful to know if a specific asset preview is in the process of being loaded so client code e.g can repaint while waiting for the loading to finish.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.IsLoadingAssetPreview.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.IsLoadingAssetPreviews();",
    "description": "Loading previews is asynchronous so it is useful to know if any requested previews are in the process of being loaded so client code e.g can repaint while waiting.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.IsLoadingAssetPreviews.html",
    "type": "method"
  },
  {
    "snippet": "AssetPreview.SetPreviewTextureCacheSize(${1:size});",
    "description": "Set the asset preview cache to a size that can hold all visible previews on the screen at once.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetPreview.SetPreviewTextureCacheSize.html",
    "type": "method"
  },
  {
    "snippet": "AudioCurveRendering.DrawCurve(${1:r}, ${2:eval}, ${3:curveColor});",
    "description": "Renders a thin curve determined by the curve evaluation function. The solid color of the curve is set by the curveColor argument.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioCurveRendering.DrawCurve.html",
    "type": "method"
  },
  {
    "snippet": "AudioCurveRendering.DrawFilledCurve(${1:r}, ${2:eval}, ${3:curveColor});",
    "description": "Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioCurveRendering.DrawFilledCurve.html",
    "type": "method"
  },
  {
    "snippet": "AudioCurveRendering.DrawFilledCurve(${1:r}, ${2:eval});",
    "description": "Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioCurveRendering.DrawFilledCurve.html",
    "type": "method"
  },
  {
    "snippet": "AudioCurveRendering.DrawMinMaxFilledCurve(${1:r}, ${2:eval});",
    "description": "Fills the area between the two curves evaluated by the AudioMinMaxCurveAndColorEvaluator provided with smooth gradients along the edges.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioCurveRendering.DrawMinMaxFilledCurve.html",
    "type": "method"
  },
  {
    "snippet": "AudioCurveRendering.DrawSymmetricFilledCurve(${1:r}, ${2:eval});",
    "description": "Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and its vertical mirror image with smooth gradients along the edges. Useful for drawing amplitude plots of audio signals.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AudioCurveRendering.DrawSymmetricFilledCurve.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AudioImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle(${1:mainAsset}, ${2:assets}, ${3:pathName}, ${4:assetBundleOptions}, ${5:targetPlatform});",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle(${1:mainAsset}, ${2:assets}, ${3:pathName}, ${4:crc}, ${5:assetBundleOptions}, ${6:targetPlatform});",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle();",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle();",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle();",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundle();",
    "description": "Builds an asset bundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames(${1:assets}, ${2:assetNames}, ${3:pathName}, ${4:assetBundleOptions}, ${5:targetPlatform});",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames(${1:assets}, ${2:assetNames}, ${3:pathName}, ${4:crc}, ${5:assetBundleOptions}, ${6:targetPlatform});",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames();",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames();",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames();",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundleExplicitAssetNames();",
    "description": "Builds an asset bundle, with custom names for the assets.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundleExplicitAssetNames.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundles(${1:outputPath}, ${2:assetBundleOptions}, ${3:targetPlatform});",
    "description": "Build all AssetBundles specified in the editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundles.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildAssetBundles(${1:outputPath}, ${2:builds}, ${3:assetBundleOptions}, ${4:targetPlatform});",
    "description": "Build all AssetBundles specified in the editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundles.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildPlayer(${1:buildPlayerOptions});",
    "description": "Builds a player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildPlayer.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildPlayer(${1:levels}, ${2:locationPathName}, ${3:target}, ${4:options});",
    "description": "Builds a player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildPlayer.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.BuildPlayer(${1:levels}, ${2:locationPathName}, ${3:target}, ${4:options});",
    "description": "Builds a player.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildPlayer.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.GetCRCForAssetBundle(${1:targetPath}, ${2:crc});",
    "description": "Extract the crc checksum for the given AssetBundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.GetCRCForAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPipeline.GetHashForAssetBundle(${1:targetPath}, ${2:hash});",
    "description": "Extract the hash for the given AssetBundle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPipeline.GetHashForAssetBundle.html",
    "type": "method"
  },
  {
    "snippet": "BuildPlayerWindow.ShowBuildPlayerWindow();",
    "description": "Open the build settings window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPlayerWindow.ShowBuildPlayerWindow.html",
    "type": "method"
  },
  {
    "snippet": "DefaultBuildMethods.BuildPlayer(${1:options});",
    "description": "The built-in, default handler for executing a player build. Can be used to provide default functionality in a custom build player window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPlayerWindow.DefaultBuildMethods.BuildPlayer.html",
    "type": "method"
  },
  {
    "snippet": "DefaultBuildMethods.GetBuildPlayerOptions(${1:defaultBuildPlayerOptions});",
    "description": "The built-in, default handler for calculating build player options. Can be used to provide default functionality in a custom build player window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.DrawFrustumGizmo(${1:camera});",
    "description": "Draw the frustrum gizmo of a camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.DrawFrustumGizmo.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.GetFrustumAspectRatio(${1:camera});",
    "description": "Calculate the frustrum aspect ratio of a camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.GetFrustumAspectRatio.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.GetFrustumPlaneAt(${1:clipToWorld}, ${2:viewPosition}, ${3:distance}, ${4:points});",
    "description": "Calculate the points of the frustrum plane facing the viewer at a specific distance.The points array will be filled with the calculated points in the following order: left bottom, left top, right top and right bottom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.GetFrustumPlaneAt.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.HandleFrustum();",
    "description": "Draw the frustrum handles for a camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.HandleFrustum.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.IsViewportRectValidToRender(${1:normalizedViewPortRect});",
    "description": "Check whether a viewport is valid.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.IsViewportRectValidToRender.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.PerspectiveClipToWorld(${1:clipToWorld}, ${2:viewPositionWS}, ${3:positionCS});",
    "description": "Calculate the world space position of a point in clip space.The z component will be used to get the point at the distance z from the viewer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.PerspectiveClipToWorld.html",
    "type": "method"
  },
  {
    "snippet": "CameraEditorUtils.TryGetFrustum(${1:camera}, ${2:near}, ${3:far}, ${4:frustumAspect});",
    "description": "Calculate the frustrum corners.Corners are calculated in this order: left bottom, left top, right top, right bottom.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/CameraEditorUtils.TryGetFrustum.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DDSImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "DefaultAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "Editor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "EditorAnalytics.RegisterEventWithLimit(${1:eventName}, ${2:maxEventPerHour}, ${3:maxItems}, ${4:vendorKey});",
    "description": "This API is used for registering an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorAnalytics.RegisterEventWithLimit.html",
    "type": "method"
  },
  {
    "snippet": "EditorAnalytics.RegisterEventWithLimit(${1:eventName}, ${2:maxEventPerHour}, ${3:maxItems}, ${4:vendorKey}, ${5:ver});",
    "description": "This API is used for registering an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorAnalytics.RegisterEventWithLimit.html",
    "type": "method"
  },
  {
    "snippet": "EditorAnalytics.SendEventWithLimit(${1:eventName}, ${2:parameters});",
    "description": "This API is used to send an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorAnalytics.SendEventWithLimit.html",
    "type": "method"
  },
  {
    "snippet": "EditorAnalytics.SendEventWithLimit(${1:eventName}, ${2:parameters}, ${3:ver});",
    "description": "This API is used to send an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorAnalytics.SendEventWithLimit.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.Beep();",
    "description": "Plays system beep sound.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.Beep.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.DirtyHierarchyWindowSorting();",
    "description": "Set the hierarchy sorting method as dirty.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.DirtyHierarchyWindowSorting.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.ExecuteMenuItem(${1:menuItemPath});",
    "description": "Invokes the menu item in the specified path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.ExecuteMenuItem.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.Exit(${1:returnValue});",
    "description": "Exit the Unity editor application.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.Exit.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.LockReloadAssemblies();",
    "description": "Prevents loading of assemblies when it is inconvenient.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.LockReloadAssemblies.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.OpenProject(${1:projectPath}, ${2:args});",
    "description": "Open another project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.OpenProject.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.QueuePlayerLoopUpdate();",
    "description": "Normally, a player loop update will occur in the editor when the Scene has been modified. This method allows you to queue a player loop update regardless of whether the Scene has been modified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.QueuePlayerLoopUpdate.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.RepaintHierarchyWindow();",
    "description": "Can be used to ensure repaint of the HierarchyWindow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.RepaintHierarchyWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.RepaintProjectWindow();",
    "description": "Can be used to ensure repaint of the ProjectWindow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.RepaintProjectWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.SetTemporaryProjectKeepPath(${1:path});",
    "description": "Sets the path that Unity should store the current temporary project at, when the project is closed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.SetTemporaryProjectKeepPath.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.Step();",
    "description": "Perform a single frame step.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.Step.html",
    "type": "method"
  },
  {
    "snippet": "EditorApplication.UnlockReloadAssemblies();",
    "description": "Must be called after LockReloadAssemblies, to reenable loading of assemblies.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorApplication.UnlockReloadAssemblies.html",
    "type": "method"
  },
  {
    "snippet": "EditorBuildSettings.AddConfigObject(${1:name}, ${2:obj}, ${3:overwrite});",
    "description": "Store a reference to a config object by name.  The object must be an asset in the project, otherwise it will not be saved when the editor is restarted or scripts are reloaded.  To avoid name conflicts with other packages, it is recommended that names are qualified by a namespace, i.e. \"company.package.name\".",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorBuildSettings.AddConfigObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorBuildSettings.GetConfigObjectNames();",
    "description": "Return a string array containing the names of all stored config object references.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorBuildSettings.GetConfigObjectNames.html",
    "type": "method"
  },
  {
    "snippet": "EditorBuildSettings.RemoveConfigObject(${1:name});",
    "description": "Remove a config object reference by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorBuildSettings.RemoveConfigObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorBuildSettings.TryGetConfigObject(${1:name}, ${2:result});",
    "description": "Retrieve a config object reference by name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorBuildSettings.TryGetConfigObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorCurveBinding.DiscreteCurve(${1:inPath}, ${2:inType}, ${3:inPropertyName});",
    "description": "Creates a preconfigured binding for a curve where values should not be interpolated.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorCurveBinding.DiscreteCurve.html",
    "type": "method"
  },
  {
    "snippet": "EditorCurveBinding.FloatCurve(${1:inPath}, ${2:inType}, ${3:inPropertyName});",
    "description": "Creates a preconfigured binding for a float curve.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorCurveBinding.FloatCurve.html",
    "type": "method"
  },
  {
    "snippet": "EditorCurveBinding.PPtrCurve(${1:inPath}, ${2:inType}, ${3:inPropertyName});",
    "description": "Creates a preconfigured binding for a curve that points to an Object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorCurveBinding.PPtrCurve.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.AddCursorRect(${1:position}, ${2:mouse});",
    "description": "Add a custom mouse pointer to a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.AddCursorRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.AddCursorRect(${1:position}, ${2:mouse}, ${3:controlID});",
    "description": "Add a custom mouse pointer to a control.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.AddCursorRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.CommandEvent(${1:commandName});",
    "description": "Creates an event that can be sent to another window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.CommandEvent.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.DrawColorSwatch(${1:position}, ${2:color});",
    "description": "Draw a color swatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.DrawColorSwatch.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.DrawCurveSwatch(${1:position}, ${2:curve}, ${3:property}, ${4:color}, ${5:bgColor});",
    "description": "Draw a curve swatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.DrawCurveSwatch.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.DrawCurveSwatch(${1:position}, ${2:curve}, ${3:property}, ${4:color}, ${5:bgColor}, ${6:curveRanges});",
    "description": "Draw a curve swatch.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.DrawCurveSwatch.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.DrawRegionSwatch(${1:position}, ${2:property}, ${3:property2}, ${4:color}, ${5:bgColor}, ${6:curveRanges});",
    "description": "Draw swatch with a filled region between two SerializedProperty curves.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.DrawRegionSwatch.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.DrawRegionSwatch(${1:position}, ${2:curve}, ${3:curve2}, ${4:color}, ${5:bgColor}, ${6:curveRanges});",
    "description": "Draw swatch with a filled region between two SerializedProperty curves.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.DrawRegionSwatch.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.FindTexture(${1:name});",
    "description": "Get a texture from its source filename.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.FindTexture.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.GetBuiltinSkin(${1:skin});",
    "description": "Get one of the built-in GUI skins, which can be the game view, inspector or Scene view skin as chosen by the parameter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.GetBuiltinSkin.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.GetIconSize();",
    "description": "Get the size that has been set using SetIconSize.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.GetIconSize.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.GetObjectPickerControlID();",
    "description": "The controlID of the currently showing object picker.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.GetObjectPickerControlID.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.GetObjectPickerObject();",
    "description": "The object currently selected in the object picker.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.GetObjectPickerObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.HasObjectThumbnail(${1:objType});",
    "description": "Does a given class have per-object thumbnails?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.HasObjectThumbnail.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.IconContent(${1:name}, ${2:text});",
    "description": "Fetch the GUIContent from the Unity builtin resources with the given name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.IconContent.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.IsDisplayReferencedByCameras(${1:displayIndex});",
    "description": "Check if any enabled camera can render to a particular display.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.IsDisplayReferencedByCameras.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.Load(${1:path});",
    "description": "Load a built-in resource.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.Load.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.LoadRequired(${1:path});",
    "description": "Load a required built-in resource.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.LoadRequired.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.LookLikeControls(${1:_labelWidth}, ${2:_fieldWidth});",
    "description": "Make all EditorGUI look like regular controls.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.LookLikeControls.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.LookLikeControls();",
    "description": "Make all EditorGUI look like regular controls.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.LookLikeControls.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.LookLikeControls();",
    "description": "Make all EditorGUI look like regular controls.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.LookLikeControls.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.ObjectContent(${1:obj}, ${2:type});",
    "description": "Return a GUIContent object with the name and icon of an Object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.ObjectContent.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PingObject(${1:obj});",
    "description": "Ping an object in the Scene like clicking it in an inspector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PingObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PingObject(${1:targetInstanceID});",
    "description": "Ping an object in the Scene like clicking it in an inspector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PingObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PixelsToPoints(${1:position});",
    "description": "Convert from pixel space to point space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PixelsToPoints.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PixelsToPoints(${1:rect});",
    "description": "Convert from pixel space to point space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PixelsToPoints.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PointsToPixels(${1:position});",
    "description": "Convert from point space to pixel space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PointsToPixels.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.PointsToPixels(${1:rect});",
    "description": "Convert from point space to pixel space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.PointsToPixels.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.QueueGameViewInputEvent(${1:evt});",
    "description": "Send an input event into the game.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.QueueGameViewInputEvent.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.SetIconSize(${1:size});",
    "description": "Set icons rendered as part of GUIContent to be rendered at a specific size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.SetIconSize.html",
    "type": "method"
  },
  {
    "snippet": "EditorGUIUtility.ShowObjectPicker(${1:obj}, ${2:allowSceneObjects}, ${3:searchFilter}, ${4:controlID});",
    "description": "Show the object picker from code.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorGUIUtility.ShowObjectPicker.html",
    "type": "method"
  },
  {
    "snippet": "EditorJsonUtility.FromJsonOverwrite(${1:json}, ${2:objectToOverwrite});",
    "description": "Overwrite data in an object by reading from its JSON representation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorJsonUtility.FromJsonOverwrite.html",
    "type": "method"
  },
  {
    "snippet": "EditorJsonUtility.ToJson(${1:obj});",
    "description": "Generate a JSON representation of an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorJsonUtility.ToJson.html",
    "type": "method"
  },
  {
    "snippet": "EditorJsonUtility.ToJson(${1:obj}, ${2:prettyPrint});",
    "description": "Generate a JSON representation of an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorJsonUtility.ToJson.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.DeleteAll();",
    "description": "Removes all keys and values from the preferences. Use with caution.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.DeleteAll.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.DeleteKey(${1:key});",
    "description": "Removes key and its corresponding value from the preferences.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.DeleteKey.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetBool(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetBool.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetBool(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetBool.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetFloat(${1:key});",
    "description": "Returns the float value corresponding to key if it exists in the preference file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetFloat(${1:key}, ${2:defaultValue});",
    "description": "Returns the float value corresponding to key if it exists in the preference file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetInt(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetInt(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetString(${1:key});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetString.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.GetString(${1:key}, ${2:defaultValue});",
    "description": "Returns the value corresponding to key in the preference file if it exists.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.GetString.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.HasKey(${1:key});",
    "description": "Returns true if key exists in the preferences file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.HasKey.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.SetBool(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.SetBool.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.SetFloat(${1:key}, ${2:value});",
    "description": "Sets the float value of the preference identified by key.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.SetFloat.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.SetInt(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key as an integer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.SetInt.html",
    "type": "method"
  },
  {
    "snippet": "EditorPrefs.SetString(${1:key}, ${2:value});",
    "description": "Sets the value of the preference identified by key. Note that EditorPrefs does not support null strings and will store an empty string instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorPrefs.SetString.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.GetBuildLocation(${1:target});",
    "description": "Get the current location for the build.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.GetBuildLocation.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.GetPlatformSettings(${1:platformName}, ${2:name});",
    "description": "Returns value for platform specifc Editor setting.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.GetPlatformSettings.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.GetWSADotNetNative(${1:config});",
    "description": "Is .NET Native enabled for specific build configuration.\nMore information - https://msdn.microsoft.com/en-us/library/dn584397(v=vs.110).aspx.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.GetWSADotNetNative.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.SetBuildLocation(${1:target}, ${2:location});",
    "description": "Set a new location for the build.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.SetBuildLocation.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.SetPlatformSettings(${1:platformName}, ${2:name}, ${3:value});",
    "description": "Set platform specifc Editor setting.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.SetPlatformSettings.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.SwitchActiveBuildTarget(${1:target});",
    "description": "Select a new build target to be active.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.SwitchActiveBuildTarget.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.SwitchActiveBuildTarget(${1:targetGroup}, ${2:target});",
    "description": "Select a new build target to be active.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.SwitchActiveBuildTarget.html",
    "type": "method"
  },
  {
    "snippet": "EditorUserBuildSettings.SwitchActiveBuildTargetAsync(${1:targetGroup}, ${2:target});",
    "description": "Select a new build target to be active during the next Editor update.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUserBuildSettings.SwitchActiveBuildTargetAsync.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.ClearProgressBar();",
    "description": "Removes progress bar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.ClearProgressBar.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CollectDeepHierarchy(${1:roots});",
    "description": "Collect all objects in the hierarchy rooted at each of the given objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CollectDeepHierarchy.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CollectDependencies(${1:roots});",
    "description": "Calculates and returns a list of all assets the assets listed in roots depend on.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CompressCubemapTexture(${1:texture}, ${2:format}, ${3:quality});",
    "description": "Compress a cubemap texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CompressCubemapTexture.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CompressCubemapTexture(${1:texture}, ${2:format}, ${3:quality});",
    "description": "Compress a cubemap texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CompressCubemapTexture.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CompressTexture(${1:texture}, ${2:format}, ${3:quality});",
    "description": "Compress a texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CompressTexture.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CompressTexture(${1:texture}, ${2:format}, ${3:quality});",
    "description": "Compress a texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CompressTexture.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CopySerialized(${1:source}, ${2:dest});",
    "description": "Copy all settings of a Unity Object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CopySerialized.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CopySerializedIfDifferent(${1:source}, ${2:dest});",
    "description": "Copy all settings of a Unity Object to a second Object if they differ.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CopySerializedIfDifferent.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CopySerializedManagedFieldsOnly(${1:source}, ${2:dest});",
    "description": "Copies the serializable fields from one managed object to another.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CopySerializedManagedFieldsOnly.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.CreateGameObjectWithHideFlags(${1:name}, ${2:flags}, ${3:components});",
    "description": "Creates a game object with HideFlags and specified components.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.CreateGameObjectWithHideFlags.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.DisplayCancelableProgressBar(${1:title}, ${2:info}, ${3:progress});",
    "description": "Displays or updates a progress bar that has a cancel button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayCancelableProgressBar.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.DisplayDialog(${1:title}, ${2:message}, ${3:ok}, ${4:cancel});",
    "description": "Displays a modal dialog.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayDialog.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.DisplayDialogComplex(${1:title}, ${2:message}, ${3:ok}, ${4:cancel}, ${5:alt});",
    "description": "Displays a modal dialog with three buttons.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayDialogComplex.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.DisplayPopupMenu(${1:position}, ${2:menuItemPath}, ${3:command});",
    "description": "Displays a popup menu.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayPopupMenu.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.DisplayProgressBar(${1:title}, ${2:info}, ${3:progress});",
    "description": "Displays or updates a progress bar.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayProgressBar.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.ExtractOggFile(${1:obj}, ${2:path});",
    "description": "Saves an AudioClip or MovieTexture to a file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.ExtractOggFile.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.FocusProjectWindow();",
    "description": "Brings the project window to the front and focuses it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.FocusProjectWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.FormatBytes(${1:bytes});",
    "description": "Returns a text for a number of bytes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.FormatBytes.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.GetObjectEnabled(${1:target});",
    "description": "Is the object enabled (0 disabled, 1 enabled, -1 has no enabled button).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.GetObjectEnabled.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.InstanceIDToObject(${1:instanceID});",
    "description": "Translates an instance ID to a reference to an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.InstanceIDToObject.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.IsPersistent(${1:target});",
    "description": "Determines if an object is stored on disk.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.IsPersistent.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.NaturalCompare(${1:a}, ${2:b});",
    "description": "Human-like sorting.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.NaturalCompare.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.OpenFilePanel(${1:title}, ${2:directory}, ${3:extension});",
    "description": "Displays the \"open file\" dialog and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.OpenFilePanel.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.OpenFilePanelWithFilters(${1:title}, ${2:directory}, ${3:filters});",
    "description": "Displays the \"open file\" dialog and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.OpenFilePanelWithFilters.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.OpenFolderPanel(${1:title}, ${2:folder}, ${3:defaultName});",
    "description": "Displays the \"open folder\" dialog and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.OpenFolderPanel.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SaveFilePanel(${1:title}, ${2:directory}, ${3:defaultName}, ${4:extension});",
    "description": "Displays the \"save file\" dialog and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SaveFilePanel.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SaveFilePanelInProject(${1:title}, ${2:defaultName}, ${3:extension}, ${4:message});",
    "description": "Displays the \"save file\" dialog in the Assets folder of the project and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SaveFilePanelInProject.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SaveFolderPanel(${1:title}, ${2:folder}, ${3:defaultName});",
    "description": "Displays the \"save folder\" dialog and returns the selected path name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SaveFolderPanel.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SetCameraAnimateMaterials(${1:camera}, ${2:animate});",
    "description": "Sets this camera to allow animation of materials in the Editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SetCameraAnimateMaterials.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SetCameraAnimateMaterialsTime(${1:camera}, ${2:time});",
    "description": "Sets the global time for this camera to use when rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SetCameraAnimateMaterialsTime.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SetDirty(${1:target});",
    "description": "Marks target object as dirty. (Only suitable for non-scene objects).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SetDirty.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SetObjectEnabled(${1:target}, ${2:enabled});",
    "description": "Set the enabled state of the object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SetObjectEnabled.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.SetSelectedRenderState(${1:renderer}, ${2:renderState});",
    "description": "Set the Scene View selected display mode for this Renderer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.SetSelectedRenderState.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.UnloadUnusedAssetsImmediate();",
    "description": "Unloads assets that are not used.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.UnloadUnusedAssetsImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.UnloadUnusedAssetsImmediate();",
    "description": "Unloads assets that are not used.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.UnloadUnusedAssetsImmediate.html",
    "type": "method"
  },
  {
    "snippet": "EditorUtility.UpdateGlobalShaderProperties(${1:time});",
    "description": "Updates the global shader properties to use when rendering.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorUtility.UpdateGlobalShaderProperties.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.FocusWindowIfItsOpen(${1:t});",
    "description": "Focuses the first found EditorWindow of specified type if it is open.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.FocusWindowIfItsOpen.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.FocusWindowIfItsOpen();",
    "description": "Focuses the first found EditorWindow of specified type if it is open.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.FocusWindowIfItsOpen.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:t}, ${2:utility}, ${3:title}, ${4:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow();",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:utility});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:utility}, ${2:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:title}, ${2:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:utility}, ${2:title}, ${3:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:title}, ${2:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindow(${1:title}, ${2:focus}, ${3:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindowWithRect(${1:t}, ${2:rect}, ${3:utility}, ${4:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindowWithRect(${1:rect});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindowWithRect(${1:rect}, ${2:utility});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindowWithRect(${1:rect}, ${2:utility}, ${3:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "EditorWindow.GetWindowWithRect(${1:rect}, ${2:utility}, ${3:title}, ${4:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "ExpressionEvaluator.Evaluate();",
    "description": "Evaluates a math expression and returns the result as a float or int.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ExpressionEvaluator.Evaluate.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.CopyFileOrDirectory(${1:source}, ${2:dest});",
    "description": "Copies a file or a directory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.CopyFileOrDirectory.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.CopyFileOrDirectoryFollowSymlinks(${1:source}, ${2:dest});",
    "description": "Copies the file or directory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.CopyFileOrDirectoryFollowSymlinks.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.DeleteFileOrDirectory(${1:path});",
    "description": "Deletes a file or a directory given a path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.DeleteFileOrDirectory.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.GetUniqueTempPathInProject();",
    "description": "Returns a unique path in the Temp folder within your current project.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.GetUniqueTempPathInProject.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.MoveFileOrDirectory(${1:source}, ${2:dest});",
    "description": "Moves a file or a directory from a given path to another path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.MoveFileOrDirectory.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.ReplaceDirectory(${1:src}, ${2:dst});",
    "description": "Replaces a directory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.ReplaceDirectory.html",
    "type": "method"
  },
  {
    "snippet": "FileUtil.ReplaceFile(${1:src}, ${2:dst});",
    "description": "Replaces a file.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/FileUtil.ReplaceFile.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.AreStaticEditorFlagsSet(${1:go}, ${2:flags});",
    "description": "Returns true if the passed in StaticEditorFlags are set on the GameObject specified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.AreStaticEditorFlagsSet.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.EnsureUniqueNameForSibling(${1:self});",
    "description": "You can use this method after parenting one GameObject to another to ensure the child GameObject has a unique name compared to its siblings in the hierarchy.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.EnsureUniqueNameForSibling.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.GetNavMeshArea(${1:go});",
    "description": "Get the navmesh area index for the GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.GetNavMeshArea.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.GetNavMeshAreaFromName(${1:name});",
    "description": "Get the navmesh area index from the area name.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.GetNavMeshAreaFromName.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.GetNavMeshAreaNames();",
    "description": "Get all the navmesh area names.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.GetNavMeshAreaNames.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.GetStaticEditorFlags(${1:go});",
    "description": "Gets the StaticEditorFlags of the GameObject specified.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.GetStaticEditorFlags.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.GetUniqueNameForSibling(${1:parent}, ${2:name});",
    "description": "You can use this method before instantiating a new sibling, or before parenting one GameObject to another, to ensure the new child GameObject has a unique name compared to its siblings in the hierarchy.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.GetUniqueNameForSibling.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.SetNavMeshArea(${1:go}, ${2:areaIndex});",
    "description": "Set the navmesh area for the gameobject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.SetNavMeshArea.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.SetParentAndAlign(${1:child}, ${2:parent});",
    "description": "Sets the parent and gives the child the same layer and position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.SetParentAndAlign.html",
    "type": "method"
  },
  {
    "snippet": "GameObjectUtility.SetStaticEditorFlags(${1:go}, ${2:flags});",
    "description": "Sets the static editor flags on the specified GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GameObjectUtility.SetStaticEditorFlags.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrush.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridBrushEditorBase.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridPalette.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "GridSelection.Clear();",
    "description": "Clears the active GridSelection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GridSelection.Clear.html",
    "type": "method"
  },
  {
    "snippet": "GridSelection.Select(${1:target}, ${2:bounds});",
    "description": "Creates a new GridSelection and sets it as the active GridSelection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/GridSelection.Select.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ArrowHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw an arrow like those used by the move tool.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ArrowHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.BeginGUI();",
    "description": "Begin a 2D GUI block inside the 3D handle GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.BeginGUI.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Button(${1:position}, ${2:direction}, ${3:size}, ${4:pickSize}, ${5:capFunction});",
    "description": "Make a 3D Button.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Button.html",
    "type": "method"
  },
  {
    "snippet": "Handles.CircleHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a circle handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.CircleHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ClearCamera(${1:position}, ${2:camera});",
    "description": "Clears the camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ClearCamera.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ConeHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a cone handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ConeHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.CubeHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a cube handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.CubeHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.CylinderHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a cylinder handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.CylinderHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Disc(${1:id}, ${2:rotation}, ${3:position}, ${4:axis}, ${5:size}, ${6:cutoffPlane}, ${7:snap});",
    "description": "Make a 3D disc that can be dragged with the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Disc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Disc(${1:rotation}, ${2:position}, ${3:axis}, ${4:size}, ${5:cutoffPlane}, ${6:snap});",
    "description": "Make a 3D disc that can be dragged with the mouse.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Disc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DotHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a dot handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DotHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAConvexPolygon(${1:points});",
    "description": "Draw anti-aliased convex polygon specified with point array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAConvexPolygon.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAPolyLine(${1:points});",
    "description": "Draw anti-aliased line specified with point array and width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAPolyLine(${1:width}, ${2:points});",
    "description": "Draw anti-aliased line specified with point array and width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAPolyLine(${1:lineTex}, ${2:points});",
    "description": "Draw anti-aliased line specified with point array and width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAPolyLine(${1:width}, ${2:actualNumberOfPoints}, ${3:points});",
    "description": "Draw anti-aliased line specified with point array and width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawAAPolyLine(${1:lineTex}, ${2:width}, ${3:points});",
    "description": "Draw anti-aliased line specified with point array and width.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawAAPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawBezier(${1:startPosition}, ${2:endPosition}, ${3:startTangent}, ${4:endTangent}, ${5:color}, ${6:texture}, ${7:width});",
    "description": "Draw textured bezier line through start and end points with the given tangents.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawBezier.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawCamera(${1:position}, ${2:camera});",
    "description": "Draws a camera inside a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawCamera.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawCamera(${1:position}, ${2:camera}, ${3:drawMode});",
    "description": "Draws a camera inside a rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawCamera.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawDottedLine(${1:p1}, ${2:p2}, ${3:screenSpaceSize});",
    "description": "Draw a dotted line from p1 to p2.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawDottedLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawDottedLines(${1:lineSegments}, ${2:screenSpaceSize});",
    "description": "Draw a list of dotted line segments.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawDottedLines.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawDottedLines(${1:points}, ${2:segmentIndices}, ${3:screenSpaceSize});",
    "description": "Draw a list of dotted line segments.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawDottedLines.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawGizmos(${1:camera});",
    "description": "Draw the Gizmos for the given camera.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawGizmos.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawLine(${1:p1}, ${2:p2});",
    "description": "Draw a line from p1 to p2.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawLines(${1:lineSegments});",
    "description": "Draw a list of line segments.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawLines.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawLines(${1:points}, ${2:segmentIndices});",
    "description": "Draw a list of line segments.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawLines.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawPolyLine(${1:points});",
    "description": "Draw a line going through the list of points.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawSelectionFrame(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a camera facing selection frame.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawSelectionFrame.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawSolidArc(${1:center}, ${2:normal}, ${3:from}, ${4:angle}, ${5:radius});",
    "description": "Draw a circular sector (pie piece) in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawSolidArc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawSolidDisc(${1:center}, ${2:normal}, ${3:radius});",
    "description": "Draw a solid flat disc in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawSolidDisc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawSolidRectangleWithOutline(${1:verts}, ${2:faceColor}, ${3:outlineColor});",
    "description": "Draw a solid outlined rectangle in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawSolidRectangleWithOutline.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawWireArc(${1:center}, ${2:normal}, ${3:from}, ${4:angle}, ${5:radius});",
    "description": "Draw a circular arc in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawWireArc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawWireCube(${1:center}, ${2:size});",
    "description": "Draw a wireframe box with center and size.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawWireCube.html",
    "type": "method"
  },
  {
    "snippet": "Handles.DrawWireDisc(${1:center}, ${2:normal}, ${3:radius});",
    "description": "Draw the outline of a flat disc in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.DrawWireDisc.html",
    "type": "method"
  },
  {
    "snippet": "Handles.EndGUI();",
    "description": "End a 2D GUI block and get back to the 3D handle GUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.EndGUI.html",
    "type": "method"
  },
  {
    "snippet": "Handles.FreeMoveHandle(${1:position}, ${2:rotation}, ${3:size}, ${4:snap}, ${5:capFunction});",
    "description": "Make an unconstrained movement handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.FreeMoveHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.FreeMoveHandle(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:snap}, ${6:capFunction});",
    "description": "Make an unconstrained movement handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.FreeMoveHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.FreeRotateHandle(${1:id}, ${2:rotation}, ${3:position}, ${4:size});",
    "description": "Make an unconstrained rotation handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.FreeRotateHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.FreeRotateHandle(${1:rotation}, ${2:position}, ${3:size});",
    "description": "Make an unconstrained rotation handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.FreeRotateHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.GetMainGameViewSize();",
    "description": "Get the width and height of the main game view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.GetMainGameViewSize.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Label(${1:position}, ${2:text});",
    "description": "Make a text label positioned in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Label.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Label(${1:position}, ${2:image});",
    "description": "Make a text label positioned in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Label.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Label(${1:position}, ${2:content});",
    "description": "Make a text label positioned in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Label.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Label(${1:position}, ${2:text}, ${3:style});",
    "description": "Make a text label positioned in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Label.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Label(${1:position}, ${2:content}, ${3:style});",
    "description": "Make a text label positioned in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Label.html",
    "type": "method"
  },
  {
    "snippet": "Handles.MakeBezierPoints(${1:startPosition}, ${2:endPosition}, ${3:startTangent}, ${4:endTangent}, ${5:division});",
    "description": "Retuns an array of points to representing the bezier curve.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.MakeBezierPoints.html",
    "type": "method"
  },
  {
    "snippet": "Handles.PositionHandle(${1:position}, ${2:rotation});",
    "description": "Make a position handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.PositionHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.RadiusHandle(${1:rotation}, ${2:position}, ${3:radius}, ${4:handlesOnly});",
    "description": "Make a Scene view radius handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.RadiusHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.RadiusHandle(${1:rotation}, ${2:position}, ${3:radius});",
    "description": "Make a Scene view radius handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.RadiusHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.RectangleHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a rectangle handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.RectangleHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "Handles.RotationHandle(${1:rotation}, ${2:position});",
    "description": "Make a Scene view rotation handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.RotationHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ScaleHandle(${1:scale}, ${2:position}, ${3:rotation}, ${4:size});",
    "description": "Make a Scene view scale handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ScaleHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ScaleSlider(${1:scale}, ${2:position}, ${3:direction}, ${4:rotation}, ${5:size}, ${6:snap});",
    "description": "Make a directional scale slider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ScaleSlider.html",
    "type": "method"
  },
  {
    "snippet": "Handles.ScaleValueHandle(${1:value}, ${2:position}, ${3:rotation}, ${4:size}, ${5:capFunction}, ${6:snap});",
    "description": "Make a 3D handle that scales a single float.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.ScaleValueHandle.html",
    "type": "method"
  },
  {
    "snippet": "Handles.SetCamera(${1:camera});",
    "description": "Set the current camera so all Handles and Gizmos are draw with its settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.SetCamera.html",
    "type": "method"
  },
  {
    "snippet": "Handles.SetCamera(${1:position}, ${2:camera});",
    "description": "Set the current camera so all Handles and Gizmos are draw with its settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.SetCamera.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider(${1:position}, ${2:direction});",
    "description": "Make a 3D slider that moves along one axis.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider(${1:position}, ${2:direction}, ${3:size}, ${4:capFunction}, ${5:snap});",
    "description": "Make a 3D slider that moves along one axis.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider2D(${1:id}, ${2:handlePos}, ${3:offset}, ${4:handleDir}, ${5:slideDir1}, ${6:slideDir2}, ${7:handleSize}, ${8:capFunction}, ${9:snap}, ${10:drawHelper});",
    "description": "Make a 3D slider that moves along a plane defined by two axes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider2D.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider2D(${1:handlePos}, ${2:handleDir}, ${3:slideDir1}, ${4:slideDir2}, ${5:handleSize}, ${6:capFunction}, ${7:snap}, ${8:drawHelper});",
    "description": "Make a 3D slider that moves along a plane defined by two axes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider2D.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider2D(${1:id}, ${2:handlePos}, ${3:handleDir}, ${4:slideDir1}, ${5:slideDir2}, ${6:handleSize}, ${7:capFunction}, ${8:snap}, ${9:drawHelper});",
    "description": "Make a 3D slider that moves along a plane defined by two axes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider2D.html",
    "type": "method"
  },
  {
    "snippet": "Handles.Slider2D(${1:handlePos}, ${2:handleDir}, ${3:slideDir1}, ${4:slideDir2}, ${5:handleSize}, ${6:capFunction}, ${7:snap}, ${8:drawHelper});",
    "description": "Make a 3D slider that moves along a plane defined by two axes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.Slider2D.html",
    "type": "method"
  },
  {
    "snippet": "Handles.SnapValue(${1:val}, ${2:snap});",
    "description": "Rounds the value val to the closest multiple of snap (snap can only be positive).",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.SnapValue.html",
    "type": "method"
  },
  {
    "snippet": "Handles.SphereHandleCap(${1:controlID}, ${2:position}, ${3:rotation}, ${4:size}, ${5:eventType});",
    "description": "Draw a sphere handle. Pass this into handle functions.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Handles.SphereHandleCap.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.AddControl(${1:controlId}, ${2:distance});",
    "description": "Record a distance measurement from a handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.AddControl.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.AddDefaultControl(${1:controlId});",
    "description": "Add the ID for a default control. This will be picked if nothing else is.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.AddDefaultControl.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.CalcLineTranslation(${1:src}, ${2:dest}, ${3:srcPosition}, ${4:constraintDir});",
    "description": "Map a mouse drag onto a movement along a line in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.CalcLineTranslation.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.ClosestPointToArc(${1:center}, ${2:normal}, ${3:from}, ${4:angle}, ${5:radius});",
    "description": "Get the point on an arc (in 3D space) which is closest to the current mouse position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.ClosestPointToArc.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.ClosestPointToDisc(${1:center}, ${2:normal}, ${3:radius});",
    "description": "Get the point on an disc (in 3D space) which is closest to the current mouse position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.ClosestPointToDisc.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.ClosestPointToPolyLine(${1:vertices});",
    "description": "Get the point on a polyline (in 3D space) which is closest to the current mouse position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.ClosestPointToPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistancePointBezier(${1:point}, ${2:startPosition}, ${3:endPosition}, ${4:startTangent}, ${5:endTangent});",
    "description": "Calculate distance between a point and a Bezier curve.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistancePointBezier.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistancePointLine(${1:point}, ${2:lineStart}, ${3:lineEnd});",
    "description": "Calculate distance between a point and a line.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistancePointLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistancePointToLine(${1:p}, ${2:a}, ${3:b});",
    "description": "Distance from a point p in 2d to a line defined by two points a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistancePointToLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistancePointToLineSegment(${1:p}, ${2:a}, ${3:b});",
    "description": "Distance from a point p in 2d to a line segment defined by two points a and b.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistancePointToLineSegment.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToArc(${1:center}, ${2:normal}, ${3:from}, ${4:angle}, ${5:radius});",
    "description": "Pixel distance from mouse pointer to a 3D section of a disc.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToArc.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToCircle(${1:position}, ${2:radius});",
    "description": "Pixel distance from mouse pointer to camera facing circle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToCircle.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToDisc(${1:center}, ${2:normal}, ${3:radius});",
    "description": "Pixel distance from mouse pointer to a 3D disc.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToDisc.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToLine(${1:p1}, ${2:p2});",
    "description": "Pixel distance from mouse pointer to line.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToPolyLine(${1:points});",
    "description": "Pixel distance from mouse pointer to a polyline.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToPolyLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.DistanceToRectangle(${1:position}, ${2:rotation}, ${3:size});",
    "description": "Pixel distance from mouse pointer to a rectangle on screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.DistanceToRectangle.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.GetHandleSize(${1:position});",
    "description": "Get world space size of a manipulator handle at given position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.GetHandleSize.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.GUIPointToScreenPixelCoordinate(${1:guiPoint});",
    "description": "Converts a 2D GUI position to screen pixel coordinates.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.GUIPointToScreenPixelCoordinate.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.GUIPointToWorldRay(${1:position});",
    "description": "Convert 2D GUI position to a world space ray.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.GUIPointToWorldRay.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PickGameObject(${1:position}, ${2:selectPrefabRoot});",
    "description": "Pick game object closest to specified position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PickGameObject.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PickGameObject(${1:position}, ${2:materialIndex});",
    "description": "Pick game object closest to specified position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PickGameObject.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PickRectObjects(${1:rect});",
    "description": "Pick GameObjects that lie within a specified screen rectangle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PickRectObjects.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PointOnLineParameter(${1:point}, ${2:linePoint}, ${3:lineDirection});",
    "description": "Returns the parameter for the projection of the point on the given line.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PointOnLineParameter.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PopCamera(${1:camera});",
    "description": "Retrieve all camera settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PopCamera.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.ProjectPointLine(${1:point}, ${2:lineStart}, ${3:lineEnd});",
    "description": "Project point onto a line.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.ProjectPointLine.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.PushCamera(${1:camera});",
    "description": "Store all camera settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.PushCamera.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.RaySnap(${1:ray});",
    "description": "Casts ray against the Scene and report if an object lies in its path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.RaySnap.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.Repaint();",
    "description": "Repaint the current view.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.Repaint.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.WorldPointToSizedRect(${1:position}, ${2:content}, ${3:style});",
    "description": "Calculate a rectangle to display a 2D GUI element near a projected point in 3D space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.WorldPointToSizedRect.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.WorldToGUIPoint(${1:world});",
    "description": "Convert a world space point to a 2D GUI position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.WorldToGUIPoint.html",
    "type": "method"
  },
  {
    "snippet": "HandleUtility.WorldToGUIPointWithDepth(${1:world});",
    "description": "Convert a world space point to a 2D GUI position.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/HandleUtility.WorldToGUIPointWithDepth.html",
    "type": "method"
  },
  {
    "snippet": "Help.BrowseURL(${1:url});",
    "description": "Open url in the default web browser.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Help.BrowseURL.html",
    "type": "method"
  },
  {
    "snippet": "Help.GetHelpURLForObject(${1:obj});",
    "description": "Get the URL for this object's documentation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Help.GetHelpURLForObject.html",
    "type": "method"
  },
  {
    "snippet": "Help.HasHelpForObject(${1:obj});",
    "description": "Is there a help page for this object?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Help.HasHelpForObject.html",
    "type": "method"
  },
  {
    "snippet": "Help.ShowHelpForObject(${1:obj});",
    "description": "Show help page for this object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Help.ShowHelpForObject.html",
    "type": "method"
  },
  {
    "snippet": "Help.ShowHelpPage(${1:page});",
    "description": "Show a help page.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Help.ShowHelpPage.html",
    "type": "method"
  },
  {
    "snippet": "Highlighter.Highlight(${1:windowTitle}, ${2:text});",
    "description": "Highlights an element in the editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Highlighter.Highlight.html",
    "type": "method"
  },
  {
    "snippet": "Highlighter.Highlight(${1:windowTitle}, ${2:text}, ${3:mode});",
    "description": "Highlights an element in the editor.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Highlighter.Highlight.html",
    "type": "method"
  },
  {
    "snippet": "Highlighter.HighlightIdentifier(${1:position}, ${2:identifier});",
    "description": "Call this method to create an identifiable rect that the Highlighter can find.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Highlighter.HighlightIdentifier.html",
    "type": "method"
  },
  {
    "snippet": "Highlighter.Stop();",
    "description": "Stops the active highlight.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Highlighter.Stop.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "IHVImageFormatImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateCachedEditor(${1:targetObject}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateCachedEditor(${1:targetObjects}, ${2:editorType}, ${3:previousEditor});",
    "description": "On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or Destroys the previous editor and creates a new one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditor.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateCachedEditorWithContext(${1:targetObject}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateCachedEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType}, ${4:previousEditor});",
    "description": "Creates a cached editor using a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateCachedEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateEditor(${1:targetObject}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateEditor(${1:targetObjects}, ${2:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditor.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateEditorWithContext(${1:targetObjects}, ${2:context}, ${3:editorType});",
    "description": "Make a custom editor for targetObject or targetObjects with a context object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Editor.CreateEditorWithContext.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LightEditor.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightingDataAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "LightmapParameters.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.Bake();",
    "description": "Starts a synchronous bake job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.Bake.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.BakeAsync();",
    "description": "Starts an asynchronous bake job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.BakeAsync.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.BakeMultipleScenes(${1:paths});",
    "description": "Bakes an array of Scenes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.BakeMultipleScenes.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.BakeReflectionProbe(${1:probe}, ${2:path});",
    "description": "Starts a synchronous bake job for the probe.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.BakeReflectionProbe.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.Cancel();",
    "description": "Cancels the currently running asynchronous bake job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.Cancel.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.Clear();",
    "description": "Deletes all lightmap assets and makes all lights behave as if they weren't baked yet.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.Clear.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.ClearDiskCache();",
    "description": "Clears the cache used by lightmaps, reflection probes and default reflection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.ClearDiskCache.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.ClearLightingDataAsset();",
    "description": "Remove the lighting data asset used by the current Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.ClearLightingDataAsset.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.ForceStop();",
    "description": "Force the Progressive Path Tracer to stop baking and use the computed results as they are.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.ForceStop.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.GetTerrainGIChunks(${1:terrain}, ${2:numChunksX}, ${3:numChunksY});",
    "description": "Get how many chunks the terrain is divided into for GI baking.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.GetTerrainGIChunks.html",
    "type": "method"
  },
  {
    "snippet": "Lightmapping.Tetrahedralize(${1:positions}, ${2:outIndices}, ${3:outPositions});",
    "description": "Calculates a Delaunay Tetrahedralization of the 'positions' point set - the same way the lightmapper.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Lightmapping.Tetrahedralize.html",
    "type": "method"
  },
  {
    "snippet": "LODUtility.CalculateLODGroupBoundingBox(${1:group});",
    "description": "Recalculate the bounding region for the given LODGroup.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/LODUtility.CalculateLODGroupBoundingBox.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.ApplyMaterialPropertyDrawers(${1:material});",
    "description": "Apply initial MaterialPropertyDrawer values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.ApplyMaterialPropertyDrawers.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.ApplyMaterialPropertyDrawers(${1:targets});",
    "description": "Apply initial MaterialPropertyDrawer values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.ApplyMaterialPropertyDrawers.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.FixupEmissiveFlag(${1:col}, ${2:flags});",
    "description": "Returns a properly set global illlumination flag based on the passed in flag and the given color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.FixupEmissiveFlag.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.FixupEmissiveFlag(${1:mat});",
    "description": "Returns a properly set global illlumination flag based on the passed in flag and the given color.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.FixupEmissiveFlag.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetDefaultPropertyHeight(${1:prop});",
    "description": "Calculate height needed for the property, ignoring custom drawers.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetDefaultPropertyHeight.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge(${1:r});",
    "description": "Utility method for GUI layouting ShaderGUI. Used e.g for the rect after a left aligned Color field.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetFlexibleRectBetweenLabelAndField(${1:r});",
    "description": "Utility method for GUI layouting ShaderGUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetFlexibleRectBetweenLabelAndField.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetLeftAlignedFieldRect(${1:r});",
    "description": "Utility method for GUI layouting ShaderGUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetLeftAlignedFieldRect.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetMaterialProperties(${1:mats});",
    "description": "Get shader property information of the passed materials.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetMaterialProperties.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetMaterialProperty(${1:mats}, ${2:name});",
    "description": "Get information about a single shader property.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetMaterialProperty.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetMaterialProperty(${1:mats}, ${2:propertyIndex});",
    "description": "Get information about a single shader property.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetMaterialProperty.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetRectAfterLabelWidth(${1:r});",
    "description": "Utility method for GUI layouting ShaderGUI. This is the rect after the label which can be used for multiple properties. The input rect can be fetched by calling: EditorGUILayout.GetControlRect.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetRectAfterLabelWidth.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditor.GetRightAlignedFieldRect(${1:r});",
    "description": "Utility method for GUI layouting ShaderGUI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditor.GetRightAlignedFieldRect.html",
    "type": "method"
  },
  {
    "snippet": "MaterialEditorExtensions.PerformBumpMapCheck(${1:material});",
    "description": "Iterates over all the Material properties with the MaterialProperty.PropFlags.Normal flag and checks that the textures referenced by these properties are imported as TextureImporterType.NormalMap.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MaterialEditorExtensions.PerformBumpMapCheck.html",
    "type": "method"
  },
  {
    "snippet": "Menu.GetChecked(${1:menuPath});",
    "description": "Get the check status of the given menu.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Menu.GetChecked.html",
    "type": "method"
  },
  {
    "snippet": "Menu.SetChecked(${1:menuPath}, ${2:isChecked});",
    "description": "Set the check status of the given menu.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Menu.SetChecked.html",
    "type": "method"
  },
  {
    "snippet": "MeshUtility.GetMeshCompression(${1:mesh});",
    "description": "Returns the mesh compression setting for a Mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MeshUtility.GetMeshCompression.html",
    "type": "method"
  },
  {
    "snippet": "MeshUtility.Optimize(${1:mesh});",
    "description": "Optimizes the mesh for GPU access.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MeshUtility.Optimize.html",
    "type": "method"
  },
  {
    "snippet": "MeshUtility.SetMeshCompression(${1:mesh}, ${2:compression});",
    "description": "Change the mesh compression setting for a mesh.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MeshUtility.SetMeshCompression.html",
    "type": "method"
  },
  {
    "snippet": "MeshUtility.SetPerTriangleUV2(${1:src}, ${2:triUV});",
    "description": "Will insert per-triangle uv2 in mesh and handle vertex splitting etc.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MeshUtility.SetPerTriangleUV2.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ModelImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MonoScript.FromMonoBehaviour(${1:behaviour});",
    "description": "Returns the MonoScript object containing specified MonoBehaviour.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoScript.FromMonoBehaviour.html",
    "type": "method"
  },
  {
    "snippet": "MonoScript.FromScriptableObject(${1:scriptableObject});",
    "description": "Returns the MonoScript object containing specified ScriptableObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/MonoScript.FromScriptableObject.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "MovieImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.AddComponent(${1:gameObject}, ${2:type});",
    "description": "Creates a new component and adds it to the specified GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.AddComponent.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.AddComponent(${1:gameObject});",
    "description": "Creates a new component and adds it to the specified GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.AddComponent.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.CreateGameObject(${1:name}, ${2:types});",
    "description": "Creates a new GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.CreateGameObject.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.CreateInstance(${1:type});",
    "description": "Create a new instance of the given type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.CreateInstance();",
    "description": "Create a new instance of the given type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "ObjectFactory.CreatePrimitive(${1:type});",
    "description": "Creates a GameObject primitive.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectFactory.CreatePrimitive.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.GetClassName(${1:obj});",
    "description": "Class name of an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.GetClassName.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.GetDragAndDropTitle(${1:obj});",
    "description": "Drag and drop title for an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.GetDragAndDropTitle.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.GetInspectorTitle(${1:obj});",
    "description": "Inspector title for an object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.GetInspectorTitle.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.GetUniqueName(${1:existingNames}, ${2:name});",
    "description": "Make a unique name using the provided name as a base.If the target name is in the provided list of existing names, a unique name is generated by appending the next available numerical increment.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.GetUniqueName.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.NicifyVariableName(${1:name});",
    "description": "Make a displayable name for a variable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.NicifyVariableName.html",
    "type": "method"
  },
  {
    "snippet": "ObjectNames.SetNameSmart(${1:obj}, ${2:name});",
    "description": "Sets the name of an Object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ObjectNames.SetNameSmart.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.FocusWindowIfItsOpen(${1:t});",
    "description": "Focuses the first found EditorWindow of specified type if it is open.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.FocusWindowIfItsOpen.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.FocusWindowIfItsOpen();",
    "description": "Focuses the first found EditorWindow of specified type if it is open.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.FocusWindowIfItsOpen.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:t}, ${2:utility}, ${3:title}, ${4:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow();",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:utility});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:utility}, ${2:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:title}, ${2:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:utility}, ${2:title}, ${3:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:title}, ${2:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindow(${1:title}, ${2:focus}, ${3:desiredDockNextTo});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindow.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindowWithRect(${1:t}, ${2:rect}, ${3:utility}, ${4:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindowWithRect(${1:rect});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindowWithRect(${1:rect}, ${2:utility});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindowWithRect(${1:rect}, ${2:utility}, ${3:title});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.GetWindowWithRect(${1:rect}, ${2:utility}, ${3:title}, ${4:focus});",
    "description": "Returns the first EditorWindow of type t which is currently on the screen.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/EditorWindow.GetWindowWithRect.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsDebugWindow.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.ClearMouseHighlight();",
    "description": "Clears the highlighted Collider.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.ClearMouseHighlight.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.DeinitDebugDraw();",
    "description": "Deinitializes the physics debug visualization system and tracking of changes Colliders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.DeinitDebugDraw.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowBoxColliders(${1:filterWorkflow});",
    "description": "Should BoxColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowBoxColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowCapsuleColliders(${1:filterWorkflow});",
    "description": "Should CapsuleColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowCapsuleColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowCollisionLayer(${1:filterWorkflow}, ${2:layer});",
    "description": "Should the given layer for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowCollisionLayer.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowCollisionLayerMask(${1:filterWorkflow});",
    "description": "Should the mask representing the layers for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowCollisionLayerMask.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowKinematicBodies(${1:filterWorkflow});",
    "description": "Should the kinematic Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowKinematicBodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowMeshColliders(${1:filterWorkflow}, ${2:colliderType});",
    "description": "Should MeshColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowMeshColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowRigidbodies(${1:filterWorkflow});",
    "description": "Should any Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowRigidbodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowSleepingBodies(${1:filterWorkflow});",
    "description": "Should the sleeping Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowSleepingBodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowSphereColliders(${1:filterWorkflow});",
    "description": "Should SphereColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowSphereColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowStaticColliders(${1:filterWorkFlow});",
    "description": "Should the Colliders without a Rigidbody component be considered by the display filter for the given filterWorkflow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowStaticColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowTerrainColliders(${1:filterWorkflow});",
    "description": "Should TerrainColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowTerrainColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.GetShowTriggers(${1:filterWorkflow});",
    "description": "Should the triggers for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.GetShowTriggers.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.HasMouseHighlight();",
    "description": "Returns true if there currently is any kind of physics object highlighted.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.HasMouseHighlight.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.InitDebugDraw();",
    "description": "Initializes the physics debug visualization system. The system must be initialized for any physics objects to be visualized. It is normally initialized by the PhysicsDebugWindow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.InitDebugDraw.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.Reset();",
    "description": "Resets the visualization options to their default state.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.Reset.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowBoxColliders(${1:filterWorkflow}, ${2:show});",
    "description": "Should BoxColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowBoxColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowCapsuleColliders(${1:filterWorkflow}, ${2:show});",
    "description": "Should CapsuleColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowCapsuleColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowCollisionLayer(${1:filterWorkflow}, ${2:layer}, ${3:show});",
    "description": "Should the given layer for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowCollisionLayer.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowCollisionLayerMask(${1:filterWorkflow}, ${2:mask});",
    "description": "Should the mask representing the layers for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowCollisionLayerMask.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowForAllFilters(${1:filterWorkflow}, ${2:selected});",
    "description": "Enables or disables all filtering items for the current filterWorkflow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowForAllFilters.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowKinematicBodies(${1:filterWorkflow}, ${2:show});",
    "description": "Should the kinematic Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowKinematicBodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowMeshColliders(${1:filterWorkflow}, ${2:colliderType}, ${3:show});",
    "description": "Should MeshColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowMeshColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowRigidbodies(${1:filterWorkflow}, ${2:show});",
    "description": "Should any Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowRigidbodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowSleepingBodies(${1:filterWorkflow}, ${2:show});",
    "description": "Should the sleeping Rigidbodies for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowSleepingBodies.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowSphereColliders(${1:filterWorkflow}, ${2:show});",
    "description": "Should SphereColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowSphereColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowStaticColliders(${1:filterWorkflow}, ${2:show});",
    "description": "Should the Colliders without a Rigidbody component be considered by the display filter for the given filterWorkflow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowStaticColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowTerrainColliders(${1:filterWorkflow}, ${2:show});",
    "description": "Should TerrainColliders be shown.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowTerrainColliders.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.SetShowTriggers(${1:filterWorkflow}, ${2:show});",
    "description": "Should the triggers for the given filterWorkflow be considered by the display filter.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.SetShowTriggers.html",
    "type": "method"
  },
  {
    "snippet": "PhysicsVisualizationSettings.UpdateMouseHighlight(${1:screenPos});",
    "description": "Updates the mouse-over highlight at the given mouse position in screen space.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PhysicsVisualizationSettings.UpdateMouseHighlight.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "PlayerSettings.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "iOS.SetiPadLaunchScreenType(${1:type});",
    "description": "Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPad.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.iOS.SetiPadLaunchScreenType.html",
    "type": "method"
  },
  {
    "snippet": "iOS.SetiPhoneLaunchScreenType(${1:type});",
    "description": "Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPhone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.iOS.SetiPhoneLaunchScreenType.html",
    "type": "method"
  },
  {
    "snippet": "SplashScreenLogo.Create(${1:duration}, ${2:logo});",
    "description": "Creates a new Splash Screen logo with the provided duration and logo Sprite.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.SplashScreenLogo.Create.html",
    "type": "method"
  },
  {
    "snippet": "SplashScreenLogo.CreateWithUnityLogo(${1:duration});",
    "description": "Creates a new Splash Screen logo with the provided duration and the unity logo.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.SplashScreenLogo.CreateWithUnityLogo.html",
    "type": "method"
  },
  {
    "snippet": "WSA.GetVisualAssetsImage(${1:type}, ${2:scale});",
    "description": "Get path for image, that will be populated to the Visual Studio solution and the package manifest.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.WSA.GetVisualAssetsImage.html",
    "type": "method"
  },
  {
    "snippet": "WSA.SetVisualAssetsImage(${1:image}, ${2:type}, ${3:scale});",
    "description": "Set path for image, that will be populated to the Visual Studio solution and the package manifest.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PlayerSettings.WSA.SetVisualAssetsImage.html",
    "type": "method"
  },
  {
    "snippet": "PluginImporter.GetAllImporters();",
    "description": "Returns all plugin importers for all platforms.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PluginImporter.GetAllImporters.html",
    "type": "method"
  },
  {
    "snippet": "PluginImporter.GetImporters(${1:platform});",
    "description": "Returns all plugin importers for specfied platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PluginImporter.GetImporters.html",
    "type": "method"
  },
  {
    "snippet": "PluginImporter.GetImporters(${1:platformName});",
    "description": "Returns all plugin importers for specfied platform.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PluginImporter.GetImporters.html",
    "type": "method"
  },
  {
    "snippet": "PopupWindow.Show(${1:activatorRect}, ${2:windowContent});",
    "description": "Show a popup with the given PopupWindowContent.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PopupWindow.Show.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyAddedComponent(${1:component}, ${2:assetPath}, ${3:action});",
    "description": "Applies the added component to the Prefab Asset at the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyAddedComponent.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyAddedGameObject(${1:gameObject}, ${2:assetPath}, ${3:action});",
    "description": "Applies the added GameObject to the Prefab Asset at the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyAddedGameObject.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyObjectOverride(${1:instanceComponentOrGameObject}, ${2:assetPath}, ${3:action});",
    "description": "Applies all overridden properties on a Prefab instance component or GameObject to the Prefab Asset at the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyObjectOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyPrefabInstance(${1:instanceRoot}, ${2:action});",
    "description": "Applies all overrides on a Prefab instance to its Prefab Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyPropertyOverride(${1:instanceProperty}, ${2:assetPath}, ${3:action});",
    "description": "Applies a single overridden property on a Prefab instance to the Prefab Asset at the given asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyPropertyOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.ApplyRemovedComponent(${1:instanceGameObject}, ${2:assetComponent}, ${3:action});",
    "description": "Removes the component from the Prefab Asset which has the component on it.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.ApplyRemovedComponent.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetCorrespondingObjectFromOriginalSource(${1:componentOrGameObject});",
    "description": "Returns the object of origin for the given object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetCorrespondingObjectFromOriginalSource.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetCorrespondingObjectFromSource(${1:componentOrGameObject});",
    "description": "Returns the corresponding asset object of source, or null if it can't be found.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetCorrespondingObjectFromSource.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetCorrespondingObjectFromSourceAtPath(${1:componentOrGameObject}, ${2:assetPath});",
    "description": "Returns the corresponding object of the given object from a given Prefab Asset path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetCorrespondingObjectFromSourceAtPath.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetIconForGameObject(${1:gameObject});",
    "description": "Returns the icon for the given GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetIconForGameObject.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetNearestPrefabInstanceRoot(${1:componentOrGameObject});",
    "description": "Return the GameObject that is the root of the nearest Prefab instance the object is part of.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetNearestPrefabInstanceRoot.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetOutermostPrefabInstanceRoot(${1:componentOrGameObject});",
    "description": "Returns the GameObject that is the root of the outermost Prefab instance the object is part of.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetOutermostPrefabInstanceRoot.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot(${1:instanceComponentOrGameObject});",
    "description": "Returns the asset path of the nearest Prefab instance root the specified object is part of.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetPrefabAssetType(${1:componentOrGameObject});",
    "description": "Enum value indicating the type of Prefab Asset, such as Regular Prefab, Model Prefab and Prefab Variant.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetPrefabAssetType.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetPrefabInstanceHandle(${1:instanceComponentOrGameObject});",
    "description": "This function will give you the PrefabInstance object for the outermost Prefab instance the provided object is part of.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetPrefabInstanceHandle.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetPrefabInstanceStatus(${1:componentOrGameObject});",
    "description": "Enum value with status about whether a Prefab instance is properly connected to its asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetPrefabInstanceStatus.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.GetPropertyModifications(${1:targetPrefab});",
    "description": "Extract all modifications that are applied to the Prefab instance compared to the parent Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.GetPropertyModifications.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.HasPrefabInstanceAnyOverrides(${1:instanceRoot}, ${2:includeDefaultOverrides});",
    "description": "Returns true if the given Prefab instance has any overrides.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.HasPrefabInstanceAnyOverrides.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.InstantiateAttachedAsset(${1:targetObject});",
    "description": "Instantiate an asset that is referenced by a Prefab and use it on the Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.InstantiateAttachedAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.InstantiatePrefab(${1:assetComponentOrGameObject});",
    "description": "Instantiates the given Prefab in a given Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.InstantiatePrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.InstantiatePrefab(${1:assetComponentOrGameObject}, ${2:destinationScene});",
    "description": "Instantiates the given Prefab in a given Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.InstantiatePrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsAddedComponentOverride(${1:component});",
    "description": "Is this component added to a Prefab instance as an override?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsAddedComponentOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsAddedGameObjectOverride(${1:gameObject});",
    "description": "Is this GameObject added as a child to a Prefab instance as an override?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsAddedGameObjectOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsAnyPrefabInstanceRoot(${1:gameObject});",
    "description": "Is the GameObject the root of any Prefab instance?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsAnyPrefabInstanceRoot.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsDefaultOverride(${1:modification});",
    "description": "Returns true if the given modification is considered a default override.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsDefaultOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsDisconnectedFromPrefabAsset(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of an instance where the PrefabInstance object is missing but the given object has a valid corresponding object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsDisconnectedFromPrefabAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsOutermostPrefabInstanceRoot(${1:gameObject});",
    "description": "Is the GameObject the root of a Prefab instance, excluding nested Prefabs?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsOutermostPrefabInstanceRoot.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfAnyPrefab(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of any kind of Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfAnyPrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfImmutablePrefab(${1:componentOrGameObject});",
    "description": "Is this object part of a Prefab that cannot be edited?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfImmutablePrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfModelPrefab(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a Model Prefab Asset or Model Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfModelPrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfNonAssetPrefabInstance(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a Prefab instance and not part of an asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfNonAssetPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfPrefabAsset(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a Prefab Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfPrefabAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfPrefabInstance(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo(${1:gameObjectOrComponent});",
    "description": "Is this object part of a Prefab that cannot be applied to?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfRegularPrefab(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a regular Prefab instance or Prefab Asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfRegularPrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPartOfVariantPrefab(${1:componentOrGameObject});",
    "description": "Returns true if the given object is part of a Prefab Variant Asset or Prefab Variant instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPartOfVariantPrefab.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.IsPrefabAssetMissing(${1:instanceComponentOrGameObject});",
    "description": "Returns true if the given object is part of a Prefab instance but the source asset is missing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.IsPrefabAssetMissing.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.LoadPrefabContents(${1:assetPath});",
    "description": "Loads a Prefab Asset at a given path into an isolated Scene and returns the root GameObject of the Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.LoadPrefabContents.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.LoadPrefabContentsIntoPreviewScene(${1:prefabPath}, ${2:scene});",
    "description": "Loads a Prefab Asset at a given path into a given preview Scene and returns the root GameObject of the Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.LoadPrefabContentsIntoPreviewScene.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RecordPrefabInstancePropertyModifications(${1:targetObject});",
    "description": "Causes modifications made to the Prefab instance to be recorded.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RecordPrefabInstancePropertyModifications.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertAddedComponent(${1:component}, ${2:action});",
    "description": "Removes this added component on a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertAddedComponent.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertAddedGameObject(${1:gameObject}, ${2:action});",
    "description": "Removes this added GameObject from a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertAddedGameObject.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertObjectOverride(${1:instanceComponentOrGameObject}, ${2:action});",
    "description": "Reverts all overridden properties on a Prefab instance component or GameObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertObjectOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertPrefabInstance(${1:go});",
    "description": "Reverts all overrides on a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertPrefabInstance(${1:instanceRoot}, ${2:action});",
    "description": "Reverts all overrides on a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertPropertyOverride(${1:instanceProperty}, ${2:action});",
    "description": "Revert a single property override on a Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertPropertyOverride.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.RevertRemovedComponent(${1:instanceGameObject}, ${2:assetComponent}, ${3:action});",
    "description": "Adds this removed component back on the Prefab instance.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.RevertRemovedComponent.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SaveAsPrefabAsset(${1:instanceRoot}, ${2:assetPath});",
    "description": "Use this function to create a Prefab Asset at the given path from the given GameObject including any childen in the Scene without modifying the input objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SaveAsPrefabAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SaveAsPrefabAsset(${1:instanceRoot}, ${2:assetPath}, ${3:success});",
    "description": "Use this function to create a Prefab Asset at the given path from the given GameObject including any childen in the Scene without modifying the input objects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SaveAsPrefabAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SaveAsPrefabAssetAndConnect(${1:instanceRoot}, ${2:assetPath}, ${3:action});",
    "description": "Use this function to create a Prefab Asset at the given path from the given GameObject including any childen in the Scene and at the same make the given GameObject into an instance of the new Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SaveAsPrefabAssetAndConnect.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SaveAsPrefabAssetAndConnect(${1:instanceRoot}, ${2:assetPath}, ${3:action}, ${4:success});",
    "description": "Use this function to create a Prefab Asset at the given path from the given GameObject including any childen in the Scene and at the same make the given GameObject into an instance of the new Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SaveAsPrefabAssetAndConnect.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SavePrefabAsset(${1:asset});",
    "description": "Use this function to write a Prefab from the Library folder back to the Assets folder as a source asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SavePrefabAsset.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.SetPropertyModifications(${1:targetPrefab}, ${2:modifications});",
    "description": "Assigns all modifications that are applied to the Prefab instance compared to the parent Prefab.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.SetPropertyModifications.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.UnloadPrefabContents(${1:contentsRoot});",
    "description": "Releases the content from a Prefab previously loaded with LoadPrefabContents from memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.UnloadPrefabContents.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.UnpackPrefabInstance(${1:instanceRoot}, ${2:unpackMode}, ${3:action});",
    "description": "Unpacks a given Prefab instance so that it is replaced with the contents of the Prefab Asset while retaining all override values.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.UnpackPrefabInstance.html",
    "type": "method"
  },
  {
    "snippet": "PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots(${1:instanceRoot}, ${2:unpackMode});",
    "description": "This function will unpack the given Prefab instance using the behaviour specified by unpackMode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneAsset.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SceneView.AddCameraMode(${1:name}, ${2:section});",
    "description": "Add a custom camera mode to the Scene view camera mode list.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneView.AddCameraMode.html",
    "type": "method"
  },
  {
    "snippet": "SceneView.ClearUserDefinedCameraModes();",
    "description": "Remove all user-defined camera modes.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneView.ClearUserDefinedCameraModes.html",
    "type": "method"
  },
  {
    "snippet": "SceneView.GetBuiltinCameraMode(${1:cameraMode});",
    "description": "Returns a CameraMode corresponding to a builtin DrawCameraMode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SceneView.GetBuiltinCameraMode.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableWizard.DisplayWizard(${1:title});",
    "description": "Creates a wizard.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableWizard.DisplayWizard.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableWizard.DisplayWizard(${1:title}, ${2:createButtonName});",
    "description": "Creates a wizard.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableWizard.DisplayWizard.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableWizard.DisplayWizard(${1:title}, ${2:createButtonName}, ${3:otherButtonName});",
    "description": "Creates a wizard.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableWizard.DisplayWizard.html",
    "type": "method"
  },
  {
    "snippet": "ScriptableWizard.DisplayWizard(${1:title}, ${2:klass}, ${3:createButtonName}, ${4:otherButtonName});",
    "description": "Creates a wizard.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableWizard.DisplayWizard.html",
    "type": "method"
  },
  {
    "snippet": "Selection.Contains(${1:instanceID});",
    "description": "Returns whether an object is contained in the current selection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Selection.Contains.html",
    "type": "method"
  },
  {
    "snippet": "Selection.Contains(${1:obj});",
    "description": "Returns whether an object is contained in the current selection.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Selection.Contains.html",
    "type": "method"
  },
  {
    "snippet": "Selection.GetFiltered(${1:type}, ${2:mode});",
    "description": "Returns the current selection filtered by type and mode.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Selection.GetFiltered.html",
    "type": "method"
  },
  {
    "snippet": "Selection.GetTransforms(${1:mode});",
    "description": "Allows for fine grained control of the selection type using the SelectionMode bitmask.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Selection.GetTransforms.html",
    "type": "method"
  },
  {
    "snippet": "Selection.SetActiveObjectWithContext(${1:obj}, ${2:context});",
    "description": "Selects an object with a context.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Selection.SetActiveObjectWithContext.html",
    "type": "method"
  },
  {
    "snippet": "SerializedProperty.DataEquals(${1:x}, ${2:y});",
    "description": "Compares the data for two SerializedProperties. This method ignores paths and SerializedObjects.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SerializedProperty.DataEquals.html",
    "type": "method"
  },
  {
    "snippet": "SerializedProperty.EqualContents(${1:x}, ${2:y});",
    "description": "See if contained serialized properties are equal.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SerializedProperty.EqualContents.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseBool(${1:key});",
    "description": "Erase a Boolean entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseBool.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseFloat(${1:key});",
    "description": "Erase a Float entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseFloat.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseInt(${1:key});",
    "description": "Erase an Integer entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseInt.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseIntArray(${1:key});",
    "description": "Erase an Integer array entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseIntArray.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseString(${1:key});",
    "description": "Erase a String entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseString.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.EraseVector3(${1:key});",
    "description": "Erase a Vector3 entry in the key-value store.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.EraseVector3.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetBool(${1:key}, ${2:defaultValue});",
    "description": "Retrieve a Boolean value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetBool.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetFloat(${1:key}, ${2:defaultValue});",
    "description": "Retrieve a Float value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetFloat.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetInt(${1:key}, ${2:defaultValue});",
    "description": "Retrieve an Integer value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetInt.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetIntArray(${1:key}, ${2:defaultValue});",
    "description": "Retrieve an Integer array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetIntArray.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetString(${1:key}, ${2:defaultValue});",
    "description": "Retrieve a String value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetString.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.GetVector3(${1:key}, ${2:defaultValue});",
    "description": "Retrieve a Vector3.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.GetVector3.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetBool(${1:key}, ${2:value});",
    "description": "Store a Boolean value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetBool.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetFloat(${1:key}, ${2:value});",
    "description": "Store a Float value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetFloat.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetInt(${1:key}, ${2:value});",
    "description": "Store an Integer value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetInt.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetIntArray(${1:key}, ${2:value});",
    "description": "Store an Integer array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetIntArray.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetString(${1:key}, ${2:value});",
    "description": "Store a String value.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetString.html",
    "type": "method"
  },
  {
    "snippet": "SessionState.SetVector3(${1:key}, ${2:value});",
    "description": "Store a Vector3.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SessionState.SetVector3.html",
    "type": "method"
  },
  {
    "snippet": "SettingsService.NotifySettingsProviderChanged();",
    "description": "Use this function to notify the SettingsService that a SettingsProvider changed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SettingsService.NotifySettingsProviderChanged.html",
    "type": "method"
  },
  {
    "snippet": "SettingsService.OpenProjectSettings(${1:settingsPath});",
    "description": "Open the Project Settings window with the specified settings item already selected.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SettingsService.OpenProjectSettings.html",
    "type": "method"
  },
  {
    "snippet": "SettingsService.OpenUserPreferences(${1:settingsPath});",
    "description": "Open the Preferences window with the specified settings item already selected.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SettingsService.OpenUserPreferences.html",
    "type": "method"
  },
  {
    "snippet": "ShaderGUI.FindProperty(${1:propertyName}, ${2:properties});",
    "description": "Find shader properties.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderGUI.FindProperty.html",
    "type": "method"
  },
  {
    "snippet": "ShaderGUI.FindProperty(${1:propertyName}, ${2:properties}, ${3:propertyIsMandatory});",
    "description": "Find shader properties.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderGUI.FindProperty.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.ClearShaderErrors(${1:s});",
    "description": "Clear compile time errors for the given shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.ClearShaderErrors.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetAllShaderInfo();",
    "description": "Returns an array of ShaderInfo of all available shaders. That includes built-in shaders.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetAllShaderInfo.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetPropertyCount(${1:s});",
    "description": "Get the number of properties in Shader s.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetPropertyCount.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetPropertyDescription(${1:s}, ${2:propertyIdx});",
    "description": "Get the description of the shader propery at index propertyIdx of Shader s.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetPropertyDescription.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetPropertyName(${1:s}, ${2:propertyIdx});",
    "description": "Get the name of the shader propery at index propertyIdx of Shader s.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetPropertyName.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetPropertyType(${1:s}, ${2:propertyIdx});",
    "description": "Get the ShaderProperyType of the shader propery at index propertyIdx of Shader s.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetPropertyType.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetRangeLimits(${1:s}, ${2:propertyIdx}, ${3:defminmax});",
    "description": "Get Limits for a range property at index propertyIdx of Shader s.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetRangeLimits.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetShaderData(${1:shader});",
    "description": "Get the shader data for a specific shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetShaderData.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.GetTexDim(${1:s}, ${2:propertyIdx});",
    "description": "Gets texture dimension of a shader property.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.GetTexDim.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.IsShaderPropertyHidden(${1:s}, ${2:propertyIdx});",
    "description": "Is the shader propery at index propertyIdx of Shader s hidden?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.IsShaderPropertyHidden.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.IsShaderPropertyNonModifiableTexureProperty(${1:s}, ${2:propertyIdx});",
    "description": "Is the shader propery at index propertyIdx of Shader s a NonModifiableTextureProperty?",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.IsShaderPropertyNonModifiableTexureProperty.html",
    "type": "method"
  },
  {
    "snippet": "ShaderUtil.RegisterShader(${1:shader});",
    "description": "Register a user created shader.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ShaderUtil.RegisterShader.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SketchUpImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpeedTreeImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "SpriteRect.GetSpriteIDFromSerializedProperty(${1:sp});",
    "description": "Helper method to get SpriteRect.spriteID from a SerializedProperty.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/SpriteRect.GetSpriteIDFromSerializedProperty.html",
    "type": "method"
  },
  {
    "snippet": "StaticOcclusionCulling.Cancel();",
    "description": "Used to cancel asynchronous generation of static occlusion culling data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticOcclusionCulling.Cancel.html",
    "type": "method"
  },
  {
    "snippet": "StaticOcclusionCulling.Clear();",
    "description": "Clears the PVS of the opened Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticOcclusionCulling.Clear.html",
    "type": "method"
  },
  {
    "snippet": "StaticOcclusionCulling.Compute();",
    "description": "Used to generate static occlusion culling data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticOcclusionCulling.Compute.html",
    "type": "method"
  },
  {
    "snippet": "StaticOcclusionCulling.GenerateInBackground();",
    "description": "Used to compute static occlusion culling data asynchronously.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/StaticOcclusionCulling.GenerateInBackground.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.CheckNormalMapTextureType(${1:texture});",
    "description": "Checks whether the texture is correctly imported as a normal map texture.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.CheckNormalMapTextureType.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.ShowTerrainLayersSelectionHelper(${1:terrain}, ${2:activeTerrainLayer});",
    "description": "Helper function to show the layer selection window for selecting terrain layers in inspector.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.ShowTerrainLayersSelectionHelper.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.TilingSettingsUI(${1:terrainLayer});",
    "description": "Displays the tiling settings UI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.TilingSettingsUI.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.TilingSettingsUI(${1:tileSize}, ${2:tileOffset});",
    "description": "Displays the tiling settings UI.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.TilingSettingsUI.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.ValidateDiffuseTextureUI(${1:texture});",
    "description": "Checks whether the texture is a valid TerrainLayer diffuse texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.ValidateDiffuseTextureUI.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.ValidateMaskMapTextureUI(${1:texture});",
    "description": "Checks whether the texture is a valid TerrainLayer mask map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.ValidateMaskMapTextureUI.html",
    "type": "method"
  },
  {
    "snippet": "TerrainLayerUtility.ValidateNormalMapTextureUI(${1:texture}, ${2:normalMapTextureType});",
    "description": "Checks whether the texture is a valid TerrainLayer normal map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TerrainLayerUtility.ValidateNormalMapTextureUI.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TextureImporterSettings.Equal(${1:a}, ${2:b});",
    "description": "Test texture importer settings for equality.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TextureImporterSettings.Equal.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "Tools.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "Tools.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tools.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Tools.CreateInstance(${1:className});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Tools.CreateInstance(${1:type});",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "Tools.CreateInstance();",
    "description": "Creates an instance of a scriptable object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/ScriptableObject.CreateInstance.html",
    "type": "method"
  },
  {
    "snippet": "TransformUtils.GetInspectorRotation(${1:t});",
    "description": "Returns the rotation of a transform as it is shown in the Transform Inspector window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TransformUtils.GetInspectorRotation.html",
    "type": "method"
  },
  {
    "snippet": "TransformUtils.SetInspectorRotation(${1:t}, ${2:r});",
    "description": "Sets the rotation of a transform as it would be set by the Transform Inspector window.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/TransformUtils.SetInspectorRotation.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "TrueTypeFontImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "Undo.AddComponent(${1:gameObject}, ${2:type});",
    "description": "Adds a component to the game object and registers an undo operation for this action.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.AddComponent.html",
    "type": "method"
  },
  {
    "snippet": "Undo.AddComponent(${1:gameObject});",
    "description": "Adds a component to the game object and registers an undo operation for this action.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.AddComponent.html",
    "type": "method"
  },
  {
    "snippet": "Undo.ClearAll();",
    "description": "Removes all undo and redo operations from  respectively the undo and redo stacks.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.ClearAll.html",
    "type": "method"
  },
  {
    "snippet": "Undo.ClearUndo(${1:identifier});",
    "description": "Removes all Undo operation for the identifier object registered using Undo.RegisterCompleteObjectUndo from the undo stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.ClearUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.CollapseUndoOperations(${1:groupIndex});",
    "description": "Collapses all undo operation up to group index together into one step.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.CollapseUndoOperations.html",
    "type": "method"
  },
  {
    "snippet": "Undo.DestroyObjectImmediate(${1:objectToUndo});",
    "description": "Destroys the object and records an undo operation so that it can be recreated.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.DestroyObjectImmediate.html",
    "type": "method"
  },
  {
    "snippet": "Undo.FlushUndoRecordObjects();",
    "description": "Ensure objects recorded using RecordObject or ::ref:RecordObjects are registered as an undoable action. In most cases there is no reason to invoke FlushUndoRecordObjects since it's automatically done right after mouse-up and certain other events that conventionally marks the end of an action.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.FlushUndoRecordObjects.html",
    "type": "method"
  },
  {
    "snippet": "Undo.GetCurrentGroup();",
    "description": "Unity automatically groups undo operations by the current group index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.GetCurrentGroup.html",
    "type": "method"
  },
  {
    "snippet": "Undo.GetCurrentGroupName();",
    "description": "Get the name that will be shown in the UI for the current undo group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.GetCurrentGroupName.html",
    "type": "method"
  },
  {
    "snippet": "Undo.IncrementCurrentGroup();",
    "description": "Unity automatically groups undo operations by the current group index.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.IncrementCurrentGroup.html",
    "type": "method"
  },
  {
    "snippet": "Undo.MoveGameObjectToScene(${1:go}, ${2:scene}, ${3:name});",
    "description": "Move a GameObject from its current Scene to a new Scene.\nIt is required that the GameObject is at the root of its current Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.MoveGameObjectToScene.html",
    "type": "method"
  },
  {
    "snippet": "Undo.PerformRedo();",
    "description": "Perform an Redo operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.PerformRedo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.PerformUndo();",
    "description": "Perform an Undo operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.PerformUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RecordObject(${1:objectToUndo}, ${2:name});",
    "description": "Records any changes done on the object after the RecordObject function.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RecordObject.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RecordObjects(${1:objectsToUndo}, ${2:name});",
    "description": "Records multiple undoable objects in a single call. This is the same as calling Undo.RecordObject multiple times.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RecordObjects.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RegisterCompleteObjectUndo(${1:objectToUndo}, ${2:name});",
    "description": "Stores a copy of the object states on the undo stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RegisterCompleteObjectUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RegisterCompleteObjectUndo(${1:objectsToUndo}, ${2:name});",
    "description": "Stores a copy of the object states on the undo stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RegisterCompleteObjectUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RegisterCreatedObjectUndo(${1:objectToUndo}, ${2:name});",
    "description": "Register an undo operations for a newly created object.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RegisterCreatedObjectUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RegisterFullObjectHierarchyUndo(${1:objectToUndo}, ${2:name});",
    "description": "Copy the states of a hierarchy of objects onto the undo stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RegisterFullObjectHierarchyUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RegisterFullObjectHierarchyUndo(${1:objectToUndo});",
    "description": "Copy the states of a hierarchy of objects onto the undo stack.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RegisterFullObjectHierarchyUndo.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RevertAllDownToGroup(${1:group});",
    "description": "Performs all undo operations up to the group index without storing a redo operation in the process.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RevertAllDownToGroup.html",
    "type": "method"
  },
  {
    "snippet": "Undo.RevertAllInCurrentGroup();",
    "description": "Performs the last undo operation but does not record a redo operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.RevertAllInCurrentGroup.html",
    "type": "method"
  },
  {
    "snippet": "Undo.SetCurrentGroupName(${1:name});",
    "description": "Set the name of the current undo group.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.SetCurrentGroupName.html",
    "type": "method"
  },
  {
    "snippet": "Undo.SetTransformParent(${1:transform}, ${2:newParent}, ${3:name});",
    "description": "Sets the parent of transform to the new parent and records an undo operation.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Undo.SetTransformParent.html",
    "type": "method"
  },
  {
    "snippet": "UnwrapParam.SetDefaults(${1:param});",
    "description": "Will set default values for params.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/UnwrapParam.SetDefaults.html",
    "type": "method"
  },
  {
    "snippet": "Unwrapping.GeneratePerTriangleUV(${1:src});",
    "description": "Will generate per-triangle uv (3 UVs for each triangle) with default settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unwrapping.GeneratePerTriangleUV.html",
    "type": "method"
  },
  {
    "snippet": "Unwrapping.GeneratePerTriangleUV(${1:src}, ${2:settings});",
    "description": "Will generate per-triangle uv (3 UVs for each triangle) with default settings.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unwrapping.GeneratePerTriangleUV.html",
    "type": "method"
  },
  {
    "snippet": "Unwrapping.GenerateSecondaryUVSet(${1:src});",
    "description": "Will auto generate uv2 with default settings for provided mesh, and fill them in.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unwrapping.GenerateSecondaryUVSet.html",
    "type": "method"
  },
  {
    "snippet": "Unwrapping.GenerateSecondaryUVSet(${1:src}, ${2:settings});",
    "description": "Will auto generate uv2 with default settings for provided mesh, and fill them in.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unwrapping.GenerateSecondaryUVSet.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.GetAtPath(${1:path});",
    "description": "Retrieves the asset importer for the asset at path.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/AssetImporter.GetAtPath.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Destroy(${1:obj}, ${2:t});",
    "description": "Removes a gameobject, component or asset.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Destroy.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.DestroyImmediate(${1:obj}, ${2:allowDestroyingAssets});",
    "description": "Destroys the object obj immediately. You are strongly recommended to use Destroy instead.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.DontDestroyOnLoad(${1:target});",
    "description": "Do not destroy the target Object when loading a new Scene.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.FindObjectOfType(${1:type});",
    "description": "Returns the first active loaded object of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.FindObjectsOfType(${1:type});",
    "description": "Returns a list of all active loaded objects of Type type.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.FindObjectsOfType.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:parent}, ${3:instantiateInWorldSpace});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:parent}, ${3:worldPositionStays});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "VideoClipImporter.Instantiate(${1:original}, ${2:position}, ${3:rotation}, ${4:parent});",
    "description": "Clones the object original and returns the clone.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Object.Instantiate.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckDeallocateAndThrow(${1:handle});",
    "description": "Checks if the handle can be deallocated. Throws an exception if it has already been destroyed or a job is currently accessing the data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckDeallocateAndThrow.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckExistsAndThrow(${1:handle});",
    "description": "Checks if the handle is still valid and throws an exception if it is already destroyed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckExistsAndThrow.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckGetSecondaryDataPointerAndThrow(${1:handle});",
    "description": "CheckGetSecondaryDataPointerAndThrow.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckGetSecondaryDataPointerAndThrow.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckReadAndThrow(${1:handle});",
    "description": "Checks if the handle can be read from. Throws an exception if already destroyed or a job is currently writing to the data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckReadAndThrow.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckWriteAndBumpSecondaryVersion(${1:handle});",
    "description": "Performs CheckWriteAndThrow and then bumps the secondary version.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndBumpSecondaryVersion.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.CheckWriteAndThrow(${1:handle});",
    "description": "Checks if the handle can be written to. Throws an exception if already destroyed or a job is currently reading or writing to the data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrow.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.Create();",
    "description": "Creates a new AtomicSafetyHandle that is valid until AtomicSafetyHandle.Release is called.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.Create.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.EnforceAllBufferJobsHaveCompleted(${1:handle});",
    "description": "Waits for all jobs running against this AtomicSafetyHandle to complete.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.EnforceAllBufferJobsHaveCompleted.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.EnforceAllBufferJobsHaveCompletedAndDisableReadWrite(${1:handle});",
    "description": "Waits for all jobs running against this AtomicSafetyHandle to complete and then disables the read and write access on this atomic safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.EnforceAllBufferJobsHaveCompletedAndDisableReadWrite.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.EnforceAllBufferJobsHaveCompletedAndRelease(${1:handle});",
    "description": "Waits for all jobs running against this AtomicSafetyHandle to complete and then releases the atomic safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.EnforceAllBufferJobsHaveCompletedAndRelease.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetAllowReadOrWriteAccess(${1:handle});",
    "description": "Returns true if the AtomicSafetyHandle is configured to allow reading or writing.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetAllowReadOrWriteAccess.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetReaderArray(${1:handle}, ${2:maxCount}, ${3:output});",
    "description": "Fetch the job handles of all jobs reading from the safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetReaderArray.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetReaderName(${1:handle}, ${2:readerIndex});",
    "description": "Return the name of the specified reading job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetReaderName.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetTempMemoryHandle();",
    "description": "Returns the safety handle which should be used for all temp memory allocations in this temp memory scope. All temp memory allocations share the same safety handle since they are automatically disposed of at the same time.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetTempMemoryHandle.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetTempUnsafePtrSliceHandle();",
    "description": "Returns a single shared handle, that can be shared by for example NativeSlice pointing to stack memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetTempUnsafePtrSliceHandle.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetWriter(${1:handle});",
    "description": "Return the writer (if any) on an atomic safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetWriter.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.GetWriterName(${1:handle});",
    "description": "Return the debug name of the current writer on an atomic safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.GetWriterName.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.IsTempMemoryHandle(${1:handle});",
    "description": "Checks if an AtomicSafetyHandle is the temp memory safety handle for the currently active temp memory scope.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.IsTempMemoryHandle.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.PrepareUndisposable(${1:handle});",
    "description": "Marks the AtomicSafetyHandle so that it cannot be disposed of.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.PrepareUndisposable.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.Release(${1:handle});",
    "description": "Releases a previously created AtomicSafetyHandle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.Release.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.SetAllowReadOrWriteAccess(${1:handle}, ${2:allowReadWriteAccess});",
    "description": "Lets you prevent read or write access on the atomic safety handle.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.SetAllowReadOrWriteAccess.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.SetAllowSecondaryVersionWriting(${1:handle}, ${2:allowWriting});",
    "description": "Switches the AtomicSafetyHandle to the secondary version number.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.SetAllowSecondaryVersionWriting.html",
    "type": "method"
  },
  {
    "snippet": "AtomicSafetyHandle.UseSecondaryVersion(${1:handle});",
    "description": "Switches the AtomicSafetyHandle to the secondary version number.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.UseSecondaryVersion.html",
    "type": "method"
  },
  {
    "snippet": "DisposeSentinel.Clear(${1:sentinel});",
    "description": "Clears the DisposeSentinel.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.DisposeSentinel.Clear.html",
    "type": "method"
  },
  {
    "snippet": "DisposeSentinel.Create();",
    "description": "Creates a new AtomicSafetyHandle and a new DisposeSentinel, to be used to track safety and leaks on some native data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.DisposeSentinel.Create.html",
    "type": "method"
  },
  {
    "snippet": "DisposeSentinel.Dispose(${1:safety}, ${2:sentinel});",
    "description": "Releases the AtomicSafetyHandle and clears the DisposeSentinel.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.DisposeSentinel.Dispose.html",
    "type": "method"
  },
  {
    "snippet": "NativeSliceUnsafeUtility.ConvertExistingDataToNativeSlice();",
    "description": "ConvertExistingDataToNativeSlice.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.NativeSliceUnsafeUtility.ConvertExistingDataToNativeSlice.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.AlignOf();",
    "description": "Minimum alignment of a struct.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.AlignOf.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.GetFieldOffset(${1:field});",
    "description": "Returns the offset of the field relative struct or class it is contained in.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.GetFieldOffset.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.IsBlittable();",
    "description": "Returns whether the struct is blittable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsBlittable.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.IsBlittable(${1:type});",
    "description": "Returns whether the struct is blittable.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsBlittable.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.IsValidAllocator(${1:allocator});",
    "description": "Returns true if the allocator label is valid and can be used to allocate or deallocate memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsValidAllocator.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.Malloc();",
    "description": "Allocate memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.Malloc.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.MemClear();",
    "description": "Clear memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.MemClear.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.MemCmp();",
    "description": "Checks to see whether two memory regions are identical or not by comparing a specified memory region in the first given memory buffer with the same region in the second given memory buffer.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.MemCmp.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.MemCpy();",
    "description": "Copy memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.MemCpy.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.MemCpyReplicate();",
    "description": "Copy memory and replicate.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.MemCpyReplicate.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.MemMove();",
    "description": "Move memory.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.MemMove.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.PinGCArrayAndGetDataAddress();",
    "description": "Keeps a strong GC reference to the object and pins it. The object is guranteed to not move its memory location in a moving GC. Returns the address of the first element of the array.See Also: UnsafeUtility.ReleaseGCObject.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.PinGCArrayAndGetDataAddress.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.ReleaseGCObject(${1:gcHandle});",
    "description": "Releases a GC Object Handle, previously aquired by UnsafeUtility.PinGCObjectAndGetAddress.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.ReleaseGCObject.html",
    "type": "method"
  },
  {
    "snippet": "UnsafeUtility.SizeOf();",
    "description": "Size of struct.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Collections.LowLevel.Unsafe.UnsafeUtility.SizeOf.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.CreateJobReflectionData();",
    "description": "Creates job reflection data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.CreateJobReflectionData.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.CreateJobReflectionData();",
    "description": "Creates job reflection data.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.CreateJobReflectionData.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.GetJobRange(${1:ranges}, ${2:jobIndex}, ${3:beginIndex}, ${4:endIndex});",
    "description": "Returns the begin index and end index of the range.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.GetJobRange.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.GetWorkStealingRange(${1:ranges}, ${2:jobIndex}, ${3:beginIndex}, ${4:endIndex});",
    "description": "Returns the work stealing range.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.GetWorkStealingRange.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.PatchBufferMinMaxRanges();",
    "description": "Injects debug checks for min and max ranges of native array.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.PatchBufferMinMaxRanges.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.Schedule(${1:parameters});",
    "description": "Schedule a single IJob.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.Schedule.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.ScheduleParallelFor(${1:parameters}, ${2:arrayLength}, ${3:innerloopBatchCount});",
    "description": "Schedule a IJobParallelFor job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.ScheduleParallelFor.html",
    "type": "method"
  },
  {
    "snippet": "JobsUtility.ScheduleParallelForTransform(${1:parameters}, ${2:transfromAccesssArray});",
    "description": "Schedule a IJobParallelForTransform job.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.LowLevel.Unsafe.JobsUtility.ScheduleParallelForTransform.html",
    "type": "method"
  },
  {
    "snippet": "IJobExtensions.Run(${1:jobData});",
    "description": "Perform the job's Execute method immediately on the same thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.IJobExtensions.Run.html",
    "type": "method"
  },
  {
    "snippet": "IJobExtensions.Schedule(${1:jobData}, ${2:dependsOn});",
    "description": "Schedule the job for execution on a worker thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.IJobExtensions.Schedule.html",
    "type": "method"
  },
  {
    "snippet": "IJobParallelForExtensions.Run(${1:jobData}, ${2:arrayLength});",
    "description": "Perform the job's Execute method immediately on the same thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.IJobParallelForExtensions.Run.html",
    "type": "method"
  },
  {
    "snippet": "IJobParallelForExtensions.Schedule(${1:jobData}, ${2:arrayLength}, ${3:innerloopBatchCount}, ${4:dependsOn});",
    "description": "Schedule the job for execution on a worker thread.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.IJobParallelForExtensions.Schedule.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.CheckFenceIsDependencyOrDidSyncFence(${1:jobHandle}, ${2:dependsOn});",
    "description": "CheckFenceIsDependencyOrDidSyncFence.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.CheckFenceIsDependencyOrDidSyncFence.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.CombineDependencies(${1:job0}, ${2:job1});",
    "description": "Combines multiple dependencies into a single one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.CombineDependencies.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.CombineDependencies(${1:job0}, ${2:job1}, ${3:job2});",
    "description": "Combines multiple dependencies into a single one.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.CombineDependencies.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.CompleteAll(${1:job0}, ${2:job1});",
    "description": "Ensures that all jobs have completed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.CompleteAll.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.CompleteAll(${1:job0}, ${2:job1}, ${3:job2});",
    "description": "Ensures that all jobs have completed.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.CompleteAll.html",
    "type": "method"
  },
  {
    "snippet": "JobHandle.ScheduleBatchedJobs();",
    "description": "By default jobs are only put on a local queue when using Job Schedule functions, this actually makes them available to the worker threads to execute them.",
    "descriptionMoreURL": "https://docs.unity3d.com/ScriptReference/Unity.Jobs.JobHandle.ScheduleBatchedJobs.html",
    "type": "method"
  }
]
